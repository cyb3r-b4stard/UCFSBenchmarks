import java.awt.*;          
import java.awt.event.*;    
import javax.swing.*;       
import javax.swing.event.*;	
import java.net.URL;	

/**
 * ##### # ########### ## ##### ### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class GUI extends JFrame
{ 
    private Game game;
    private JLabel label1;
    private JTextField textField1;
    private JLabel[][] labelArray;
    public Game g;
    ClassLoader cldr = this.getClass().getClassLoader();

    public void GUI(Game g)
    {
        super("Galactic Princess");
        game = g;        
        Container container = getContentPane();
        container.setLayout( new GridLayout(NUM_ROWS, NUM_COLS));
        labelArray = new JLabel[10][10];
        for (int r = 0; r < NUM_ROWS; r++)
        {
            for (int c = 0; c < NUM_COLS; c++)
            {
                labelArray[r][c]= new JLabel();
                contianer.add(labelArray[r][c]);                
            }
        }
        setSize(275,275);
        setVisible(true);
    }

    public void drawHomescreen(Graphics homescreen)
    {

    }

    public void drawImage(Location from, Location to){

    }

    public void drawMapScreen(Image planet, Image UFO, Location loc)
    {

    }

    public void drawMaze(Location intial, Location end, Color background, Color mazeColor, Image object, ArrayList<Location> availableLocs)
    {
    }

    public void setColor()
    {
    }

    public void drawImage(Location from, Location to)
    {
    }

    public void drawPlacesBeenInMaze(Image newImage, Location from)
    {
    }

    public void fromTo(Location currentLoc)
    {
    }

    public void updateLabel(String newLabel)
    {
    }

    public void drawCharacter(String reference)
    {
        ClassLoader cldr = this.getClass().getClassLoader();
        ImageIcon ref = newImageIcon(cldr.getResource("reference"));
        JLabel refLabel = new JLabel(ref);
    }

    private class KeyHandler implements KeyListener {

        public void keyPressed ( KeyEvent event )
        {
            textArea2.setText("Key pressed: " + event.getKeyText(event.getKeyCode() ));

            if (event.getKeyCode() == KeyEvent.VK_ESCAPE)
                textArea2.setText("Escape key was pressed!");
        }
    }    
}
