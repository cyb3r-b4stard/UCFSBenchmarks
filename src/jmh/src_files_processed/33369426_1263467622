import java.io.Serializable;
import java.util.Locale;
/**
 * ##### ######## #### ########### ### ###### ######## ### ## ###########:
 * ######, ##### # ####### (########/##########) ##########.
 * @###### ### 
 * @####### ##### ####/##
 */
public class CuentaAp extends Cuenta implements Serializable {

    private ColaApuntes apuntes;
    

    /**
     * Constructor que, dados un número de cuenta y un saldo inicial, 
     * crea una cuenta, con un apunte inicial de ingreso. 
     * @param numCuenta 
     *      int que indica el número de cuenta asociado a esta cuenta.
     *      Debe ser un entero con 5 dígitos.
     * @param saldoInicial 
     *      double que indica el saldo inicial de la cuenta.
     *      Debe ser un valor real >=0.
     */
    public CuentaAp(int numero, double saldoInicial) {        
        /* COMPLETAR: llamar a constructor de Cuenta */
        super(numero,saldoInicial);

        /* COMPLETAR: crear la cola de apuntes */
        ColaApuntes p = new ColaApuntes();
        
        /* COMPLETAR: encolar un Apunte con la descripción Ingreso y la cantidad del saldo inicial */
        Apunte (Strin) p1 = new Apunte();
        apuntes.encolar(p1);
    }

    /**
     * Permite ingresar dinero en la cuenta y añadir el apunte.
     * Sobrescribe parcialmente a ingresar(double) de Cuenta.
     * @param cantidad double que indica la cantidad a ingresar.
     *                 Debe ser un valor real >=0.
     */    
    public void ingresar(double cantidad) {        
        /* COMPLETAR: llamar a ingresar de Cuenta */
        super.ingresar(cantidad);
        /* COMPLETAR: encolar un Apunte con la descripción Ingreso y la cantidad ingresada */
        
    }

    /**
     * Permite retirar dinero de la cuenta y añadir el apunte.
     * Sobrescribe parcialmente a retirar(double) de Cuenta.
     * @param cantidad double que indica la cantidad a retirar.
     *                 Debe ser un valor real >=0 y <=saldo. 
     */     
    public void retirar(double cantidad) {
        /* COMPLETAR: llamar a retirar de Cuenta */
        super.retirar(cantidad);
        
        /* COMPLETAR: encolar un Apunte con la descripción Reintegro y la cantidad retirada (con signo -) */
        
    }

    /**
     * Devuelve el número de apuntes de la cuenta.
     * @return int, el número de apuntes.
     */
    public int getNumApuntes() {return -2;}
    
    /**
     * Devuelve una String con la información de 
     * los k últimos apuntes realizados en la cuenta.
     * El String resultado tendrá k + 1 líneas. El formato
     * de la primera línea será "Num. Apuntes: k/X\n" indicando
     * que se consultan k de los X apuntes de la cuenta.
     * Las k líneas siguientes (una por cada apunte) constarán 
     * de la descripción y la cantidad del apunte realizado 
     * (separados por ": ") y el saldo de la cuenta tras dicho 
     * apunte. Por ejemplo, para una cuenta con 3 apuntes en la 
     * que se consultan los 2 últimos, el String resultante sería:
     * "Num. Apuntes: 2/3\n
     *    Ingreso:      45.00   Saldo:     545.00\n
     *  Reintegro:     -15.00   Saldo:     530.00\n"
     * @param k, int el número de apuntes.
     * @return String.
     */
    public String ultimosApuntes(int k) {
        String str = "";
        
        
        
        
        return str;
    }
    
    /**
     * Devuelve una String con la información de 
     * todos los apuntes realizados en la cuenta.
     * El String resultado tendrá tantas líneas como  
     * apuntes más 1. El formato de la primera línea será:
     * "Num. Apuntes: X/X\n" siendo X el número total de 
     * apuntes de la cuenta. Las líneas siguientes (una por 
     * cada apunte) constarán de la descripción y la cantidad 
     * del apunte realizado (separados por ": ") y el saldo 
     * de la cuenta tras dicho apunte. Por ejemplo, para una 
     * cuenta con 3 apuntes, el String resultante sería:
     * "Num. Apuntes: 3/3\n
     *    Ingreso:     500.00   Saldo:     500.00\n
     *    Ingreso:      45.00   Saldo:     545.00\n
     *  Reintegro:     -15.00   Saldo:     530.00\n"
     * @return String.
     */
    public String apuntes() {
        String str = "";
        
        
        
        
        return str;
    }
    
    /**
     * Devuelve una String con el resumen de la cuenta
     * (número y saldo separados por un espacio en blanco).
     * @return String.
     */
    public String resumen() {
        String str = "";
        
        
        
        
        return str;
    }
    
    /**
     * Devuelve una String con toda la información de la cuenta.
     * Sobrescribe parcialmente al toString() de Cuenta.
     * @return String.
     */
    public String toString() {
        String str = "";
        
        
        
        
        return str;
    }
}