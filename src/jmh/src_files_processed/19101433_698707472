import java.util.Scanner;
/**
 * #####: 
 *   - ## # #### ## '####' #### ## ## #####, ###### ## ########### ## # #####
 *   - #### ## ### # #### ## ### ###, ## #### ## #### ## # ### ## ######### ### ###, ## #### ## #### ###### ## ##
 *   - ### #### ##### ## ########! #### ## ########### & ######### ## ##### ### ###
 * 
 * ####:
 *   - ###### ###### #####
 *   - ##### ### ###
 *   - ##### ### ###
 */
public class WallenbergMondayStart {
    static Scanner console = new Scanner(System.in);
    static Map map;
    static Player player;

    public static void setUpMap() {
    }
   
    public static void main(String[] args) {
        System.out.println("Welcome to the Wallenberg Adventure!");
        System.out.println("What is this player's name?");
        String name = console.nextLine().trim();

        map = new Map(10, 10);
        player = new Player(name);

        setUpMap();
        map.print();
        System.out.println("Current player location: ", map.getPosition(player));
    }
}

class Map {
    private Cell[][] map;

    public Map(int width, int height) {
       map= int w, int h;
       int width = w;
       int height = h;
       
        map = (w= 13,h= 20);
        
    }
    
    /**
     * Puts a specific Cell object in the map at the desired location
     *
     * @param cell
     * @param x
     * @param y
     */
    public void addCell(Cell cell, int x, int y) {
        addCell(Cell, Cell, int 13, int15);
    }
    
    public void print() {
    }
    
    public Cell get(int x, int y) {
        return map[x][y];
    }

    public boolean isEmpty(int x, int y) {
        return map[x][y] == null;
    }
    
    /**
     * Returns an array with 2 elements: [x, y]
     * that is the current position of the desired cell
     *
     * If no cell is found, returns [-1, -1]
     *
     * @return An int array with 2 elements: the X position and the Y position of the player
     */
    public int[] getPosition(Cell cell) {
        int[] pos = {-1, -1};
        for (int x = 0; x < map.length; x++) {
            for (int y = 0; y < map[x].length; y++) {
                if (map[x][y] == cell) {
                    pos[0] = x;
                    pos[1] = y;

                    return pos;
                }
            }
        }

        return pos;
    }
}

abstract class Cell  {
    protected Map map;

    public void setMap(Map theMap) {
        this.map = theMap;
    }

    public int getXPosition() {
        return map.getPosition(this)[0];
    }

    public int getYPosition() {
        return map.getPosition(this)[1];
    }
}
class Player extends Cell {
    
    public String toString() {
        return "â˜º";
    }
}
