
import java.util.Scanner;

/**
 * ####### ### ########### ## ## ##### ################# ####.
 * 
 * @###### (##### ###### ########) 
 * @####### (##.##.####)
 */
public class MetodosDeUnNumero
{
    private int numero;
    private Scanner write;

    
    /**
     * Constructor del método de la clase MetodosDeUnNumero
     */
    public MetodosDeUnNumero (int numero)
    {
      this.numero = numero;
      write = new Scanner (System.in);
    }
    
    /**
     *  Otro constructor para fabricar otro tipo de objeto. Aquí el valor está predeterminado.
     */
    public MetodosDeUnNumero ()
    {
       numero = 20;
       write = new Scanner (System.in);
    }
    
    public int getNumero ()
    {
       return numero;
    }
    
    public void setNumero (int numero)
    {
        this.numero = numero;
    }
    
    public int doble () 
    {
        return 2*numero;
    }
    
    public int doble (int x) 
    {
        return 2*x;
    }
    
    public int cuadrado (int x)
    {
        return x*x;
    }
    
    public boolean esPar (int x)
    {
        return x % 2 == 0;
    }
    
     public int sumaDiv (int n)
    {
        int div = 1;
        int suma = 0;
        
        while (div < n)
        {
            if (n % div == 0)
            { suma = suma + div; div++;}
            else
            { suma = suma; div++;}
        }
        
        return suma;
    }
    
    public boolean esPerfecto (int z)
    {
        if (sumaDiv (z) == z)
        return true;
        else 
        return false;
    }
    
    public void listaPerfectos ()
    {
        for (int i = 1; i <= 10000; i++)
        {
            if (esPerfecto (i) == true)
            System.out.println(i);
        }
    }
    
    
    public boolean esPrimo2 (int x)
    {
        int div = 2;
        
        while (div < x)
        {
            if (x%div == 0)
            return false;
            else
            div++;
        }
        
        return true;
    }
    
    public boolean esPrimo (int x)
    {
        int cont = 0;
        int div = 1;
        
        while (div <= x)
        {
            if (x%div == 0)
            {div++;cont++;}
            else
            div++;
        } 
        
        if (cont > 2)
        return false;
        else
        return true;
    }
     
    public void esCapicua3 (int x)
    {   
        if ((x > 1000 || x < -1000) || ((x >= -100 && x < 0)|| x <= 100))
         System.out.println ("El número debe ser de 3 cifras");
        else 
         {
            if (x/100 == x%10)
            System.out.println ("Es capicúa");
            else 
            System.out.println ("No es capicúa");
            } 
    }
    
    public void esCapicua5 (int x)
       {
        int u = x % 10;
        int d = (x%100) / 10;
        int m = (x%1000) / 10;
        int dm = x/10000;
        if ((x >= 10000 && x < 100000)||(x <= -10000 && x > -100000))
         {
            if (( u == dm ) && ( d == m))
             System.out.println ("Es capicúa");
            else 
             System.out.println ("No es capicúa");
            }
        else 
           System.out.println ("El número debe ser de 5 cifras");
    }
    
    
    public boolean esCapicua5bis (int x)
       {
        int u = x % 10;
        int d = (x%100) / 10;
        int m = (x%1000) / 10;
        int dm = x/10000;
        if (x < 0)
         
            x = -x;
        return dm == u && m == d;
    }
    
    public boolean esCapicua3bis (int x)
    {
       if (x < 0)
          x = -x;
       return x % 10 == x/100 && x >= 100 && x < 1000;
    }
    
    
    private String numeroaCadena (int x)
    {
        String cadena = "";
        cadena = Integer.toString(x);
        return cadena;
    }
    
    private int cadenaaNumero (String x)
    {
        int n = 0;
        n = Integer.parseInt (x);
        return n;
    }
    
    public int cifrasInvertidas (int x)
    {
        String let = numeroaCadena(x);
        String suma = "";
        
        for (int i = 1; i <= let.length(); i++)
        {
            char l = let.charAt(let.length()-i);
            suma = suma+l;
        }
        
        int num = cadenaaNumero(suma);
      
        return num;
    }
    
    public boolean esCapicua (int j)
    {
        return j == cifrasInvertidas(j);
    }
    
    public void descomposiciónEnFactoresPrimos (int x)
    {
        
    }
    
    public int factorial (int n)
    {
        int i = 1;
        int prod = 1;
        while (i <= n)
        {
            prod = prod*i
        }
    }
    
    public int combinaciones ()
    {return 1;}
    
    public double calcularE ()
    {return 1.0;}
}