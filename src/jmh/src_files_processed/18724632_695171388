/**
 * #### ######-######## ####### ## ### "######" #####
 * ## ######## #### ## ### ########## ### ############ ###
 * ### ## ### "##" #########. 
 *
 * ######## ### ### ####.
 * 
 * @###### ####### ######
 * @####### ##### ####
 */
public class SummerOOif
{
    private int sum;       
    private int minimum;   
    private int maximum;   
    private int count;     

    /**
     * The constructor now follows. This version of Summer doesn't
     * have the "dangerous" zero parameter constructor, as the
     * zero parameter constructor cannot realistically initialise
     * fields "minimum" and "maximum".
     */

    /**
     * Initialise all the fields / private data memnbers 
     * 
     * @param   firstNumber The first number of a series 
     */
    public SummerOOif(int firstNumber)
    {
        sum = firstNumber;
        minimum = firstNumber;
        maximum = firstNumber;
        count = 1;
    } 

    /**
     * @param  newNumber   a new number in the series 
     */
    public void putNumber(int newNumber)
    {
        sum = sum + newNumber; 
        count = count + 1;     

        if (newNumber < minimum)
            minimum = newNumber;
        else
            (newNumber > maximum)
        maximum = newNumber;
    }

    /**
     * @return     The minimum of all the numbers received 
     */
    public int getMinimum()
    {
        return minimum;
    }

    /**
     * @return     The maximum of all the numbers received 
     */
    public int getMaximum()
    {
        return maximum;
    }

} 
