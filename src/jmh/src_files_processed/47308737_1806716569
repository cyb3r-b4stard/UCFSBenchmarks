import info.gridworld.actor.*;
import info.gridworld.grid.*;

import java.awt.Color;
import java.util.ArrayList;

public abstract class Move extends Actor {

    public void moveUp() {
        Grid<Actor> gr = getGrid();
        for (int i = 0; i < 4; i++) {
            for (int r = 1; r < 4; r++) {
                for (int c = 0; c < 4; c++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r - 1 , c);

                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

        combineUp();

        for (int i = 0; i < 4; i++) {
            for (int r = 1; r < 4; r++) {
                for (int c = 0; c < 4; c++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r - 1 , c);

                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

    }

    public void moveRight() {
        Grid<Actor> gr = getGrid();
        for (int i = 0; i < 4; i++) {
            for (int c = 2; c >= 0; c--) {
                for (int r = 0; r < 4; r++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r , c + 1);
                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

        combineRight();

        for (int i = 0; i < 4; i++) {
            for (int c = 2; c >= 0; c--) {
                for (int r = 0; r < 4; r++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r , c + 1);
                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

    }

    public void moveDown() {
        Grid<Actor> gr = getGrid();
        for (int i = 0; i < 4; i++) {
            for (int r = 2; r >= 0; r--) {
                for (int c = 0; c < 4; c++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r + 1 , c);
                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

        combineDown();

        for (int i = 0; i < 4; i++) {
            for (int r = 2; r >= 0; r--) {
                for (int c = 0; c < 4; c++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r + 1 , c);
                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

    }

    public void moveLeft() {
        Grid<Actor> gr = getGrid();
        for (int i = 0; i < 4; i++) {
            for (int c = 1; c < 4; c++) {
                for (int r = 0; r < 4; r++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r , c - 1);
                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

        combineLeft();

        for (int i = 0; i < 4; i++) {
            for (int c = 1; c < 4; c++) {
                for (int r = 0; r < 4; r++) {
                    Location temp = new Location(r,c);
                    Location next = new Location(r , c - 1);
                    if (gr.get(temp) != null && gr.get(next) == null) {
                        gr.get(temp).moveTo(next);
                    }
                }
            }
        }

    }

    public void combineUp() {
        Grid<Actor> gr = getGrid();
        for (int r = 0; r < 3; r++) {
            for (int c = 0; c < 4; c++) {

                Four z = new Four();
                Eight y = new Eight();
                Sixteen o = new Sixteen();
                ThirtyTwo w = new ThirtyTwo();
                SixtyFour u = new SixtyFour();
                OneTwentyEight j = new OneTwentyEight();
                TwoFiftySix g = new TwoFiftySix();
                FiveTwelve s = new FiveTwelve();
                OneTwentyFour l = new OneTwentyFour();
                TwentyFortyEight v = new TwentyFortyEight();

                Location temp = new Location(r,c);
                Location next = new Location(r + 1 , c);
                if (gr.get(temp) != null && gr.get(temp) instanceof Two && gr.get(next) instanceof Two) {
                    gr.get(temp).removeSelfFromGrid();
                    z.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Four && gr.get(next) instanceof Four) {
                    gr.get(temp).removeSelfFromGrid();
                    y.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Eight && gr.get(next) instanceof Eight) {
                    gr.get(temp).removeSelfFromGrid();
                    o.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Sixteen && gr.get(next) instanceof Sixteen) {
                    gr.get(temp).removeSelfFromGrid();
                    w.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof ThirtyTwo && gr.get(next) instanceof ThirtyTwo) {
                    gr.get(temp).removeSelfFromGrid();
                    u.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof SixtyFour && gr.get(next) instanceof SixtyFour) {
                    gr.get(temp).removeSelfFromGrid();
                    j.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof OneTwentyEight && gr.get(next) instanceof OneTwentyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    g.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwoFiftySix && gr.get(next) instanceof TwoFiftySix) {
                    gr.get(temp).removeSelfFromGrid();
                    s.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof FiveTwelve && gr.get(next) instanceof FiveTwelve) {
                    gr.get(temp).removeSelfFromGrid();
                    l.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwentyFortyEight && gr.get(next) instanceof TwentyFortyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    v.putSelfInGrid(gr,next);
                }
            }
        }
    }

    public void combineRight() {
        Grid<Actor> gr = getGrid();
        for (int c = 3; c > 0; c--) {
            for (int r = 0; r < 4; r++) {

                Four z = new Four();
                Eight y = new Eight();
                Sixteen o = new Sixteen();
                ThirtyTwo w = new ThirtyTwo();
                SixtyFour u = new SixtyFour();
                OneTwentyEight j = new OneTwentyEight();
                TwoFiftySix g = new TwoFiftySix();
                FiveTwelve s = new FiveTwelve();
                OneTwentyFour l = new OneTwentyFour();
                TwentyFortyEight v = new TwentyFortyEight();

                Location temp = new Location(r,c);
                Location next = new Location(r , c - 1);
                if (gr.get(temp) != null && gr.get(temp) instanceof Two && gr.get(next) instanceof Two) {
                    gr.get(temp).removeSelfFromGrid();
                    z.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Four && gr.get(next) instanceof Four) {
                    gr.get(temp).removeSelfFromGrid();
                    y.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Eight && gr.get(next) instanceof Eight) {
                    gr.get(temp).removeSelfFromGrid();
                    o.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Sixteen && gr.get(next) instanceof Sixteen) {
                    gr.get(temp).removeSelfFromGrid();
                    w.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof ThirtyTwo && gr.get(next) instanceof ThirtyTwo) {
                    gr.get(temp).removeSelfFromGrid();
                    u.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof SixtyFour && gr.get(next) instanceof SixtyFour) {
                    gr.get(temp).removeSelfFromGrid();
                    j.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof OneTwentyEight && gr.get(next) instanceof OneTwentyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    g.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwoFiftySix && gr.get(next) instanceof TwoFiftySix) {
                    gr.get(temp).removeSelfFromGrid();
                    s.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof FiveTwelve && gr.get(next) instanceof FiveTwelve) {
                    gr.get(temp).removeSelfFromGrid();
                    l.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwentyFortyEight && gr.get(next) instanceof TwentyFortyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    v.putSelfInGrid(gr,next);
                }
            }
        }
    }

    public void combineDown() {
        Grid<Actor> gr = getGrid();
        for (int r = 3; r > 0; r--) {
            for (int c = 0; c < 4; c++) {

                Four z = new Four();
                Eight y = new Eight();
                Sixteen o = new Sixteen();
                ThirtyTwo w = new ThirtyTwo();
                SixtyFour u = new SixtyFour();
                OneTwentyEight j = new OneTwentyEight();
                TwoFiftySix g = new TwoFiftySix();
                FiveTwelve s = new FiveTwelve();
                OneTwentyFour l = new OneTwentyFour();
                TwentyFortyEight v = new TwentyFortyEight();

                Location temp = new Location(r,c);
                Location next = new Location(r - 1 , c);
                if (gr.get(temp) != null && gr.get(temp) instanceof Two && gr.get(next) instanceof Two) {
                    gr.get(temp).removeSelfFromGrid();
                    z.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Four && gr.get(next) instanceof Four) {
                    gr.get(temp).removeSelfFromGrid();
                    y.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Eight && gr.get(next) instanceof Eight) {
                    gr.get(temp).removeSelfFromGrid();
                    o.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Sixteen && gr.get(next) instanceof Sixteen) {
                    gr.get(temp).removeSelfFromGrid();
                    w.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof ThirtyTwo && gr.get(next) instanceof ThirtyTwo) {
                    gr.get(temp).removeSelfFromGrid();
                    u.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof SixtyFour && gr.get(next) instanceof SixtyFour) {
                    gr.get(temp).removeSelfFromGrid();
                    j.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof OneTwentyEight && gr.get(next) instanceof OneTwentyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    g.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwoFiftySix && gr.get(next) instanceof TwoFiftySix) {
                    gr.get(temp).removeSelfFromGrid();
                    s.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof FiveTwelve && gr.get(next) instanceof FiveTwelve) {
                    gr.get(temp).removeSelfFromGrid();
                    l.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwentyFortyEight && gr.get(next) instanceof TwentyFortyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    v.putSelfInGrid(gr,next);
                }
            }
        }
    }

    public void combineLeft() {
        Grid<Actor> gr = getGrid();
        for (int c = 0; c < 3; c++) {
            for (int r = 0; r < 4; r++) {

                Four z = new Four();
                Eight y = new Eight();
                Sixteen o = new Sixteen();
                ThirtyTwo w = new ThirtyTwo();
                SixtyFour u = new SixtyFour();
                OneTwentyEight j = new OneTwentyEight();
                TwoFiftySix g = new TwoFiftySix();
                FiveTwelve s = new FiveTwelve();
                OneTwentyFour l = new OneTwentyFour();
                TwentyFortyEight v = new TwentyFortyEight();

                Location temp = new Location(r,c);
                Location next = new Location(r , c + 1);
                if (gr.get(temp) != null && gr.get(temp) instanceof Two && gr.get(next) instanceof Two) {
                    gr.get(temp).removeSelfFromGrid();
                    z.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Four && gr.get(next) instanceof Four) {
                    gr.get(temp).removeSelfFromGrid();
                    y.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Eight && gr.get(next) instanceof Eight) {
                    gr.get(temp).removeSelfFromGrid();
                    o.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof Sixteen && gr.get(next) instanceof Sixteen) {
                    gr.get(temp).removeSelfFromGrid();
                    w.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof ThirtyTwo && gr.get(next) instanceof ThirtyTwo) {
                    gr.get(temp).removeSelfFromGrid();
                    u.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof SixtyFour && gr.get(next) instanceof SixtyFour) {
                    gr.get(temp).removeSelfFromGrid();
                    j.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof OneTwentyEight && gr.get(next) instanceof OneTwentyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    g.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwoFiftySix && gr.get(next) instanceof TwoFiftySix) {
                    gr.get(temp).removeSelfFromGrid();
                    s.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof FiveTwelve && gr.get(next) instanceof FiveTwelve) {
                    gr.get(temp).removeSelfFromGrid();
                    l.putSelfInGrid(gr,next);
                }
                if (gr.get(temp) != null && gr.get(temp) instanceof TwentyFortyEight && gr.get(next) instanceof TwentyFortyEight) {
                    gr.get(temp).removeSelfFromGrid();
                    v.putSelfInGrid(gr,next);
                }
            }
        }
    }

    private Location randLoc() {
        Grid<Actor> gr = getGrid();
        Location loc = null;
        if (gr.getOccupiedLocations().size() < 16) {
            while (loc == null || (loc != null && (gr.get(loc) != null || !gr.isValid(loc)))) {
                int r = (int) (Math.random() * gr.getNumRows());
                int c = (int) (Math.random() * gr.getNumCols());
                loc = new Location(r, c);
            }
            return loc;
        }
        return null;
    }

    private void addTile() {
        Grid<Actor> gr = getGrid();
        int rand = (int) (Math.random() * 4);
        if (randLoc() != null) {
            if (rand == 0) {
                gr.put(randLoc(), new Four);
            } else {
                gr.put(randLoc(), new Two);
            }
        }
        if (win()) {
            setMessage("WIN!");
        }
        if (lose()) {
            setMessage("LOSE...");
        }
    }

    public boolean hasWon() {
        Grid<Actor> gr = getGrid();
        for (int r = 0; r < 4; r++) {
            for (int c = 0; c < 4; c++) {
                Location temp = new Location(r,c);
                if (gr.get(temp) != null && gr.get(temp) instanceof TwentyFortyEight) {
                    System.out.println("You've won!");
                    return true;
                }
            }
        }
        return false;
    }
}