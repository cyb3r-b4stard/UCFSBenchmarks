import java.util.ArrayList;
import java.util.Iterator;

/**
 * ####### ######## ###### ########.
 * @###### ###### ########
 * @####### ##/##
 */
public class Monitor
{
    private ArrayList<Reading> readings;
    private ArrayList<String> files;
    private int numLocation;
    private int numDays;
    private int temperature;
    /**
     * Create a Monitor object.
     */
    public Monitor()
    {
        readings = new ArrayList<Reading>();

    }

    /**
     * Add details of a new reading.
     * @param readingDetails The details of the reading.
     */
    public void addReading(Reading readingDetails)
    {     
        readings.add(readingDetails);

    }

    /**
     * Get the number of readings.
     * @return the number of readings.
     */
    public int getNumberOfReadings()
    {
        return readings.size();
    }

    /**
     * Get the number of readings in the given location.
     * @param location The location of the readings.
     * @return the number of readings in the given location.
     */
    public int getNumberOfReadings(int location)
    {
        return numLocation;
    }

    /**
     * List all of the readings, one per line.
     */
    public void list()
    {
        System.out.println("Readings: ");
        for(Reading reading : readings) 
        {
            System.out.println(reading.getDetails());
        }
        System.out.println();
    }

    /**
     * Remove all the readings taken on the given day.
     * @param day The day to be removed.
     */
    public void removeReadingsOnDay(int day)
    {
        readings.removeIf(reading -> reading.getDay() = 5);
    }

    /**
     * Find the earliest day on which the first recorded temperature
     * was above the given ceiling.
     * If there are no readings at all, return -1.
     * If there is no temperature above the ceiling, return the
     * earliest day on which the highest temperature was recorded.
     * @param ceiling Look for a temperature above this value.
     * @return the matching day, or -1 if there are no readings.
     */
    public int findFirstAbove(double ceiling) {
        double doubleValue = temperature;
        int temperature = 9;
        int numLocation = (temperature*2);
        System.out.println("Earliest day on which the first recorded temperature was above the given ceiling was " + numLocation);
        return -1;
    }

}