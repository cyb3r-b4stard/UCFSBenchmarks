import java.util.*;
import java.io.*;
/**
 * ##### # ########### ## ##### ########### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */

public class MyLibrary
{
   private Borrower borrower;
   private BorrowerList borrowerlist;
   private BookList[] booklist;
   
   public MyLibrary()
   {
       borrower = new Borrower();
       borrowerlist = new BorrowerList();
       booklist = new BookList[10];

    }
   
    public void setBook()
    {
        booklist[0] = "";"";"";"";
        BookList[1] = "";"";"";"";
        BookList[2] = "";"";"";"";
        BookList[3] = "";"";"";"";
        BookList[4] = "";"";"";"";
        BookList[5] = "";"";"";"";
        BookList[6] = "";"";"";"";
        BookList[7] = "";"";"";"";
        BookList[8] = "";"";"";"";
        BookList[9] = "";"";"";"";
    }

   public void displayMenu()
   {    
        System.out.println("Welcome to the My Library");
        System.out.println("============================");
        System.out.println("(1) Register New Borrower");
        System.out.println("(2) Manage Borrower");
        System.out.println("(3) List All Borrowers");
        System.out.println("(4) Display Help");
        System.out.println("(5) Exit Library");
        System.out.print("Choose an option : "); 
    }
    
   public void displaySubmenu()
   {
       System.out.println("1.Borrow Book");
       System.out.println("2.Return Book");
       System.out.println("3.Display borrower details");
       System.out.println("4.Back to Menu");
   }
   
   public void displayError()
   {
       System.out.println("Error! Invalid input!");
   }
    
   public void mainLibrary()
   {
       Scanner input = new Scanner(System.in);
       boolean isExit = false;
      
       {
           while(!isExit)
           {
               displayMenu();
               int option = 0;
               option = input.nextInt();
           switch(option)
           {
               case 1:
               option = 1;
               registerBorrower();
               break;
               
               case 2:
               option = 2;
               borrowBook();
               break;
               
               case 3:
               option = 3;
               BorrowerList.readFile();
               break;
               
               case 4:
               option = 4;
               displayHelp();
               break;
               
               case 5:
               option = 5;
               isExit = false;
               exitLibrary();
               BorrowerList.writeFile();
               break;
               
               default:
               displayError();

            }
        }
    }
    }
    
   public void displayHelp()
   {
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
       System.out.println();
   }
   
   public void exitLibrary()
   {
       System.exit(0);
    }
    
   public void manageBorrower()
   {
       displaySubmenu();
       boolean isLogon = true;
       int option = 0;
       Scanner input = new Scanner(System.in);
       
       while(!isLogon)
       {
           switch(option)
           {
               case 1:
               option = 1;
               
               break;
               
               case 2:
               option = 2;
               break;
               
               case 3:
               option = 3;
               break;
               
               case 4:
               option = 4;
               BorrowerList.displayBorrower();
               break;
               
               default:
               displayError();
            }
      }
   }
    
   public void isExist()
   {
       int id = 0;
       Scanner input = new Scanner(System.in);
       borrower = new Borrower();
       boolean isExist = false;
       
       try 
       {
           id = Integer.parseInt(input.nextLine().trim());
           
          if(id == borrower.getID()) 
          {
              while(isExist) 
              {    
                  System.out.println("Borrower's ID has been used!");
              }
          }
          else 
          {
               isExist = true;
               borrower.setID(id);
          }
       }
       catch (NumberFormatException e)
       {
        }
   }
   
   public void borrowBook()
   {
       
    }
   
    public void registerBorrower()
   {
       Scanner input = new Scanner(System.in);
       Borrower borrower = new Borrower();
       isExist();
       boolean isExist = false;
            try 
            {
                while(!isExist) 
                {
                   System.out.print("Enter Name: ");
                   String name = input.nextLine().trim();
                   borrower.setName(name);
                   System.out.print("Enter ID: ");
                   int age = Integer.parseInt(input.nextLine().trim());
                   borrower.setAge(age);
                }
            }
            catch (NumberFormatException e)
                {
                    displayError();
                }
   }
}