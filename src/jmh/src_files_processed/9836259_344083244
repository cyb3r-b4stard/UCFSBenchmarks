
/**
 * ######## ##### #### - ##### # ########### ## ### ##### ####
 * 
 * @###### (#### #### ####)
 * @####### (####### ###### ## #### ####)
 */
public abstract class Item
{
  private String title;
  private boolean borrowed;
  private int borrowedCount;
  
  public Item(String inTitle)
  {
      title = inTitle;
      borrowed = false;
      borrowedCount = 0;
  }
  
  public boolean borrowItem()
  {
      if (borrowed)
      {
          System.out.println("Sorry, " + title + " by " + author + " is already borrowed.");
        }
      else
      {
          borrowed = true;
          borrowedCount++;
          return true;
        }
    }
    
    public void returnItem()
    {
        if (borrowed)
        {
            borrowed = false;
        }
        else
        {
            System.out.println("Error - this book was not borrowed so it can't be returned";
        }
    }
    
    public boolean isBorrowed()
    {
        return borrowed;
    }
    
    public int getBorrowedCount()
    {
        return borrowedCount;
    }
    
    public String toString()
    {
        String firstpart = getClass().getName() + " " + title + " has been borrowed " + borrowedCount + " times and is currently ";
        if (borrowed)
        {
            return firstpart + "out";
        }
        else
        {
            return firstpart + "in";
        }
    }
    
}