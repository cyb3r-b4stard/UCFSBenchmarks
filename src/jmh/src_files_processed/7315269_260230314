
/**
 * ##### ####### ## ## ######
 * 
 * @####### ####### ######
 * @##/##/####
 */
import java.util.*;
import java.text.*;

public class CarritoDeLaCompra
{
    private String idCliente;
    private Date fechaInicio;
    private ArrayList<Componente> productos;

    /**
     * Constructor para nuestro carrito de la compra. Como sólo se podrá crear carritos si utilizamos todos 
     * los parámetros que luego se nos van a pedir, únicamente tendremos este constructo
     */
    public CarritoDeLaCompra(String idCliente, Date fechaInicio)
    {
        this.idCliente = idCliente;
        this.fechaInicio = fechaInicio;
        this.productos=null;
    }

    /**
     * Métodos que contendrá nuestra clase Carrito de la Compra
     * Anyade una unidad del producto al carrito
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public boolean addProducto(Componente nuevoProducto)
    {
       nuevoProducto.add
    }
    
    /**
     * Elimina una unidad del producto seleccionado
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public boolean eliminarProducto(int idProducto)
    {
        if
        {i--}
        else
        {error. El producto especificado no se encuentra en el carrito}
        
    }
    
    /**
     * Métodos que contendrá nuestra clase Carrito de la Compra
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public double calcularPrecioProvisional()
    {
        return precio;
    }
    
    /**
     * Crea un objeto de la clase venta usando los productos existentes en el carrito
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public Venta comprar(Date fechaCompra, FormaPago formaPago)
    {
        return x + y;
    }
    
    /**
     * Muestra los datos del carrito: productos con sus precios (para ello hay que invocar al metodo 
     * imprimir de cada objeto Componente del ArrayList<Componente>) y el precio total (calculado en 
     * calcularPrecio  (creo que el provisional lo puedo aprovechar para el final)
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public void imprimirVenta()
    {
        return venta;
    }
}