

import static org.junit.Assert.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

/**
 * ### #### ##### ###############.
 *
 * @######  (#### ####)
 * @####### (# ####### ###### ## # ####)
 */
public class SeatManagerTest
{
    /**
     * Default constructor for test class SeatManagerTest
     */
    public SeatManagerTest()
    {
    }

    /**
     * Sets up the test fixture.
     *
     * Called before every test case method.
     */
    @Before
    public void setUp()
    {
    }

    /**
     * Tears down the test fixture.
     *
     * Called after every test case method.
     */
    @After
    public void tearDown()
    {
    }
    
    @Test
    public void testBookSeat()
    {
        SeatManager seatManager = new SeatManager();
        Person person1 = new Person();
        
        assertTrue(seatManager.bookSeat(person1,1,1));
        assertNotNull(seatManager.getSeats()[1][1]);
        assertEquals(person1,seatManager.getSeats()[1][1]);
        
        assertFalse(seatManager.bookSeat(person1,1,1));
        assertNotNull(seatManager.getSeats()[1][1]);
    }
    
    @Test
    public void testReleaseSeat()
    {
        SeatManager seatManager = new SeatManager();
        Person person1 = new Person();
        seatManager.bookSeat(person1,1,1); 
        
        assertEquals(person1,seatManager.releaseSeat(person1,1,1));
        assertNull(seatManager.getSeats()[1][1]);
    }
    
     @Test
     public void testFreeSeets()
     {
        SeatManager seatManager = new SeatManager(3,4);
        assertEquals(42,seatManager.FreeSeets());
        
        seatManager.bookSeat(new Person(),1,2);
        seatManager.bookSeat(new Person()9,3,4);
        assertEquals(4a,seatManager.FreeSeats
    
    }
    
}