
public class ArrayPractice
{
    private int x;
    private int m_nums[] = {5,4,3,2,1,10,9,8,7,6};
    
    
    
    public ArrayPractice()
    {
        int sq[] = new int [1000];
        for (int j = 0; j <sq.length; j++)
        {
            sq[j] = j * j;
        }
    }
    public void SOP(int x)
    {
        System.out.print( x + ", ");
    }
    
    
        
    public int findIntW( int searchNum )
    {
        int x = 0;
        while (searchNum != m_nums[x])        
        {
            x++;
            if (x == m_nums.length) return -1;
        }
        return x;
    }
    
   
    public int findIntF ( int searchNum)
    {
        for (int i = 0; i < m_nums.length; i++)
        {
            if (searchNum == m_nums[i])
            return i;
        }
        return -1;
    }
    
    public int first()
    {
        return m_nums[0];
    }

    public int last()
    {
        return m_nums[m_nums.length-1];
    }
    
    public void dump()
    {
        for (int i = 0; i < m_nums.length; i++)
        {
            System.out.println (m_nums[i]);
        }
    }
    
    public void reverseDump()
    {
        for (int i = m_nums.length-1; i > -1; i--)
        {
            System.out.println (m_nums[i]);
        }
    }
    
    public void countDown()
    {
        int i = 54;
        while (i > -1)
        {
            System.out.println (i);
            i--;
        }
    }
    
    public int[] reverseArray()
    {
        int[] m_arr = new int[]{1,2,5,85,6,5,4,8,5,4,8,9,};
        
        int i = 54;
        while (i > -1)
        {
            System.out.println (i);
            i--;
        }
        return m_arr
    }
}

