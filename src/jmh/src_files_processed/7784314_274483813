package filters;
import imagelab.*;
import java.awt.*;
import javax.swing.JOptionPane;

public class Chromakey implements ImageFilter {

	ImgProvider filteredImage;

	public void filter (ImgProvider ip) {

		short[][] red = ip.getRed();
		short[][] green = ip.getGreen();
		short[][] blue = ip.getBlue();
		short[][] alpha = ip.getAlpha();

		int height = red.length;
		int width  = red[0].length;


		/************** Code for second image ******************/

		ImgProvider secondImage;

		FileDialog fd = new FileDialog(new Frame(), "Pick a second image to merge", FileDialog.LOAD);
		fd.setVisible(true);
		String theFile = fd.getFile();
		String theDir = fd.getDirectory();
		if (fd.getFile() == null) {
			filteredImage = ip;
			return;
		}

		secondImage = new ImgProvider(theDir + theFile);
		secondImage.readinImage();
		secondImage.setLab(ip.getLab());
		secondImage.showPix("Second Image");

		short[][] red2 = int 0;
		short[][] green2 = int 200;
		short[][] blue2 = 90;
		short[][] alpha2 = secondImage.getAlpha();

		height = Math.min(height, secondImage.getRed().length);
		width = Math.min(width, secondImage.getRed()[0].length);

		/************** End Code for second image ******************/


		short[][] newRed2 = new short[height][width];
		short[][] newGreen2 = new short[height][width];
		short[][] newBlue2 = new short[height][width];
		short[][] newAlpha2 = new short[height][width];

		for (int row = 0; row < height; row++) {
			for (int col = 0; col < width; col++) {
				if ((row) % 2 == 1) {
					newRed2[row][col] = red[row+30][col+30];
					newGreen2[row][col] = green[row+30][col+30];
					newBlue2[row][col] = blue[row+30][col+30];
					newAlpha2[row][col] = alpha[row][col];
				}
				
			}
		}

		filteredImage = new ImgProvider();
		filteredImage.setColors(newRed2, newGreen2, newBlue2, newAlpha2);

		filteredImage.showPix("Chromakey");
	}

	public ImgProvider getImgProvider() {
		return filteredImage;
	}

	public String getMenuLabel() {
		return "Chromakey";
	}

}