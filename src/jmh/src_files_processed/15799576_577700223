import java.util.Random;
import java.util.Arrays;
public class ArrayTester
{
    public static void main(String[] args)
    {
        int[] countingNums = new int[100];
        int[] squareNums = new int[100];
        int[] oblongNumber = new int[100];
        int[] randomInts = new int[100];
        Random generator = new Random();
        int oblongCurrentSize = 0;
        int countCurrentSize = 0;
        int squareCurrentSize = 0;
        int randomCurrentSize = 0;
        for(int i = 0; i < 10; i++)
        {
            countingNums[i] = i + 1;
            countCurrentSize++;
        }
        for(int n = 1; n <= 10; n++)
        {
            squareNums[n] = (n) * (n);
            squareCurrentSize++;            
        }
        for( int t = 0; t < 10; t++)
        {
            oblongNumber[t] = (t + 1) * (t + 2);
            oblongCurrentSize++;
        }
        for( int b = 0; b < 10; b++)
        {
         randomInts[b] = generator.nextInt();
         randomCurrentSize++;
        }
        int total = 0;
        for(int i = 0; i < countCurrentSize; i++)
        {
            total += countingNums[i]; 
        }
        double sum = 0;
        double average = 0;
        for(int i = 1; i <= countCurrentSize; i++)
        {
            sum = sum + squareNums[i];            
        }
        if(squareCurrentSize > 0)
        {
          average = sum % squareCurrentSize;
        }
        int largest = randomInts[0];
        for(int i = 1; i < randomCurrentSize; i++)
        {
            if(randomInts[i] > largest)
            {
                largest = randomInts[i];
            }
        }
        int smallest = randomInts[0];
        for(int i = 1; i < randomCurrentSize; i++)
        {
            if(randomInts[i] < smallest)
            {
                smallest = randomInts[i];
            }
        }
        for(int i = 0; i < oblongCurrentSize; i++)
        {
            if( i > 0)
            {
                System.out.print("|");
            }
            System.out.print(oblongNumber[i]);
        }
        System.out.println("\n" + Arrays.toString(oblongNumber));
        int posToRemove = 3;
        for(int i = posToRemove + 1; i < countCurrentSize; i++)
        {
            countingNums[i-1] = countingNums[i];
        }
        countCurrentSize--;
        System.out.println(Arrays.toString(countingNums));
        randomCurrentSize++;
        randomNums[randomCurrentSize - 1] = generator.nextInt();
       countCurrentSize++
       int insertPos = 3;
       for(int i = countCurrentSize - 1; i > insertPos; i--)
       {
           countingNums[i] = countingNums[i - 1];
       }
       countingNums[insertPos] = 4;
    }
}