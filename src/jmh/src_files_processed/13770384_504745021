import java.util.*;
/**
 * ######## - # ###### ########### ### ### #### #### #######.
 * 
 * @###### (##. ####### & ###### & #### ####) 
 * @####### (####.##.#)
 */
public class DiceGame
{
   public static final int NUMDICE = 5;
   public static String divider = "---------------------------------------";
    
   public static void main(String[] args)
   {
       int[] hand = rollDice( NUMDICE );
       
       System.out.printf("Rolling dice...");
       displayDice( hand );
       System.out.printf("\nScores for the TOP section would be:\n%s\n", divider);
       System.out.printf("Aces  - %d\n", scoreAces(hand));
       System.out.printf("*** Print scores for TWOS through SIXES here***\n", scorea(hand));
       System.out.printf("\nScores for the BOTTOM section would be:\n%s\n", divider);
       System.out.printf("Chance - %d \n", totalOfDice(hand) );
       System.out.printf("***Print scores for Full House\n", ThreeOfAKind(hand), "and ", FourOfAKind(hand),"  of a kind\n straights. here***\n");
       System.out.printf("YAHTZEE (5 of a kind) - %d\n", score5ofakind(hand));
       System.out.printf("\n%s\nThanks for Rolling!:\n",divider);
             
   }
   
   public static int totalOfDice(int[] dice )
   {
       int total = 0;
       for (int i=0; i< dice.length; i++)
       {
           total += dice[i];
        }
        return total;
       
    }
    
   public static  void displayDice( int[] dice )
    {
      System.out.print("Your dice are: ");
      for (int i=0; i< dice.length; i++)        
      { 
          System.out.print( dice[i] + " ");
        }
        System.out.println();
        
    }
    
    public static int[] rollDice(int numdice)
    {
       int[] current = new int[numdice];
        
       for (int i=0; i< numdice; i++)
       {
           current[i]= rollDie();
       }
       
       return current;
      
    }
    
   public static int rollDie()
   {
       return (int)(Math.random() * 6) + 1;
       
   } 

   public static int score5ofakind(int[] h)
   {
       if ( isYahtzee(h) )
           return 50;
       else
           return 0;       
   } 

   public static boolean isYahtzee( int[] ra )
   {
       boolean allmatch = true;
       
       for ( int i=1; i < ra.length && allmatch; i++)
       {
           if (ra[i-1] != ra[i])
             allmatch = false;
        } 
       return allmatch;
    } 

   public static int scoreAces( int[] ra )
   {
       final int target = 1;
       int total = 0;
       
       for ( int i=0; i < ra.length; i++)
       {
           if (ra[i] == target)
              total += ra[i];
        } 
       return total;
    } 
    
    
    public static int scorea (int[] ra)
    
    {
        int scorea = 0;
        
        for(int i=0; i < ra.length; i++)
        
        {
            if(ra[i]==6)
            
            {
                scorea++;
            }
        }
        return scorea;
    }
    
    public Boolean ThreeOfAKind()
    
    {
    int total = 0;
    
    int[] rollDice = new int[5]; 
    
    
    for (int i=5;i <= 5; i++)
    
    {
        total = nextInt(5)+ 1;
       
        die[i] = rollDie;
    
}
    { 
        java.util.Arrays.sort(rollDice); 
    }
     for(int i=0;i<ra.length-3;i++)
     
     {
         
       if(ra[i]==ra[i+1] ? ra[i+1]==ra[i+2] : false)
       
             {
           return true;
        }
                }
     return false;
    }
    
   
    
public Boolean isFourOfAKind()
    
    {
    int total = 0;
    
    int[] rollDice = new int[5]; 
    
    
    for (int i=5;i <= 5; i++)
    
    {
        total = nextInt(5)+ 1;
        
        die[i] = rollDie;
    }
    
    { 
        java.util.Arrays.sort(rollDice);
    }
    
         
     for(int i=0;i<ra.length-4 ;i++)
     
     {
         
       if(ra[i]==ra[i+1] ? ra[i+1]==ra[i+2] || ra[i+2]==dice[i=3] : false )
    {
           return true;
        }
                }
     return false;
    }
     
     public boolean isSmallStraight(int[] v) 
     
     { 
         for (int i = 1; i <= 5; i++) 
         
         { 
             boolean b = false; 
             
             for (int j = 0; j < 5; j++)
             
             { b = b || (v[j] == i); 
                } 
                if (!b)
            
                return false; 
            }
} 
return true; 
} 

     
     
     
    }
}

    /* NOTE - scoreAces works just fine, but it would be a waste to simply copy and paste
     *        for twos, threes... all the way to sixes
     *        Can you write ONE method that could be used for any number?
     */  
 