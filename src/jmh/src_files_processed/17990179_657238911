/*
 * #######:     ########
 * #######      #.#
 *
 * ######:      ####### ####
 * 
 * #### #######:    ## ##### ####
 *
 * ########/########:   #####, ####### #
 *
 * ###########:
 * #### ####### #### #### # # # # ###-###########
 * ##### #### ## ######## #### ####. ## #### ########
 * ### ##### ### ##### ### ######## ##### ## ####
 * ## ### ########## ###.
 * 
 * #### # #######:
 * # ####### ### ## ######### ## #####.
 * 
 * ############:
 * ## ### #### ## ###### ### ### ## ######### ###
 * #####.
 *
 */

import java.io.*;
import java.util.*;

public class Prog470b
{
    public static void main(String[] args)
    {
        Scanner inFile = null;
        Scanner printline = null;
        Scanner kbReader = new Scanner(System.in);
        try 
        {
            inFile = new Scanner (new File("Prog464aNums.txt"));
            printline = new Scanner (new File ("Prog464aNums.txt"));
        } 
        catch (FileNotFoundException e) 
        {
            System.out.println ("File not found!");
            System.exit (0);
        }
        int[][] input = new int[5][5];
        
        for (int row = 0; row < input.length; row++)
        {
            for (int col = 0; col < input[row].length; col++)
            {
                if (inFile.hasNext())
                input[row][col] = inFile.nextInt();
            }
        }
        
        System.out.println("Original Matrix");
        for(int r = 0; r < input.length; r++)
        {
            System.out.println();
            for(int c = 0; c < input[r].length; c++)
            {
                System.out.print("   "+ input[r][c]);
            }
        }
        diagsum(input);
    }
    public static void diagsum(int input[][])
    {
        int mainsum = 0;
        for(int r = 0; r < transposearray.length; r++)
        {
                if (c < 5)
                mainsum = mainsum + input[c][r];
                c++;
        }
        
    }
    /*public static void output(int transposearray[][])
    {
        System.out.println();
        System.out.println("Transpose");
        for(int r = 0; r < transposearray.length; r++)
        {
            System.out.println();
            for(int c = 0; c < transposearray[r].length; c++)
            {
                System.out.print("   "+ transposearray[r][c]);
            }
        }*/
    }
}

/*
 
Output

Original Matrix

   45   67   89   12   -3
   -3   -6   -7   -4   -9
   96   81   -8   52   12
   14   -7   72   29   -1
   19   43   28   63   87
Transpose

   45   -3   96   14   19
   67   -6   81   -7   43
   89   -7   -8   72   28
   12   -4   52   29   63
   -3   -9   12   -1   87
 */