
import java.util.Random;
/**
 * ##### # ########### ## ##### ###### ####.
 * 
 * @###### (###### ########) 
 * @####### (#.#)
 */
public class Person
{
    public final static int ADULTHOOD_AGE = 18;
    public final static int RETIREMENT_AGE = 65;
    public final static boolean GENDER_FEMALE= false;
    public final static boolean GENDER_MALE= true;
    public final static int MIN_AGE = 0;
    public final static int MAX_AGE = 120;
    
    
    private String name;
    private int age;
   
    private String surname;
    private boolean gender;
    

    /**
     * Constructor para objetos de clase Person.
     */
    public Person()
    {
        
        Random random=new Random();
        setAge(random.nextInt(MAX_AGE));
        setName ("Miguel"); 
        setSurname ("Hoffmann"); 
        setGender (true); 
    }
    

    public Person (int age) 
     {
       this(); 
       setAge(age);
        }
        
    public Person (String name, String surname, int age)
    {
        this();
        setName(name);
        setSurname(surname);
        setAge(age);
    }   
    
     /**
       * Modifica la propiedad "age".
       * @param newAge el nuevo valor de la propiedad "age".
       */
      public void setAge (int age)
      {
          if ((age >= MIN_AGE) && (age < MAX_AGE))
          this.age = age;
          
        }
      /** 
       *Devuelve el valor de la propiedad "age".
       *@return el valor de la propiedad "age".
       */
      public int getAge ()
        {
            return age;
        }
      /**
       * Método que nos permite cambiar el valor de la propiedad "name".
       * @param newName el nuevo valor de la propiedad "name".
       */
      public void setName (String name)
        {
            this.name= name;
        }
        /**
         * Método que devuelve el valor de la propiedad "name".
         * @return el valor de la propiedad "name".
         */
        public String getName ()
        {
            return name;
        }
        
        /**
         * Método que permite cambiar el valor de la propiedad "surname".
         * @param newSurname el nuevo valor de la propiedad "surname".
         */
        
        public void setSurname (String surname)
        {
            this.surname=surname;
            
           
        }
        
        /**
         * Método que devuelve el valor de la propiedad "surname".
         * @return el valor de la propiedad "surname".
         */
        
        public String getSurname()
        {
            return surname;
        }
        
        /**
         * Método que nos permite cambiar el valor de la propiedad "gender".
         * @param newGender nuevo valor de la propiedad "gender"
         */
        
        public void setGender (boolean gender)
        {
            this.gender = gender;
            
       
        }

       /**
        * Método que devuelve el valor de la propiedad "gender"
        * @return el valor de la propiedad "gender"
        */
        
       public boolean getGender ()
       {
           return gender;
       }
       
       /**
        * Muestra en pantalla un texto describiendo el estado del objeto.
        */
       public String toString ()
       {
           return "Nombre:" + this.getName() + "Apellidos:" + this.getSurname() + "Edad:" + this.getAge() + "Género:" + this.getGender();
       }
       /** 
        * Devuelve un texto describiendo el estado del objeto.
        * @return una cadena de texto
        */
       public void print()
       {
           System.out.println("Mi edad es " + getAge() + " pero el año que viene tendré " + (getAge() + 1) + " años");
       }
       
       /**
        * Devuelve los años que le faltan a una persona para ser mayor de edad o los años que le faltan
        * para jubilarse o los años que han pasado desde que se jubiló
        * @return años mayoría de edad, jubilación    
        */
       public int getCriticalAge ()
       {
           int resultado;
           if(getAge()<ADULTHOOD_AGE)
           {
               resultado=ADULTHOOD_AGE-getAge();
            }
            else if(getAge()<65){
                resultado=RETIREMENT_AGE-getAge();
            }
            else{
               resultado=getAge()-RETIREMENT_AGE;
            }
            return resultado;
        }
        public String getHashCode()
        {
            return getAge()+"-"+"-"+getName().substring(0,2).toUpperCase+"-"+getSurname().substring(0,4).toUpperCase()+"-"+private String getAgeIntervalAsString();
        }
}
 
