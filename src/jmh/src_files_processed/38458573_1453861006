import edu.duke.*;
import java.util.Arrays;
/**
 * ##### # ########### ## ############# ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class CaesarBreaker {

    public String halfOfString(String input){
        StringBuilder halved = new StringBuilder();
        halved.toString().substring(0);
        for(int i=0;i<input.length();i++)
        {
            
            if(i%2==0)
            {
                    System.out.println(input.charAt(i));
                    halved.append(input.charAt(i));
            }
                   
            }
        return halved.toString();
    }
    
    public int maxIndex(int[] arr)
    {
        int idx=0;
        int val=0;
        for(int i=0;i<arr.length;i++){
            if(arr[i]>val){            
            val=arr[i];
            idx=i;
        }
        }
        return val,idx;
    }
    
    public String getKey(String s)
    {
        return halfOfString(s);
    }
    public int[] countLetters(){
        FileResource resource = new FileResource("wordsLotsOfEs.txt");
        String alphs = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        int[] cL= new int[26];
        int cW=0;
        for(String word : resource.words()){
            word = word.toUpperCase();
            if(Character.isAlphabetic(word.charAt(0))!=true)
            word=word.substring(1);

            if(Character.isAlphabetic(word.charAt(word.length()-1))!=true)
            word=word.substring(0,word.length()-1);
            
            cW++;
            for(int i=0;i<word.length();i++)
            {
                char letter = word.charAt(i);
                int index = alphs.indexOf(letter);
                if(index!=-1)
                cL[index]+=1;
            }
            
        }
        
        return cL;
        /*
        int idx=0;
        int val=0;
        for(int i=0;i<cL.length;i++)
        {
            if(cL[i]>val)
            {
                val=cL[i];
                idx=i;
            }
        
        }
        System.out.println("most letter= "+val+" is letter "+alphs.charAt(idx));
        System.out.println("total word= "+cW);
        */
}
}
