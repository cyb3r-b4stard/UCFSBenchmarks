/**
 * ##### ### ##### ###### ## ###### ####, ## #### ## ### #### ######, ## # ##### ### #### ## #### #### ####.
 * 
 * @###### #### ######## #### 
 */
import edu.duke.*;
import org.apache.commons.csv.*;

public class BabyBirths {
    
    static final String pathToBabyNamesByYear = "/Users/cberndt/Downloads/us_babynames/us_babynames_by_year/";
    static final String pathToTestFiles = "/Users/cberndt/Downloads/testing/"
    
    public void printNames () {
        FileResource fr = new FileResource();
        for (CSVRecord rec : fr.getCSVParser(false)) {
            int numBorn = Integer.parseInt(rec.get(2));
            if (numBorn <= 100) {
                System.out.println("Name " + rec.get(0) +
                           " Gender " + rec.get(1) +
                           " Num Born " + rec.get(2));
            }
        }
    }

    public void totalBirths (FileResource fr) {
        int totalBirths = 0;
        int totalBoys = 0;
        int totalGirls = 0;
        int totalNames = 0;
        int totalBNames = 0;
        int totalGNames = 0;
        for (CSVRecord rec : fr.getCSVParser(false)) {
            int numBorn = Integer.parseInt(rec.get(2));
            totalBirths += numBorn;
            totalNames += 1;
            if (rec.get(1).equals("M")) {
                totalBoys += numBorn;
                totalBNames += 1;
            }
            else {
                totalGirls += numBorn;
                totalGNames += 1;
            }
        }
        System.out.println("total births = " + totalBirths);
        System.out.println("total names = " + totalNames);
        System.out.println("female girls = " + totalGirls);
        System.out.println("female names = " + totalGNames);
        System.out.println("male boys = "    + totalBoys);
        System.out.println("male names = " + totalBNames);
    }
    
    public int getRank (int year, String name, String gender) {
        int rank = 0;
        FileResource fr = new FileResource(pathToBabyNamesByYear + "yob" + year + ".csv");
        for (CSVRecord record : fr.getCSVParser(false)) {
            if (record.get(1).equals(gender)) {
                rank += 1;
                if (record.get(0).equals(name)) {
                    return rank;
                }
            }
        }
        return -1;
    }
    
    public String getName (int year, int rank, String gender) {
        String name = "NO NAME";
        FileResource fr = new FileResource(pathToBabyNamesByYear + "yob" + year + ".csv");
        for (CSVRecord record : fr.getCSVParser(false)) {
            if (record.get(1).equals(gender)) {
                rank--;
                if (rank == 0) {
                    name = record.get(0);
                    break;
                }
            }
        }
        return name;
    }
    
    public void whatNameDiffYear (String name, String gender, int year, int newYear) {
        int rank = getRank(year, name, gender);
        String newName = getName(newYear, rank, gender);
        System.out.println(name + " born in " + year + " would be " + newName + " if they were born in " + newYear);
    }
    
    public void testWhatNameDiffYear () {
        
    }
    
    public void testGetName () {
        int year = 1989;
        int rank = 36;
        String gender = "M";
        String name = getName(year, rank, gender);
        System.out.println("The name with that rank and gender is " + name);
        year = 1989;
        rank = 2;
        gender = "M";
        name = getName(year, rank, gender);
        System.out.println("The name with that rank and gender is " + name);
        year = 1989;
        rank = 27;
        gender = "F";
        name = getName(year, rank, gender);
        System.out.println("The name with that rank and gender is " + name);
    }
    
    public void testGetRank () {
        int year = 1989;
        String name = "Charles";
        String gender = "M";
        int rank =  getRank(year, name, gender);
        System.out.println("Rank for that name was " + rank);
        year = 1989;
        name = "Christopher";
        gender = "M";
        rank =  getRank(year, name, gender);
        System.out.println("Rank for that name was " + rank);
        year = 1989;
        name = "Chelsea";
        gender = "F";
        rank =  getRank(year, name, gender);
        System.out.println("Rank for that name was " + rank);
        year = 1989;
        name = "HamburgerHelper";
        gender = "M";
        rank =  getRank(year, name, gender);
        System.out.println("Rank for that name was " + rank);
    }

    public void testTotalBirths () {
        FileResource fr = new FileResource(pathToBabyNamesByYear + "yob2014.csv");
        totalBirths(fr);
    }
}