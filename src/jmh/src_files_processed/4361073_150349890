import sacco.*;
import sacco.tester.*;

public class TwoDArrays implements MatricesAndMagicSquares {
    public String arrayToString(int[][] arr) {
        for(int x = 0; x < arr.length; x++) {
            for(int y = 0; y < arr[x].length; y++) {
                System.out.print(arr[x][y] + "\t");
            }
            System.out.print("\n");
        }
    }

    public int[][] addMatrices(int[][]a, int[][]b) {
        for(int x = 0; x < a.length; x++) {
            for(int y = 0; y < a[x].length; y++) {
                b[x][y] += a[x][y];
            }
        }
    }

    public int[][] multTable(int numRows,int numCols) {
        for(int x = 0; x < arr.length; x++) {
            for(int y = 0; y < arr[x].length; y++) {
                arr[x][y] = x*y;
                System.out.print(arr[x][y] + "\t");
            }
            System.out.print("\n");
        }
    }

    public int rowSum(int[][] arr, int row) {
        int sum = 0;
        
        for(int x = 0; x < arr[row][x].length; x++) {
            sum += arr[row][x];
        }
    }

    public int colSum(int[][] arr, int col){
        int sum = 0;
        
        for(int y = 0; x < arr[y][col].length; x++) {
            sum += arr[y][col];
        }
    }

    public boolean isMagic(int[][] square) {
        int sum = this.rowSum(square, 0);
        
        for(int x = 1; x < arr.length; x++) {
            if(this.rowSum(square, x) != sum)
                return false;
        }
        
        for(int x = 0; x < arr[x].length; x++) {
            if(this.colSum(square, x) != sum)
                return false;
        }
        
        int diagsum = 0;
        for(int x = 0; x < arr[0].length; x++) {
            diagsum += arr[x][x];
        }
        
        if(diagsum != sum) return false;
        
        diagsum = 0;
        for(int y = 0, x = arr[][0].length; x > 0; x--, y++) {
            diagsum += arr[x][y];
        }
        
        if(diagsum != sum) return false;
        
        return true;
    }
    
    public static void testAll()
    {
        TwoDArrays t = new TwoDArrays();
        MatrixTester.testAll(t);
    }
}
