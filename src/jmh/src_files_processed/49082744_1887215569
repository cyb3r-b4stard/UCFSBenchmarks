import java.util.Iterator;
import java.util.ArrayList;
import java.util.Scanner;
/**
 * ##### ############ ##### #### # ########## ## ######
 * 
 * ##### ### ### ###### 
 * ####### ##: ########
 * #### ### ####
 */
public class ListOfMovies
{
    private int numberOfMovies;
    private ArrayList<Movie> movies;
    private ArrayList<Rating> ratings;
    
    public ListOfMovies()
    {
        numberOfMovies = 0;
        movies = new ArrayList<>();
        ratings = new ArrayList<>();
    }
      
    /**
     * Option 1: Search movie title
     * Search for movie and return the requested movie
     */
    
    /**
     * Option 2: Add movie
     * Add a movie to the List of movies
     */
    public void addMovie(Movie movies)
    {
        movies.add(movie);
    }
    
    /**
     * Show the list of movies.
     */
    public void show()
    {
        for(Movie movie : movies){
            movie.display();
            System.out.println();
        }
    }
    
    
    /**
     * Option 3: Delete movie
     * Delete a movie from the collection.
     */
    public void removeMovie(int index)
    {
        if(index >= 0 && index < movies.size()) {
            movies.remove(index);
        }
    }       
    
    /**
     * List a movie from the collection.
     */
    public void listMovie(int index)
    {
        if(index >= 0 && index < movies.size()) {
            String movieName = movies.get(index);
            System.out.println(movieName);
        }
    }   
    
    /**
     * Add a rating to a movie
     * Reject the rating if the rating is invalid. 
     * Valid ratings are numbers between 1 and 10 (inclusive).
     */ 
    public boolean addRating(String title, String director, String actor, int rating)
    {
        if(ratingInvalid(rating)) {  
            return false;
        }       
        ratings.add(new Movie(title, director, actor, rating));
        return true;
    }

    /**
     * Remove the rating stored at the index given. 
     * Invalid index = nothing will happen
     */
    public void removeRating(int index)
    {
        if(index >=0 && index < ratings.size()) { 
            ratings.remove(index);
        }
    }
    
    /**
     * Check whether the given rating is invalid. 
     * Return true if it is invalid.
     * Valid ratings are in the range [1..10].
     */    
    private boolean ratingInvalid(int rating)
    {
        return rating < 0 || rating > 10;
    } 
    
    /**
     * Upvote the rating at 'index'. That is: count this comment as more helpful.
     */
    public void upvoteRating(int index)
    {
        if(index >=0 && index < ratings.size()) { 
            ratings.get(index).upvote();
        }
    }
    
    /**
     * Return total number of movies in the movie database system
     */
    public int getNumberofMovies()
    {
        return numberOfMovies
    }    
    
}