import java.awt.*;
import java.awt.geom.*;

/**
 * #### #### # ##### ####
 * 
 * ######: ##### ##### 
 * #######: ##/##/##
 */
public class Cloud
{
    private Circle cloud1;
    private Circle cloud2;
    private Circle cloud3;
    private Circle cloud4;
    private Circle cloud5;
    private int xPosition;
    private int yPosition;
    private int diameter;
    private String color;
    private boolean isVisible;
    
    /**
     * Creates a cloud
     */
    public Cloud()
    {
        cloud1 = new Circle(25,20,"gray",40);
        cloud2 = new Circle(10,40,"gray",40);
        cloud3 = new Circle(30,50,"gray",40);
        cloud4 = new Circle(55,20,"gray",40);
        cloud5 = new Circle(60,40,"gray",40);
        isVisible = true;
        draw();
    }
    
        /**
     * Make this circle visible. If it was already visible, do nothing.
     */
    public void makeVisible()
    {
        isVisible = true;
        draw();
    }

    /**
     * Make this circle invisible. If it was already invisible, do nothing.
     */
    public void makeInvisible()
    {
        erase();
        isVisible = false;
    }
    
    /*
     * Draw the circle with current specifications on screen.
     */
    private void draw()
    {
        if(isVisible) {
            Canvas canvas = Canvas.getCanvas();
            canvas.draw(this, color, (xPosition), yPosition, 
                    diameter, diameter););
            canvas.wait(10);
        }
    }

    /*
     * Erase the circle on screen.
     */
    private void erase()
    {
        if(isVisible) {
            Canvas canvas = Canvas.getCanvas();
            canvas.erase(this);
        }
    }
    
     /**
     * Move the circle horizontally by 'distance' pixels.
     */
    public void moveHorizontal(int distance)
    {
        erase();
        xPosition += distance;
        draw();
    }
    
    /**
     * Slowly moves the cloud horizontally by 'distance' pixels.
     */
    public void slowMoveHorizontal(int distance)
    {
        int delta;

        if(distance < 0) 
        {
            delta = -1;
            distance = -distance;
        }
        else 
        {
            delta = 1;
        }

        for(int i = 0; i < distance; i++)
        {
            xPosition += delta;
            draw();
        }
    }
}