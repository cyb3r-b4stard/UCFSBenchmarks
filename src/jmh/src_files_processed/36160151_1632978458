
import java.awt.*;
import java.util.*;
import javax.swing.*;
import javax.swing.Timer;
import java.lang.*;

public class Circles extends JFrame{
    static Random rg = new Random();
    int numCircles = 8 + rg.nextInt(25);
    public void Circles(){
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    public static void main(){
        Circles win = new Circles();
        win.setVisible(true);
    }
    public void paint (Graphics g){
        super.paint(g);
        int ct = 0;
        int x = 0;
        int y = 0;
        int r = 0; 
        int r1 = 0; 
        int r2 = 0; 
        int adjustr1 = 0; 
        int adjustr2 = 0; 
        int shape = 0;
        int dx = 0;
        int dy = 0;
        int workrad = 0;
        int next = 0;
        int next1 = 0;
        int next2 = 0;
        int next3 = 0;
        int smkal = 0;
        Color randColor, randColor1, randColor2, randColor3;
        randColor = new Color (rg.nextInt(256), rg.nextInt(256), rg.nextInt(256));
        g.setColor(randColor);
        g.fillOval(750, 350, 300, 300);
        while (ct < numCircles){
               randColor1 = new Color (rg.nextInt(256), rg.nextInt(256), rg.nextInt(256));
               randColor2 = new Color (rg.nextInt(256), rg.nextInt(256), rg.nextInt(256));
               randColor3 = new Color (rg.nextInt(256), rg.nextInt(256), rg.nextInt(256));
               r = rg.nextInt(20) + 10;
               r1 = (int)(r * .7);
               r2 = (int)(r * .4);
               shape = rg.nextInt(1000);
               if (shape < 500){
                   r = (int)1.25 * r;
                   adjustr1 = rg.nextInt(10);
                   adjustr2 = rg.nextInt(10);
                   if (((r - adjustr1) - (r -adjustr2) > 10) || ((r - adjustr2) - (r - adjustr1) > 10)){
                       break;
                    }
            }
            public void JavaStringArraySmCirc{
                private String[] circles[ct] = randColor1, randColor2, randColor3, r, r1, r2, adjust1r, adjust2r;
            }
            while(true){
               x = 900 + rg.nextInt(150);
               y = 500 - rg.nextInt(150); 
               dx = x - 900;
               dy = 500 - y;
               workrad = (int)(Math.sqrt(dx * dx + dy * dy));
               if ((x + y < 1401) && (workrad + r < 150)){
                   break;}
            }
        g.setColor(randColor1);
        g.fillOval(x - r + adjustr1, y - r + adjustr2, 2 * (r - adjustr1), 2 * (r - adjustr2));
        g.setColor(randColor2);
        g.fillOval(x - r1 + adjustr1, y - r1 + adjustr2, 2 * (r1 - adjustr1), 2 * (r1 - adjustr2));
        g.setColor(randColor3);
        g.fillOval(x - r2 + adjustr1, y - r2 + adjustr2, 2 * (r2 - adjustr1), 2 * (r2 - adjustr2));
        g.setColor(randColor1);
        g.fillOval(900 - dx - r + adjustr1, 500 + dy - r + adjustr2, 2 * (r - adjustr1), 2 * (r - adjustr2));
        g.setColor(randColor2);
        g.fillOval(900 - dx - r1 + adjustr1, 500 + dy - r1 + adjustr2, 2 * (r1 - adjustr1), 2 * (r1 - adjustr2));
        g.setColor(randColor3);
        g.fillOval(900 - dx - r2 + adjustr1, 500 + dy - r2 + adjustr2, 2 * (r2 - adjustr1), 2 * (r2 - adjustr2));
        g.setColor(randColor1);
        g.fillOval(900 + dy - r + adjustr1, 500 + dx - r + adjustr2, 2 * (r - adjustr1), 2 * (r - adjustr2));
        g.setColor(randColor2);
        g.fillOval(900 + dy - r1 + adjustr1, 500 + dx - r1 + adjustr2, 2 * (r1 - adjustr1), 2 * (r1 - adjustr2));
        g.setColor(randColor3);
        g.fillOval(900 + dy - r2 + adjustr1, 500 + dx - r2 + adjustr2, 2 * (r2 - adjustr1), 2 * (r2 - adjustr2));
        g.setColor(randColor1);
        g.fillOval(900 - dy - r + adjustr1, 500 - dx - r + adjustr2, 2 * (r - adjustr1), 2 * (r - adjustr2));
        g.setColor(randColor2);
        g.fillOval(900 - dy - r1 + adjustr1, 500 - dx - r1 + adjustr2, 2 * (r1 - adjustr1), 2 * (r1 - adjustr2));
        g.setColor(randColor3);
        g.fillOval(900 - dy - r2 + adjustr1, 500 - dx - r2 + adjustr2, 2 * (r2 - adjustr1), 2 * (r2 - adjustr2));
        adjustr1 = 0;
        adjustr2 = 0;
        ct++;
    }
            while(next < 1000000000){
                while(next1 < 1000000000){
                    while(next2 < 1000000000){
                        while(next3 < 100000000){
                            next3++;
              }
                    next2++;
            }
                next1++;
            }
            next++;
        }
        
}
}
