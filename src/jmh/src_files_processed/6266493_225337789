


import java.util.ArrayList;
import java.awt.*;
import java.awt.event.*;


public class Lab14
{
    public static void main(String args[])
    {
        Windows win = new Windows();
        win.setSize(800,600);
        win.addWindowListener(new WindowAdapter() {public void
        windowClosing(WindowEvent e) {System.exit(0);}});
        win.show();
    }
}


class Windows extends Frame
{

    public void paint(Graphics g)
    {
        ArrayList<Shape> shapes = new ArrayList<Shape>();
        shapes.add(new Square());
        shapes.add(new Triangle());
        shapes.add(new Octagon());
        shapes.add(new Circle());

        drawGrid(g);

        for(Shape shape: shapes)
        {
            shape.drawShape(g);
            shape.displayName(g);
            shape.displayNumSides(g);
        }
    }

    public void drawGrid(Graphics g)
    {
        g.drawLine(0,300,800,300);
        g.drawLine(400,0,400,600);
    }
}

abstract interface Shape
{
    public abstract void drawShape(Graphics g);
    public abstract void displayName(Graphics g);
    public abstract void displayNumSides(Graphics g);
}

abstract class AbstractShape implements Shape
{
    protected int numSides;
    protected String shapeName;
    protected int titleX;
    protected int titleY;
    protected int messageX;
    protected int messageY;
    
    public void displayName(Graphics g)
    {
        g.drawString(shapeName, titleX, titleY);
    }
    public void displayNumSides(Graphics g)
    {
        g.drawString("A " +shapeName+ " has " +numSides+ " sides.", messageX, messageY);
    }
}

class Square extends AbstractShape
{
    public Square()
    {
        numSides = 4;
        shapeName = "Square";
        titleX = 50;
        titleY = 50;
        messageX = 100;
        messageY = 250;
    }
    public void drawShape(Graphics g)
    {
        g.fillRect(100,60,140,140);
    }
    
}

class Triangle extends AbstractShape
{
    Polygon tri = new Poygon;
    public Triangle()
    {
        numSides = 3;
        shapeName = "Triangle";
        titleX = 50;
        titleY = 50;
        messageX = 100;
        messageY = 250;
    }
    public void drawShape(Graphics g)
    {
        g.fillPolygon 
    }
}

class Octagon extends AbstractShape
{
}

class Circle extends AbstractShape
{
}**/