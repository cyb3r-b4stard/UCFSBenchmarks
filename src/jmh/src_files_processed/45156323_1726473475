/**
 * ##### # ########### ## ##### ################ ####.
 * 
 * @###### ######## #######
 * @####### #/##/####
 */
import java.util.Arrays;
public class Array1DExercises
{
    public static void fill1DArray()
    {
        int[] numbers = new int[10];
        for(int i = 0; i < 10; i++)
        {
            numbers[i] = i+1;
            if(i == 9)
                System.out.print("" + numbers[i]);
            else
                System.out.print("" + numbers[i] + ", ");
        }
        System.out.println("\n" + Arrays.toString(numbers));
    }
    
    public static int[] merge(int[] arr1, int[] arr2)
    {
        int[] newArr = new int[arr1.length+arr2.length];
        for(int i = 0; i < arr1.length; i++)
        {
            newArr[i] = arr1[i];
        }
        for(int i = (arr1.length); i < newArr.length; i++)
        {
            newArr[i] = arr2[i-arr1.length];
        }
        return newArr;
    }
    
    public static int[] insert(int[] arr, int val, int index)
    {
        int[] newArr = new int[arr.length+1];
        return newArr;
    }
    
    public static int getToss()
    {
        return (int)(Math.random() * 6 + 1);
    }
    
    public static int[] getCubeTosses(int numTosses)
    {
        int[] tosses = new int[numTosses];
        for(int i = 0; i < tosses.length; i++)
        {
            tosses[i] = getToss();
        }
    }
   return tosses;
}