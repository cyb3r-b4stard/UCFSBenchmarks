import java.util.ArrayList;
import java.util.Iterator;

/**
 * ####### ######## ###### ########.
 * @###### #### ######
 * @####### ##/##/##
 */
public class Monitor
{
    /**
     * Collection of reading objects.
     */
    private ArrayList<Reading> reading;    
    
    /**
     * Create a Monitor object.
     */
    public Monitor()
    {
        reading = new ArrayList<>();
    }
    
    /**
     * Add details of a new reading.
     * @param readingDetails The details of the reading.
     */
    public void addReading(Reading readingDetails)
    {
        reading.add (readingDetails);
    }
    
    /**
     * Get the number of readings.
     * @return the number of readings.
     */
    public int getNumberOfReadings()
    {
        return reading.size();
    }
    
    /**
     * Get the number of readings in the given location.
     * @param location The location of the readings.
     * @return the number of readings in the given location.
     */
    public int getNumberOfReadings(int location)
    {
        return location;
    }
    
    /**
     * List all of the readings, one per line.
     */
    public void list()
    {
        for (Reading readingDetails : reading) {
             getDetails;
             System.out.println (readingDetails);
             
        }
    }
    
    /**
     * Remove all the readings taken on the given day.
     * @param day The day to be removed.
     */
    public void removeReadingsOnDay(int day)
    {
    }
    
    /**
     * Find the earliest day on which the first recorded temperature
     * was above the given ceiling.
     * If there are no readings at all, return -1.
     * If there is no temperature above the ceiling, return the
     * earliest day on which the highest temperature was recorded.
     * @param ceiling Look for a temperature above this value.
     * @return the matching day, or -1 if there are no readings.
     */
    public int findFirstAbove(double ceiling)
    {
        return -1;
    }
    
}