
/**
 * ##### # ########### ## ########### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
import edu.duke.*;
import java.io.*;

public class WordLengths {
    public void countWordLengths(FileResource resource, int [] count){
        for (String word : resource.words()){
            int nonLetter = 0;
            if (!Character.isLetter(word.charAt(word.length()-1))){
                nonLetter++;
            }
            if (!Character.isLetter(word.charAt(0))){
                nonLetter++;
            }
            int length = word.length() - nonLetter;
            if (length > count.length-1){
                count[count.length-1] = count[count.length-1] + 1;
            }else if (length >= 0){
                count[length] = count[length] + 1;
            }
        }
         
        for (int i = 0; i < count.length; i++){
            if (count[i] != 0){
                System.out.println("Words with : " + i + " letters = " + count[i]); 
            }
        }
    
    
    }
    public int indexOfMax(int [] values){
        int idx = 0;
        for (int i = 0; i<values.length;i++){
            if (values[i] > idx){
                idx = i;
        }
        return idx;
    }
    public void testCountWordLengths(){
        FileResource fr = new FileResource();
        int[] count = new int[1000]; 
        countWordLengths(fr, count);
        System.out.println(indexOfMax(count));
    }
}