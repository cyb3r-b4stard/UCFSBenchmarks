
/**
 * ##### # ########### ## ##### ######## ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class LinkList
{
    private Node first;
    private Node last;
    private Node current;
    
    public LinkList()
    {
        first=null;
        last=null;
        current=null;
    }
    
    public boolean isEmpty()
    {
        return(first==null);
    }
    
    public void insertAtFront(Object insertItem)
    {
        Node newNode=new Node(insertItem);
        
        if (isEmpty())
        {
            first=newNode;
            last=newNode;
        }
        else
        {
            newNode.next=first;
            first=newNode;
        }
    }
    
    public void insertAtBack(Object insertItem)
    {
        Node newNode=new Node(insertItem);
        if(isEmpty())
        {
            first=newNode;
            last=newNode;
        }
        else
        {
            last.next=newNode;
            last=newNode;
        }
    }
    
    public Object removeFromFront()
    {
        Object removeItem=null;
        if(isEmpty())
        {
            return removeItem;
        }
        removeItem=first.data;
        if(first==last)
        {
            first=null;
            last=null;
        }
        else
        firt=first.next;
        return removeItem;
    }
    
     
       