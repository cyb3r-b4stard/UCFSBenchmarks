import java.awt.*;

public class Painter
{

    public void paintLevel0A(Graphics g){
        g.setColor(new Color(0,191,255));
        g.drawLine(350, 0, 350, 700);
        g.drawLine(0, 350, 700, 350);
    }

    public void paintLevel0B(Graphics g){
        g.setColor(Color.RED);
        g.fillRect(10, 10, 90, 90);
        g.fillRect(600, 10, 90, 90);
        g.fillRect(10, 600, 90, 90);
        g.fillRect(600, 600, 90, 90);
        g.drawRect(100, 100, 500, 500);

    }

    public void paintLevel0C(Graphics g){
        g.setColor(Color.GREEN);
        g.drawOval(0, 0, 700, 700);
        g.fillOval(100, 200, 200, 100);
        g.fillOval(400, 200, 200, 100);
    }

    public void paintLevel0D(Graphics g){
        g.setColor(new Color(255, 102, 0) );
        g.fillRect(0, 0, 700, 700);

        g.setColor(new Color(102, 0, 0) );
        int [] x2 = {100, 150, 200, 250, 675, 675, 600, 500, 450, 550, 300, 200};
        int [] y2 = {200, 200, 400, 200, 200, 250, 250, 600, 600, 250, 250, 600};
        g.fillPolygon(x2, y2, 12);

        g.setColor(new Color(255, 105, 180) );
        for(int xC = 0; xC < 700; xC += 30){
            int [] x = {xC+10, xC+20, xC+10, xC+0};
            int [] y = {0, 25, 50, 25};
            g.fillPolygon(x, y, 4);
        }
    }

    public void paintLevel0E(Graphics g){
        g.setColor(Color.YELLOW);
        g.fillArc(100, 100, 500, 500, 35, 290);
        g.setColor(Color.BLACK);
        g.fillOval(350, 200, 40, 40);
    }

    public void paintLevel0F(Graphics g){
        g.setColor(new Color(200, 200, 200));
      int [] x = {0, 350, 0};
      int [] y = {0, 350, 700};
      g.fillPolygon(x, y, 3);
   
      g.setColor(new Color(175, 175, 175));
      int [] x2 = {0, 350, 700};
      int [] y2 = {0, 350, 0};
      g.fillPolygon(x2, y2, 3);
   
      g.setColor(new Color(150, 150, 150));
      int [] x3 = {700, 350, 700};
      int [] y3 = {0, 350, 700};
      g.fillPolygon(x3, y3, 3);
   
      g.setColor(new Color(125, 125, 125));
      int [] x4 = {0, 350, 700};
      int [] y4 = {700, 350, 700};
      g.fillPolygon(x4, y4, 3);
    }

    public void paintLevel0G(Graphics g){
        g.setColor(new Color(0, 91, 187));
        g.fillRect(0, 0, 600, 400);
        g.setColor(new Color(253, 213, 0));
        g.fillOval(160, -40, 480, 480);

        g.setColor(Color.WHITE);
        g.fillOval(185, -15, 430, 430);

        g.setColor(Color.WHITE);
        g.fillRect(0, 0, 200, 400);

        g.setColor(Color.BLACK);
        g.fillRect(600, 0, 300, 1000);
        g.fillRect(0, 400, 1000, 300);

        g.setColor(new Color(0, 91, 187));
        g.fillArc(200, 0, 400, 400, 90, 180);
        g.setColor(new Color(253, 213, 0));
        g.fillArc(200, 0, 400, 400, 270, 180);
        g.setColor(new Color(0, 91, 187));
        g.fillOval(300, 0, 200, 200);
        g.setColor(new Color(253, 213, 0));
        g.fillOval(300, 200, 200, 200);
        g.setColor(Color.WHITE);
        g.fillOval(320, 20, 160, 160);
        g.fillOval(320, 220, 160, 160);

      
        int fill = 0;
        for(int n = 0; n < 8; n++){
            if(fill < 2){
                g.setColor(new Color(0, 91, 187));
                g.fillArc(0, n*50, 50, 50, 90, 180);
            }
            else{
                g.setColor(new Color(253, 213, 0));
                g.fillArc(0, n*50, 50, 50, 90, 180);
            }
            fill++;
            if(fill >= 4){
                fill = 0;
            }
        }
        int width = 200;
        int height = 400;
        boolean flip = false;
        g.setColor(Color.BLUE);
        g.fillRect(0, 0, width, height);
        int diff = 50;
        for(int x = diff; x <= width; x += diff){
            if(flip){
                g.setColor(Color.BLUE);
                flip = false;
            }
            else{
                g.setColor(Color.YELLOW);
                flip = true;
            }

            int [] xVal = {x-diff, x, 0};
            int [] yVal = {0, 0, height};
            g.fillPolygon(xVal, yVal, 3);
        }
        for(int x = diff; x <= width; x += diff){
            if(flip){
                g.setColor(Color.BLUE);
                flip = false;
            }
            else{
                g.setColor(Color.YELLOW);
                flip = true;
            }
            int [] xVal = {x-diff, x, width};
            int [] yVal = {height, height, 0};
            g.fillPolygon(xVal, yVal, 3);
        }
    }

    public void paintLevel0H(Graphics g){
        Color color1 = Color.RED;
       Color color2 = Color.BLUE;
       
       
      g.setColor(Color.RED);
      g.fillRect(0, 0, 600, 400);
      g.setColor(color2);
      g.fillOval(160, -40, 480, 480);
      
      g.setColor(Color.WHITE);
      g.fillOval(185, -15, 430, 430);
      
      
      g.setColor(Color.WHITE);
      g.fillRect(0, 0, 200, 400);
      
      g.setColor(Color.BLACK);
      g.fillRect(600, 0, 300, 1000);
      g.fillRect(0, 400, 1000, 300);
     
      g.setColor(color1);
      g.fillArc(200, 0, 400, 400, 90, 180);
      g.setColor(color2);
      g.fillArc(200, 0, 400, 400, 270, 180);
      
      g.fillOval(300, 0, 200, 200);
      g.setColor(color1);
      g.fillOval(300, 200, 200, 200);
      
      g.setColor(Color.WHITE);
      g.fillOval(320, 20, 160, 160);
      g.fillOval(320, 220, 160, 160);
      
      g.setColor(color1);
      g.fillOval(335, 35, 130, 130);
      g.setColor(color2);
      g.fillOval(335, 235, 130, 130);
      
      int fill = 0;
      int num = 10;
      int spacing = 400 / num;
      int offset = spacing * 2;
      for(int n = 0; n < num; n++){
         if(fill < 1){
            g.setColor(color1);
            g.fillArc(0, n*spacing, spacing, spacing, 90, 180);
            int [] x = {spacing/2, 200-offset, spacing/2};
            int [] y = {n*spacing, n*spacing+spacing, n*spacing+spacing};
            g.fillPolygon(x, y, 3);
            g.setColor(color2);
            g.fillArc(200-spacing, n*spacing, spacing, spacing, 270, 180);
            int [] x2 = {offset, 200-spacing/2, 200-spacing/2};
            int [] y2 = {n*spacing, n*spacing, n*spacing+spacing};
            g.fillPolygon(x2, y2, 3);
         }
         else{
            g.setColor(color2);
            g.fillArc(0, n*spacing, spacing, spacing, 90, 180);
            int [] x = {spacing/2, 200-offset, spacing/2};
            int [] y = {n*spacing, n*spacing, n*spacing+spacing};
            g.fillPolygon(x, y, 3);
            g.setColor(color1);
            g.fillArc(200-spacing, n*spacing, spacing, spacing, 270, 180);
            int [] x2 = {offset, 200-spacing/2, 200-spacing/2};
            int [] y2 = {n*spacing+spacing, n*spacing+spacing, n*spacing};
            g.fillPolygon(x2, y2, 3);
         }
         
         fill++;
         if(fill >= 2){
            fill = 0;
         }
      }
    }

    public void paintLevel1A(Graphics g){
        g.setColor(new Color(0, 106, 167));
        g.fillRect(0,0,700,700);
        g.setColor(new Color(254, 204, 0));
        int [] x = {0, 200, 200, 300, 300, 700, 700, 300, 300, 200, 200, 0};
        int [] y = {300, 300, 0, 0, 300, 300, 400, 400, 700, 700, 400, 400};
        g.fillPolygon (x, y, 12);
        
        
        
    }

    public void paintLevel1B(Graphics g){
      g.setColor(new Color(0, 114, 198));
      g.fillRect(0,0,175,700);
      g.setColor(new Color(252, 209, 22));
      g.fillRect(175,0,350,700);
      g.setColor(new Color(0, 158, 96));
      g.fillRect(525,0,175,700);
      int [] x = {225, 275, 325, 275};
      int [] y = {300, 200, 300, 400};
        g.fillPolygon (x, y, 4);
      int [] x2= {375, 425, 475, 425};
      int [] y2 = {300, 200, 300, 400};
        g.fillPolygon (x2, y2, 4);
      int [] x3 = {300, 350, 400, 350};
      int [] y3 = {400, 300, 400, 500};
        g.fillPolygon (x3, y3, 4);
    }

    public void paintLevel1C(Graphics g){
    g.setColor(new Color(0, 0, 0));
      g.fillRect(0,0,700,233);
      g.setColor(new Color(255, 255, 255));
      g.fillRect(0,233,700,466);
      g.setColor(new Color(0, 122, 61));
      g.fillRect(0,466,700,233);
      g.setColor(new Color(206, 17, 38));
      int [] x = {0, 350, 0};
      int [] y = {0, 350, 700};
        g.fillPolygon (x, y, 3);
      g.setColor(new Color(0, 0, 0));  
      public Heptagon( PApplet _p ) { 
  super( _p ); 
  radius = 50.0f; 
   
  vertices = calculateVertices( numVertices, radius ); 
 }   
    }

    public void paintLevel1D(Graphics g){
        
    }

    public void paintLevel1E(Graphics g){
        
    }

    public void paintLevel1F(Graphics g){
        
    }

    public void paintLevel1G(Graphics g){
        
    }

    public void paintLevel1H(Graphics g){
        
    }

    public void paintLevel2A(Graphics g){
        
    }

    public void paintLevel2B(Graphics g){
        
    }

    public void paintLevel2C(Graphics g){
        
    }

    public void paintLevel2D(Graphics g){
        
    }

    public void paintLevel2E(Graphics g){
        
    }

    public void paintLevel2F(Graphics g){
        
    }

    public void paintLevel2G(Graphics g){
        
    }

    public void paintLevel2H(Graphics g){
        
    }

    public void paintLevel3A(Graphics g){
        
    }

    public void paintLevel3B(Graphics g){
        
    }

    public void paintLevel3C(Graphics g){
        
    }

    public void paintLevel3D(Graphics g){
        
    }

    public void paintLevel3E(Graphics g){
        
    }

    public void paintLevel3F(Graphics g){
        
    }

    public void paintLevel3G(Graphics g){
        
    }

    public void paintLevel3H(Graphics g){
        
    }

    public void paintLevel4A(Graphics g){
        
    }

    public void paintLevel4B(Graphics g){
        
    }

    public void paintLevel4C(Graphics g){
        
    }

    public void paintLevel4D(Graphics g){
        
    }

    public void paintLevel4E(Graphics g){
        
    }

    public void paintLevel4F(Graphics g){
        
    }

    public void paintLevel4G(Graphics g){
        
    }

    public void paintLevel4H(Graphics g){
        
    }
}