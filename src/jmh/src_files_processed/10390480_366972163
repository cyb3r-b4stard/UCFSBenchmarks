import java.util.ArrayList;

/**
 * # ##### ## #### ####### ## ##### #####.
 * #### ####### ### #### ### #####.
 * 
 * @###### ##### #. ###### ### ####### #######
 * @####### ####.##.##
 */
public class MusicOrganizer
{
    private ArrayList<String> files;
    private MusicPlayer player;
        
    /**
     * Create a MusicOrganizer
     */
    public MusicOrganizer()
    {
        files = new ArrayList<String>();
        player = new MusicPlayer();
    }
    
    /**
     * Add a file to the collection.
     * @param filename The file to be added.
     */
    public void addFile(String filename)
    {
        files.add(filename);
    }
    
    /**
     * Return the number of files in the collection.
     * @return The number of files in the collection.
     */
    public int getNumberOfFiles()
    {
        return files.size();
    }
    
    /**
     * List a file from the collection.
     * @param index The index of the file to be listed.
     */
    public void listFile(int index)
    {
        if(index >= 0 && index < files.size()) {
            String filename = files.get(index);
            System.out.println(filename);
        }
    }
    
    /**
     * Remove a file from the collection.
     * @param index The index of the file to be removed.
     */
    public void removeFile(int index)
    {
        if(index >= 0 && index < files.size()) {
            files.remove(index);
        }
    }

    /**
     * Start playing a file in the collection.
     * Use stopPlaying() to stop it playing.
     * @param index The index of the file to be played.
     */
    public void startPlaying(int index)
    {
        String filename = files.get(index);
        player.startPlaying(filename);
    }

    /**
     * Stop the player.
     */
    public void stopPlaying()
    {
        player.stop();
    }
    /**
     * Determine whether the given index is valid for the colletion.
     * Print an error message if it is not.
     * @param index The imdex to be checked.
     * @return true if the index is valid, false othewise.
     */
    private boolean validIndex(int index){
        boolean valid;
        if(index>=0 || index< files.size()){
            valid=true;
        }
        else
        valid=false;
        return valid
    }
}