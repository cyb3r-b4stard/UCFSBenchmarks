
/**
 * #### #######
 * 

 */
public class Matrix
{
    static final int MAX_SIZE1= 255;
    static final int MAX_SIZE2= 255;
    int _elements;
    
    public Matrix (int [][] array)
   {
         Matrix array.copy = new Matrix ([array.length] [array[0].length])
            for (int i = 0; i < array.length; i++)
            {
                for (int j = 0; j < array [0].length; j++)
                {
                    this._elements [i] [j] = array [i] [j];
                }
            }
            return _elements;
   } 
 
    public Matrix ( int size1, int size2)
    {
        int [][] numArray = new int [0] [0];
    
    }
    public String toString ()
    {
        int [][] numArray = new int [size1] [size2];
        for ( int j = 0; j <numArray[0].length ; j++)
        {
         this._elements [j] [i] = numArray [j] [i];
         return (i+ "\t" +j);
        }
        return _elements.toString () + "\n";
    }
    
    public Matrix flipHorizontal()
    {
        int horizontal = array.length;
        flipHorizontal [] [] horizontal;
        for (int j = 0; j < rows; j++)
            {
              for ( int i =0; i < array.length; i++);
              horizontal [j] [array.length -i -1] = this._elements [j] [i];
             }
        return new Matrix (array.length[j] [i]);
    }
    
    public Matrix flipVertical()
    {
        int vertical = array.length;
        flipVertical [] [] vertical;
        for (int i = 0; i < rows/2; i++)
            {
                vertical = array [ rows -i -1];
                array [ rows -i -1] = array [i];
                array [i] = vertical;
             }
        return new Matrix (array[i] [j]);
    }
    
    public Matrix rotateClockwise()
        {
        for (int i = 0; i < array[0].length; i++)
            {
                for (int j = 0; j < array[0].length-1; j--)
                {
                    this._elements [i] [j] = array [j] [i];
                } 
            }
        return new Matrix (_elements.array[0]);
    }
    
    public Matrix rotateCounterClockwise()
            {
        for (int i = 0; i < array[0].length; i--)
            {
                for (int j = 0; j < array[0].length-1; j++)
                {
                    this._elements [j] [i] = array [i] [j];
                } 
            }
        return new Matrix (_elements.array[0]);
    }
}