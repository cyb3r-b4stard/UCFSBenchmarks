import java.util.InputMismatchException;

public class Withdrawal extends Transaction
{
   private int amount; 
   private Keypad keypad; 
   private CashDispenser cashDispenser; 
  
   
   private final static int CANCELED = 0;

   public Withdrawal( int userAccountNumber, Screen atmScreen, 
      BankDatabase atmBankDatabase, Keypad atmKeypad, 
      CashDispenser atmCashDispenser)
   {
      super( userAccountNumber, atmScreen, atmBankDatabase );
      
      keypad = atmKeypad;
      cashDispenser = atmCashDispenser;
      
      
      
   } 

   public void execute()
   {
      boolean cashDispensed = false; 
      double availableBalance; 


      BankDatabase bankDatabase = getBankDatabase(); 
      
      Screen screen = getScreen();

      do
      {
         amount = displayMenuOfAmounts();
         
         if (bankDatabase.isCurrentAccount(getAccountNumber()))
         {             
             int acnum = getAccountNumber();
             int overdrawlim;
             CurrentAccount ac = (CurrentAccount) bankDatabase.getAccount(acnum);
             overdrawlim = bankDatabase.getOverdrawnLimit(ac);
             if(amount>overdrawlim)
             {                 
                screen.displayMessageLine( "\nYour Withrawal amount has exceeded the overdrawn limit!"); 
                amount = CANCELED;
                
              }
          }
         if ( amount != CANCELED )
         {
            availableBalance = 
               bankDatabase.getAvailableBalance( getAccountNumber() );
      
            if ( amount <= availableBalance )
            {   
               if ( cashDispenser.isSufficientCashAvailable( amount ) )
               {
                  bankDatabase.debit( getAccountNumber(), amount );
                  bankDatabase.changeOverdrawnLimit(getAccountNumber(),amount);
                  cashDispenser.dispenseCash( amount ); 
                  cashDispensed = true; 

                  screen.displayMessageLine("Do you want a receipt? \n Yes:1 \nNo:2");
                  int input = keypad.getInput();
                    if (input == 1)
                    {
                      try
                        {
                          screen.displayMessageLine( 
                          "\nPlease take your Card now." );
                          Thread.sleep(2000);
                           screen.displayMessageLine( 
                          "\nPlease take your Receipt now." );
                          Thread.sleep(2000);
                           screen.displayMessageLine( 
                          "\nPlease take your Money now." );
                           Thread.sleep(2000);             
                        }
                      catch(InterruptedException e)
                        {
                          Thread.currentThread().interrupt(); 
                        }
                      ATM theATM = new ATM(); 
                      theATM.run();
                    }
                   
                    else if (input  == 2)
                    {
                      try
                      {
                        screen.displayMessageLine( 
                        "\nPlease take your Card now." );
                        Thread.sleep(2000);
                         screen.displayMessageLine( 
                        "\nPlease take your Money now." );
                         Thread.sleep(2000);                
                      }
                      catch(InterruptedException e)
                      {
                        Thread.currentThread().interrupt(); 
                      }
                      ATM theATM = new ATM();    
                      theATM.run();
                    }
                    else if (input != 1 && input != 2)
                      { screen.displayMessageLine("Input Error!Please input 1:yes OR 2:no.");}
                  }
            else 
            {      screen.displayMessageLine( 
                     "\nInsufficient cash available in the ATM." +
                     "\n\nPlease choose a smaller amount." );
            }
        }
            else 
            {
               screen.displayMessageLine( 
                  "\nInsufficient funds in your account." +
                  "\n\nPlease choose a smaller amount." );
            } 
         } 
        else 
         {
            screen.displayMessageLine( "\nCanceling transaction..." );
            return; 
         } 
      } while ( !cashDispensed );

   } 

   private int displayMenuOfAmounts()
   {
      int index=1; 
      int withdraw=0;
      Screen screen = getScreen(); 
      


      while ( index != 0 )
      {
         screen.displayMessageLine( "\nPlease Enter The Withdraw Amount OR Press \"0\" To Exit" );
         int input = keypad.getInput(); 
         
         
            
            if (input%100!=0)
            {
                screen.displayMessageLine( "\nWithdraw Must Be Multiples Of $100");
            }
            else if (input>10000)
            {
                screen.displayMessageLine( "\nMaximum Amount Of Withdraw is $10000");
            }
           else if (input == 0)
           {
            withdraw = CANCELED;
            return index =0;
           }
           else
           {
             withdraw = input ;
               index = 0;
           }
   } 
    return withdraw;
} 


 




/**************************************************************************
 * (C) Copyright 1992-2007 by Deitel & Associates, Inc. and               *
 * Pearson Education, Inc. All Rights Reserved.                           *
 *                                                                        *
 * DISCLAIMER: The authors and publisher of this book have used their     *
 * best efforts in preparing the book. These efforts include the          *
 * development, research, and testing of the theories and programs        *
 * to determine their effectiveness. The authors and publisher make       *
 * no warranty of any kind, expressed or implied, with regard to these    *
 * programs or to the documentation contained in these books. The authors *
 * and publisher shall not be liable in any event for incidental or       *
 * consequential damages in connection with, or arising out of, the       *
 * furnishing, performance, or use of these programs.                     *
 *************************************************************************/