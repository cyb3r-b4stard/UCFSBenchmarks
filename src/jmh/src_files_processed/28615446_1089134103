import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.util.Random;

/**
  *
  * ############
  *
  * @####### #.# ### ##.##.####
  * @###### 
  */

public class jApplet extends JApplet {
  private Label label = new Label();
  private Button erstellen = new Button();
  private List liste1 = new List();
  private List liste2 = new List();
  private Button minmax = new Button();
  private Button kopieren = new Button();
  private Button zusatz = new Button();
  private Button min = new Button();
  private TextField minFeld = new TextField();
  private Button max = new Button();
  private TextField maxFeld = new TextField();
  private Button leeren11 = new Button();
  private Button leeren2 = new Button();
  private int zahl;
  
  public void init() {
    Container cp = getContentPane();
    cp.setLayout(null);
    cp.setBounds(0, 0, 444, 542);
    
    label.setBounds(176, 16, 67, 49);
    label.setText("Arrays");
    label.setFont(new Font("Dialog", Font.BOLD, 20));
    cp.add(label);
    erstellen.setBounds(32, 88, 361, 33);
    erstellen.setLabel("Array erstellen");
    erstellen.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        erstellen_ActionPerformed(evt);
      }
    });
    cp.add(erstellen);
    liste1.setBounds(24, 144, 121, 193);
    cp.add(liste1);
    liste2.setBounds(288, 144, 113, 193);
    cp.add(liste2);
    minmax.setBounds(160, 160, 113, 33);
    minmax.setLabel("min/max kopieren");
    minmax.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        minmax_ActionPerformed(evt);
      }
    });
    cp.add(minmax);
    kopieren.setBounds(160, 208, 113, 33);
    kopieren.setLabel("kopieren");
    kopieren.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        kopieren_ActionPerformed(evt);
      }
    });
    cp.add(kopieren);
    zusatz.setBounds(160, 296, 113, 33);
    zusatz.setLabel("Zusatz");
    zusatz.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        zusatz_ActionPerformed(evt);
      }
    });
    cp.add(zusatz);
    min.setBounds(104, 400, 81, 33);
    min.setLabel("Minimum");
    min.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        min_ActionPerformed(evt);
      }
    });
    cp.add(min);
    minFeld.setBounds(216, 400, 113, 33);
    cp.add(minFeld);
    max.setBounds(104, 448, 81, 33);
    max.setLabel("Maximum");
    max.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        max_ActionPerformed(evt);
      }
    });
    cp.add(max);
    maxFeld.setBounds(216, 448, 113, 33);
    cp.add(maxFeld);
    leeren11.setBounds(32, 352, 105, 25);
    leeren11.setLabel("leeren1");
    leeren11.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        leeren11_ActionPerformed(evt);
      }
    });
    cp.add(leeren11);
    leeren2.setBounds(296, 352, 97, 25);
    leeren2.setLabel("leeren");
    leeren2.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        leeren2_ActionPerformed(evt);
      }
    });
    cp.add(leeren2);
    
  } 

  public void erstellen_ActionPerformed(ActionEvent evt) 
  {
    int [] zahlen = new int [14];
    for(int i=0; i< zahlen.length;i++)
    {
       Random rand = new Random();
       int zahl = rand.nextInt();
       zahlen[i]= zahl;
       liste1.add(String.valueOf(zahl));
    }
  } 

  public void minmax_ActionPerformed(ActionEvent evt) 
  {
    
  } 

  public void kopieren_ActionPerformed(ActionEvent evt) 
  {
    liste2.add(String.valueOf(erstellen_ActionPerformed(ActionEvent evt)));
  } 

  public void zusatz_ActionPerformed(ActionEvent evt) 
  {
    
  } 

  public void min_ActionPerformed(ActionEvent evt) 
  {
    
  } 

  public void max_ActionPerformed(ActionEvent evt) 
  {
    
  } 

  public void leeren11_ActionPerformed(ActionEvent evt) 
  {
    liste1.removeAll();
  } 

  public void leeren2_ActionPerformed(ActionEvent evt) 
  {
    liste2.removeAll();
  } 

  
} 
