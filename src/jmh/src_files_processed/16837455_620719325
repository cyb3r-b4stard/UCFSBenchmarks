/**
 * # ##### ## ########## ########## ## # ######
 */
public class FirstAndLast
{

    private String words;
    /**
     * Constructs an object with the given string of words
     * @param words the string of characters for this object
     */
    public FirstAndLast(String words)
    {
        this.words = words;
    }

    /**
     * Determines if the string consists of a single letter
     * @param in the string to check. 
     * @return false if the string is not a single character 
     * of if that character is not a letter otherwise returns 
     * true
     * 
     */
    public static boolean isLetter(String in)
    {
        if (in.length() > 1)
        {
            return false;
        }

        return Character.isLetter(in.charAt(0));
    }

    /**
     * The first character of every word in the string
     * @return the first character of every word in the string
     */
    public String firstLetters()
    {
        String first = words.substring(0, 1);  
        String subWords =      
        int index = words.indexOf(" "); 
        while(index > -1)
        {
            String letter = words.substring(index, index + 1);
            subWords = subWords + letter;
            index = words.indexOf(" ", index + 1);
        }
        return subWords;

    }
    /**
     * The last character of every word in the string
     * @return the last character of every word in the string
     */
    public String lastLetters()
    {
        int index = words.indexOf(" ");
        String allCharacters = "";
        String lastCharacter = words.substring(index - 1, index);
        while (index > 0)
        {
            lastCharacter = words.substring(index - 1, index);
            if (isLetter(lastCharacter))
            {

                allCharacters = allCharacters + lastCharacter;

            }

            else
            {
                allCharacters = allCharacters + words.substring(index - 2, index - 1);

            }
            index = words.indexOf(" ", index + 1);
        }

        return allCharacters + lastCharacter;
    }

    /**
     * Sets a new sentence in this object
     * @param theWords the new sentence to set
     */
    public void setSentence(String theWords)
    {
        words = theWords;
    }

    /**
     * Gets the sentence 
     * @return the sentence 
     */
    public String getSentence()
    {
        return words;
    }
}