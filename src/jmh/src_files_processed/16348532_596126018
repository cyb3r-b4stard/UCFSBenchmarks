
/**
 * ##### # ########### ## ##### ############### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class LinkedListQueue
{
    private String[] queueArray;
    private int queueSize,front, rear, numberOfServiced,maxLineLength = 0;
    
    LinkedListQueue(int size)
    {
        queueArray = new Customer[size];
    }
    public void Insert(Customer c)
    {
        queueArray[rear] = c;
        rear++;
        queueSize++;
        System.out.println("New customer added!  Queue length is now " + queueSize;
        if(maxLineLength < queueSize)
        {
            maxLineLength = queueSize;
        }
    }
    public void remove()
    {
        if (queueSize >0)
        {
            queueArray[front] = null;
            front++;
            queueSize--;
            numberOfServiced++;
            System.out.println("Customer serviced and removed from the queue.  Queue length is now " + queueSize);
            
        }
        else
        {
            System.out.println("No customers left in line");
        }
    }
    public int getSize()
    {
        return queueSize;
    }
    public int getFront()
    {
        return front;
    }
    public int getRear()
    {
        return rear;
    }
    public int getNumberOfServiced()
    {
        return numberOfServiced;
    }
    public int getMaxLineLength()
    {
        return maxLineLength;
    }
    public Customer getFront()
    {
        return queueArray[front];
    }
    
}