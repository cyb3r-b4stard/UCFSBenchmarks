import java.util.Arrays;
/**
 * ##### # ########### ## ##### ###### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Garage
{
  private int[][] parkingSpace;
  private int levelsInGarage;
  private int spacesPerLevelInGarage;
  /**
   * takes the number of levels and the number of parking spaces in one level.
   * constructs a garage where all the parking spots are free.
   * @param numberLevel number of levels the garage has
   * @param spacePerLevel number of parking spaces per level the garage has.
   */
  public Garage(int numberLevel, int spacePerLevel)
  {
      parkingSpace = new int[numberLevel][spacePerLevel];
      for (int i = 1; i <= numberLevel; i++)
      {
          for(int j = 1; j<= spacePerLevel; j++)
          {
              parkingSpace[i][j] = 0;
          }
      }
      int levelsInGarage = numberLevel;
      int spacesPerLevelInGarage = spacePerLevel;
  }
  /**
   * Checks whether a certain parking spot is free
   * @param level the level of the certain parking spot
   * @param place the place on that level of the parking spot
   * @return a string which states whether the parking spot is free or not
   */
  public boolean checkAvailability(int level, int place)
  {
      if(parkingSpace[level][place] == 0)
      {
          true;
          true = available;
          return available;
      }
      else
      {
          return false
      }
  }
  /**
   * Parks a car at a certain parking spot
   * @param level the level of the certain parking spot
   * @param place the place on that levelof the parking spot
   */
  public void parking(int level, int place)
  {
      parkingSpace[level][place] = 1;
  }
  /**
   * print parking spaces in the garage and shows whether they are available or not
   */
  public void printGarage()
  {
      for (int i = 1; i <= levelsInGarage; i++)
      {
          for(int j = 1; j<= spacesPerLevelInGarage; j++)
          {
              if (parkingSpace[i][j] == 0)
              {
                  System.out.print("Parking position" + j + "on level" + i + "is available");
              }
              else 
              {
                  System.out.print("Parking position" + j + "on level" + i + "is unavailable");
              }
          }
      }
  }
  /**
   * returns the number of available parking spaces in the garage.
   * @return the number of spots available
   */
  public int numberAvailability()
  {
      int count = 0; 
      for (int i = 1; i <= levelsInGarage; i++)
      {
          for(int j = 1; j<= spacesPerLevelInGarage; j++)
          {
              if(parkingSpace[i][j] == 0)
              {
                  count++;
              }
          }
      }
      return count;
  }
}