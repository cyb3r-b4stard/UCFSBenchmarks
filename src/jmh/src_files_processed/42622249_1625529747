
/**
 * ######## ### ### ###-####.
 * #### ### ##### ########, ###### ### ###### ### ##### ## #### ### #########.
 */
public class Kursliste
{
    List<String> kursliste = new List<String>();
    
    public Kursliste(){
        String[] infos={"Leonard","Berkay","Tobias","Tobias", "Julia","Robert"};
        
        for(String name:infos){
            kursliste.append(name);
            kursliste.insert(name);
            kursliste.equals(name);
        }
    }
    
    /**
     * Aufgabe 1:
     * Fügt euren eigenen Namen in die Kursliste ein.
     */
    public void eigenenNamenEinfuegen(String name){
        kursliste.append(name);
    }
    
    /**
     * Aufgabe 2:
     * Lösche den letzten Namen in der Kursliste.
     * Nutze hierfür:
     *  -void toLast();
     *  -void remove();
     */
    public void letztenNamenLoeschen(){
        kursliste.toLast();
        kursliste.remove();
    }
    
    
    /**
     * Aufgabe 3:
     * Füge deinen Namen vor einen bestimmten Namen aus infos[] hinzu.
     * 
     * Nutze hierfür die Methode 
     * void insert (ContentType pContent)
     */
    public void eigenenNamenVorBestimmtenNamenEinfuegen(String gegebenerName, String eigenerName){
        kursliste.toFirst();
        while(true){
            String s = kursliste.getContent();
            if(s == gegebenerName){
                kursliste.insert(eigenerName);
            }
            if(kursliste.hasAccess()==false){
                break;
            }
            kursliste.next();
        }
    }
    
    /**
     * Zusatzaufgabe (4):
     * Überprüfe, ob zwei aufeinanderfolgende Werte gleich sind.
     */
    public void listeVergleichen(){
        kursliste.toFirst()
        
        String s = new String();
        while(true){
            s = kursliste.getContent();
            kursliste.next();
            String s1 = kursliste.getContent();
            kursliste.equals();
            
        }
    }
   
}


/**
 * Tipps:
 *  Aufgabe 1:          Schau in den Konstruktor.
 *  
 *  ------
 *  Aufgabe 3:          Auf Groß- und Kleinschreibung geachtet?
 *                      Schema wie bei Aufgabe 1.
 *             
 *  ------
 *  Zusatzaufgabe (4):  Zum vergleichen nutze die Methode String.equals()
 *             
 */