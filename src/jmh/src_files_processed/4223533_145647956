/**
 * ############# (######### #####) ### #### ######## ## ## ### 
 * ######## ##### ### ########## #. (###### ##########, ########, ##. ###### #. ####### ########)
 * 
 * ############# ###### # ###### ####### #### ######
 * ####-#### #######.
 * ### ##### ## # ###### ## ######### ### ### ###########.
 * ######### #### ##### ## ###### #### # #### #### ######
 * ######## ####### ## #####, ### #### #### ##### # ######
 * ## ###### ##### ### #### #####.
 * 
 * @###### ##### #. ###### ### ####### #######
 * ######## ########
 *
 * @####### ####.##.##
 * #/##/##
 * *************************************************************
 * *************************************************************
 * #### ####: ######## ########
 * ####### ### #### ####### ##### ## #### #### #####:
 * 
 * *************************************************************
 * *************************************************************
 * ####: ### ###### ### ### ####### ##### ### #########
 * ###### ### ##################### ###########.
 * *************************************************************
 * 
 */
public class TwoDestinationMachine
{
    private String dest1Name;
    private int dest1Price;
    private String dest2Name;
    private int dest2Price;
    private int balance;
    private int total;

    /**
     * Create a machine that issues tickets of the given price.
     */
    public TwoDestinationMachine (String pDest1Name, int pDest1Price, 
        String pDest2Name, int pDest2Price)

    {
        dest1Name = pDest1Name;
        dest1Price = pDest1Price;
        dest1Name = pDest1Name;
        dest1Price = pDest1Price;
        balance = 0;
        total = 0;
    }

       /**
     * Return The amount of money already inserted for the
     * next ticket.
     */
    public int getBalance()
    {
        return balance;
    }

    /**
     * Receive an amount of money in cents from a customer.
     * Check that the amount is sensible.
     */
    public void insertMoney(int amount)
    {
        if(amount > 0) {
            balance = balance + amount;
        }
        else {
            System.out.println("Use a positive amount: " +
                               amount);
        }
    }

    /**
     * Print a ticket if enough money has been inserted, and
     * reduce the current balance by the ticket price. Print
     * an error message if more money is required.
     */
    public void printTicket(int pDesiredDestination)
    {
        if(pDesiredDestination == 1)
       {
          if(balance >= dest1Price) 
          {
            System.out.println("##################");
            System.out.println("# The BlueJ Line");
            System.out.println("# Ticket to " + dest1Name);
            System.out.println("# " + dest1Price + " cents.");
            System.out.println("##################");
            System.out.println();

            total = total + dest1Price;
            balance = balance - dest1Price;
        }
        else {
            System.out.println("You must insert at least: " +
                               (dest1Price - balance) + " more cents.");
        }    
       }
    
         if(pDesiredDestination == 2)
        {
          if(balance >= dest2Price) 
          {
            System.out.println("##################");
            System.out.println("# The BlueJ Line");
            System.out.println("# Ticket to " + dest2Name);
            System.out.println("# " + dest2Price + " cents.");
            System.out.println("##################");
            System.out.println();

            total = total + dest2Price;
            balance = balance - dest2Price;
           }
           else 
           {
            System.out.println("You must insert at least: " +
                               (dest2Price - balance) + " more cents.");
            }    
        }
        
        if(pDesiredDestination > 2)
        {
        System.out.println("you must specify the destination by entering either a 1 or a 2.");
        }
        
        if(pDesiredDestination < 1)
        {
        System.out.println("you must specify the destination by entering either a 1 or a 2.");
        }
        
       
        }
    }

    /**
     * Return the money in the balance.
     * The balance is cleared.
     */
   public int refundBalance()
    {
        int amountToRefund;
        amountToRefund = balance;
        balance = 0;
        return amountToRefund;
    }
}