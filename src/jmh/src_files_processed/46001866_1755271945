
/**
 * ##### # ########### ## ##### ####.
 * ####### #### #####
 * @###### (#### ####) 
 * #/#/####
 */
public class Part1 {
    public int findStopCondon(String dna, int startIndex, String stopCondon)  {
        int currIndex = dna.indexOf(stopCondon, startIndex + 3);
        while(currIndex != -1)   {
            int diff = currIndex- startIndex;
            if (diff % 3 == 0)  {
                return currIndex;
                }
                else  {
                    currIndex = dna.indexOf(stopCondon, currIndex + 1);
                }
            }
            return dna.length();
    
    }
    public void testFindStopCondon() {
        String dna = "xxxyyyzzzTAAxxxyyyzzzTAAxx";
        int dex = findStopCondon(dna,0,"TAA");
        if (dex != 9) System.out.println("error on 9");
        dex = findStopCondon(dna,9,"TAA");
        if (dex != 21) System.out.println("error on 21");
           dex = findStopCondon(dna,1,"TAA");
        if (dex != 26) System.out.println("error on 26");
           dex = findStopCondon(dna,0,"TAG");
        if (dex != 26) System.out.println("error on 26 TAG");
        System.out.println("tests finished");
    }
        
  
    
    public String findGene(String dna)  {
        int startIndex = dna.indexOf("ATG");
        if (startIndex == -1)  {
            return "";
        }
        int taaIndex = findStopCondon(dna,startIndex,"TAA");
        int tagIndex = findStopCondon(dna,startIndex,"TAG");
        int tgaIndex = findStopCondon(dna,startIndex,"TGA");
        int temp = Math.min(taaIndex,tagIndex);
        int minIndex = Math.min(temp, tgaIndex);
        if (minIndex == dna.length())  {
            return "";
        }
        return dna.substring(startIndex,minIndex + 3);
        System.out.println(dna.substring(startIndex,minIndex+3));
    }
        
        

    
    public void testFindGene()  {
        String dna = "ATGCCCGGGATAACCC";
        String gene = findGene(dna);
        if  ( ! gene.equals("ATGCCCGGGATAA")) {
            System.out.println("error");
        }
        else {
            System.out.println(
    }
    System.out.println("tests finished");
}
    
    public void printAllGenes(String dna)  {
        
    }
}