
/**
 * ##### # ########### ## ##### ######## ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
import java.util.*;
import chapman.io.*;
public class LabClass
{
 public Student.<Student>;
 public static String NP,S,H,Num;
 public static int Can=0,C;
 private String instructor;
 private String Salon;
 private String Hora_Y_Dia;
 private List<Student>registros_de_estudiantes;
 private int capacidad;
 private static StdIn in=new StdIn();
 public void main(String[]args)
{
      int Op;
      System.out.print("\n\t\t\t\t » Nombre Instructor : ");
      NP=in.readString();
      registra_Instructor(NP);
      System.out.print("\n\t\t\t\t » Salon : ");
      S=in.readString();
      registra_Salon(S);
      System.out.print("\n\t\t\t\t » Horario : ");
      H=in.readString();
      registra_Horario(H);
      System.out.print("\n\t\t\t\t » Cantidad de Alumnos a admitir : ");
      Can=in.readInt();
      capacidad=Can;
      do
      {
       menu();
       System.out.print("\n\t\t\t\t »Opcion : ");
       Op=in.readInt();
       Op=validar(Op);
       switch(Op)
       {
           case 1:
           System.out.println("\t\t\t\t »»» R E G I S T R O  D E  A L U M N O S \n\n\n");
           System.out.print("\n\t\t\t\t Nombre del Alumno : ");
           NP=in.readString();
           System.out.print("\n\t\t\t\t » No. Control : ");
           Num=in.readString();
           System.out.print("\n\t\t\t\t » Creditos : ");
           C=in.readInt();
           Student.Student(NP,Num);
        }
      }
      while(Op!=2);
    imprime_Lista();
}
public static int validar(int x)
{
 while(x<1 || x>2)
 {
     System.out.print("\n\t\t\t\t « Opcion no valida »");
     menu();
     System.out.print("\n\t\t\t\t » Opcion : ");
     x=in.readInt();
 }
    return x;
}
public static void menu()
{
        System.out.println ("\n\t\t\t\t\t |--------------------------|");
        System.out.println ("\t\t\t\t\t |     »»» M E N U «««      |");
        System.out.println ("\t\t\t\t\t |--------------------------|");
        System.out.println ("\t\t\t\t\t | Registro...............1 |");
        System.out.println ("\t\t\t\t\t |--------------------------|");
        System.out.println ("\t\t\t\t\t | finalizar..............3 |");
        System.out.println ("\t\t\t\t\t |--------------------------|");
    }
 
public LabClass(int max_num_de_estudiantes)
 {
     instructor="unknown";
     Salon="unknown";
     Hora_Y_Dia="unknown";
     registros_de_estudiantes=new ArrayList<Student>();
     capacidad=max_num_de_estudiantes;
}
public void reg_Estudiante(Student nuevo_Estudiante)
{
    if(registros_de_estudiantes.size()==capacidad)
     System.out.println("The class is full, you cannot enrol.");
    else
     registros_de_estudiantes.add(nuevo_Estudiante);
}
public int numero_de_Estudiantes()
{
    return registros_de_estudiantes.size();
}
public void registra_Salon(String numero_de_Salon)
{
    Salon=numero_de_Salon;
}
public void registra_Horario(String Dia_Y_Hora)
{
    Hora_Y_Dia=Dia_Y_Hora;
}
public void registra_Instructor(String nombre_Instructor)
{
    instructor=nombre_Instructor;
}
public void imprime_Lista()
{
    System.out.println("Horario "+Hora_Y_Dia);
    System.out.println("Instructor : " +instructor+ " Salon : " +Salon);
    System.out.println("Lista");
    for(Student registros:registros_de_estudiantes)
    {
        System.out.println("nombre " +registros.nombre);
        registros.muestra_datos();
    }
System.out.println("Numero de estudiantes : "+numero_de_Estudiantes());
}
}
    