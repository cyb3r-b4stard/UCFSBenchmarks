
/**
 * ### ############ ##### ########## # ####### ##### ####### ### #
 * ########-##### ## #### #####. ### ##### ##### ##### ### #######. ### 
 * ##### ## ### ##### ## ##:## (########) ## ##:## (### ###### ###### 
 * ########).
 * 
 * ### ##### ####### ######## "#####" (### ### ######## ######) ##### ######
 * ### ###### ## ############ ### #######. #### ## #### ## ### ##### #####
 * #######: ### #### ########## #### ### ####### #### #### ## ####.
 * 
 * @###### ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */
public class ClockDisplay
{
    private NumberDisplay hours;
    private NumberDisplay minutes;
    private String displayString;    
    private int alarmMinute = 30;
    private int alarmHour = 6;
    private boolean isAlarmSet = false;
    /**
     * Constructor for ClockDisplay objects. This constructor 
     * creates a new clock set at 00:00.
     */
    public ClockDisplay()
    {
        hours = new NumberDisplay(24);
        minutes = new NumberDisplay(60);
        updateDisplay();
    }
    /**
     * Constructor for ClockDisplay objects. This constructor
     * creates a new clock set at the time specified by the 
     * parameters.
     */
    public ClockDisplay(int hour, int minute)
    {
        hours = new NumberDisplay(24);
        minutes = new NumberDisplay(60);
        setTime(hour, minute);
    }
    public void setAlarmOn()
    {
        isAlarmSet = true;
    }
    public void setAlarmOff()
    {
        isAlarmSet = false;
    }
    public void setAlarm(boolean alarm)
    {
        isAlarmSet = alarm;
    }
    
    /**
     * This method should get called once every minute - it makes
     * the clock display go one minute forward.
     */
    public void timeTick()
    {
        minutes.increment();
        if(minutes.getValue() == 0) {  
            hours.increment();
        }
        updateDisplay();
        if ( minutes.getValue() == alarmMinute && hours.getValue() == alarmHour        && isAlarmSet == true)
        {
            System.out.println ("GET UP OR DIE");
        }
    }
    /**
     * Set the time of the display to the specified hour and
     * minute.
     */
    public void setTime(int hour, int minute)
    {
        hours.setValue(hour);
        minutes.setValue(minute);
        updateDisplay();
    }
    /**
     * Return the current time of this display in the format HH:MM.
     */
    public String getTime()
    {
        return displayString;
    }
    public void setAlarmHour (int newHour)
    {
        alarmHour = newHour;
    }
    public void setAlarmMinute (int newMinute)
    {
        alarmMinute = newMinute;
    }
    public String getAlarmTime()
    {
        return alarmHour + ":" + alarmMinute;
    }
    /**
     * Update the internal string that represents the display.
     */
    private void updateDisplay()
    {
        displayString = hours.getDisplayValue() + ":" + 
        minutes.getDisplayValue();
    }
    public void toggleAlarm()
    {
        if(isAlarmSet = false)
}