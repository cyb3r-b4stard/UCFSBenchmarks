import java.util.ArrayList;
import java.util.Iterator;

/**
 * ##### ####### ## #### ###########.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Club
{
    public ArrayList<Membership> club;
    /**
     * Constructor for objects of class Club
     */
    public Club()
    {
        club = new ArrayList<Membership>();
    }

    /**
     * Add a new member to the club's list of members.
     * @param member The member object to be added.
     */
    public void join(Membership member){
        if (!(search(member.getName())) club.add(member);  
        else System.out.println(member + " is already in the club");
    }
  public void fillMembers(){
        join(new Membership("David", 2, 2004));
        join(new Membership("Michael", 1, 2004));
        join(new Membership("John", 5, 2004));
        join(new Membership("Colin", 11, 2004));
        join(new Membership("Jack", 2, 2004));
        join(new Membership("Kate", 1, 2004));
    }


    /**
    * @return The number of members (Membership objects) in
    *         the club.
    */
    public int numberOfMembers()
    {
        return club.size();
    }

    public int numberJoinedInMonth(int month, int year){
        int count = 0;
        for (Membership member : club){
            if ((member.getYear() == year) && (member.getMonth() == month))count++;
        }
        return count; 
    }

    public void listJoinedInMonth(int month, int year){
        for (Membership member : club){
            if ((member.getYear() == year) && (member.getMonth() == month))
                System.out.println(member.getName());
        }      
    }
    
    public boolean search(String name){
        for (Membership member : club){
            if (name.equals(member.getName())){
                System.out.println("Member " + member.getName() + " found" );
                return true;
            }
        } 
        return false;
    }
    
    public void removeMember(String name)
    {
        Iterator<Membership> it = members.iterator();
        while(it.hasNext())
        {
            if(name.equals(members))
            {
                it.remove();
            }
        }
        
    }
    
  
    
}