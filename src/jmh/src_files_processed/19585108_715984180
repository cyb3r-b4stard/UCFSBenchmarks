import java.util.HashMap;
import java.util.Iterator;
import java.util.ArrayList;
import java.util.TreeSet;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Scanner;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.FileOutputStream;
import java.io.FileInputStream;
import java.io.Serializable;
/**
 * ###### ### ####### # ############ # ######### ### # ########## ## ######## #######
 * 
 * @###### ##### ##### && #### #######
 * @####### ##.#
 */
public class Interface implements Serializable
{

    private static Gestao geo;


public static void main() throws ClassNotFoundException,IOException{
    geo = new Gestao(load("Geocashing.out");
    Menu();
}
private static void Menu() throws ClassNotFoundException,IOException{ 
    System.out.println('\f');
    System.out.println(" -------------------------------------------------------------------------------- ");
    System.out.println("|                                                                                |");
    System.out.println("|    _____                           _     _                                     |");
    System.out.println("|   |  __ \\                         | |   (_)                                    |");
    System.out.println("|   | |  \\/ ___  ___   ___ __ _  ___| |__  _ _ __   __ _                         |");
    System.out.println("|   | | __ / _ \\/ _ \\ / __/ _` |/ __| '_ \\| | '_ \\ / _` |                        |");
    System.out.println("|   | |_\\ \\  __/ (_) | (_| (_| | (__| | | | | | | | (_| |                        |");
    System.out.println("|    \\____/\\___|\\___/ \\___\\__,_|\\___|_| |_|_|_| |_|\\__, |                        |");
    System.out.println("|                                                   __/ |                        |");
    System.out.println("|                                                  |___/                         |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|              1 - LOGIN                             2 - REGISTER                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|--------------------------------------------------------------------------------|");
    System.out.println("|                                                                    Q - Quit    |");
    System.out.println(" -------------------------------------------------------------------------------- ");
    String ESTADO = "";
    Scanner ler = new Scanner(System.in);
    while (ESTADO==""){
        System.out.print("-> Insira opção : ");
        char leitura = ler.nextLine().charAt(0);
        switch (Character.toUpperCase(leitura)) {
            case '1':  ESTADO = "LOGIN";
                     break;
            case '2':  ESTADO = "REGISTER";
                     break;
            case 'Q':  save(geo, "Geocashing.out");
                       System.exit(0);
            default :  System.out.println("\n[ERROR] Opção inexistente\n");
                       break;
        }        
    }
    if (ESTADO == "LOGIN") Login();
    else Register();
}

private static void Login() throws ClassNotFoundException,IOException{ 
    System.out.println('\f');
    Scanner ler = new Scanner(System.in);
    String ESTADO = "";
    String user = "";
    String pass = "";
    char leitura = 'T';
    while (ESTADO == ""){
        System.out.print("-> Username : ");
        user = ler.nextLine();
        System.out.print("-> Password : ");
        pass = ler.nextLine();
        if (geo.containsUser(user)) ESTADO = "OK";
        else{
            System.out.print("\n[ERROR] Login Inválido\n\n-> Quer voltar a tentar? (N/S) : ");
            leitura = ler.nextLine().charAt(0);
            if (Character.toUpperCase(leitura)=='N') Menu();
            else System.out.println('\f');
        }
    }
    if (ESTADO == "OK") Profile(user);
    else System.out.println("\n[ERROR] Erro interno\n");
}

private static void Register() throws ClassNotFoundException,IOException{ 
    System.out.println('\f');
    Scanner ler = new Scanner(System.in);
    String ESTADO = "";
    System.out.println("Obrigado por ter escolhido o nosso serviço, agora basta seguir os seguintes passos!\n");
    String nome = "";
    char gender = 'N';
    String adress = "";
    int ano = 0;
    int mes = 0;
    int dia = 0;
    String mail = "";
    String pass = "";
    while (ESTADO == ""){
        while (nome == ""){
            System.out.print("/---------- Informações Pessoais -----------/\n\nNome : ");
            nome = ler.nextLine();
        }
        System.out.print("M ou F? : ");
        gender = ler.nextLine().charAt(0);
        while (Character.toUpperCase(gender) != 'M' && Character.toUpperCase(gender) != 'F' ){
            System.out.println("\n[ERROR] Valor Inválido\n");
            System.out.print("M ou F? : ");
            gender = ler.nextLine().charAt(0);
        }
        while (adress == ""){
            System.out.print("Morada : ");
            adress = ler.nextLine();
        }
        System.out.print("Data Nascimento:\n   -> Ano: ");
        ano = ler.nextInt();
        while (ano < 1900 || ano > Calendar.getInstance().get(Calendar.YEAR)){
            System.out.println("\n[ERROR] Valor Inválido\n");
            System.out.print("   -> Ano: ");
            ano = ler.nextInt();
        }
        System.out.print("   -> Mes: ");
        mes = ler.nextInt();
        while (mes < 1 || mes > 12){
            System.out.println("\n[ERROR] Valor Inválido\n");
            System.out.print("   -> Mes: ");
            mes = ler.nextInt();
        }
        
        Calendar cal = new GregorianCalendar(ano, mes-1, 1);
        int diasp = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
        
        System.out.print("   -> Dia: ");
        dia = ler.nextInt();
        while (dia < 1 || dia > diasp){
            System.out.println("\n[ERROR] Valor Inválido\n");
            System.out.print("   -> Dia: ");
            dia = ler.nextInt();
        }
        while (pass == "" && mail == ""){
            System.out.print("\n/---------- Informações da Conta -----------/\n\nUtilizador (Mail) : ");
            mail = ler.next();
            while (geo.containsUser(mail)){
                System.out.print("\n[ERROR] Utilizador Existente\n\nUtilizador (Mail) : ");
                mail = ler.next();
            }
            System.out.print("Password : ");
            pass = ler.next();
        }
        ESTADO = "OK";
    }
    if (ESTADO == "OK") {
        geo.userRegister(mail,pass,nome,Character.toUpperCase(gender),adress,ano,mes,dia);
        Menu();
    }
}
private static void Profile(String mail) throws ClassNotFoundException,IOException{
    System.out.println('\f');
    ArrayList<String> profile = new ArrayList<String>(geo.userProfile(mail));
    Calendar cal = Calendar.getInstance();
    SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
    String currentTime = formato.format(cal.getTime());
    System.out.println(" -------------------------------------------------------------------------------- ");
    System.out.println("|     ___           __ _ _                                 [ONLINE] "+profile.get(0)+" ");
    System.out.println("|    / _ \\___ _ __ / _(_) |                                                      |");
    System.out.println("|   / /_)/ _ \\ '__| |_| | |                                                      |");
    System.out.println("|  / ___/  __/ |  |  _| | |                                                      |");
    System.out.println("|  \\/    \\___|_|  |_| |_|_|                                                      |");
    System.out.println("|                                       1 - Caches                               |");
    System.out.println("|                                       2 - Eventos                              |");
    System.out.println("|                                       3 - Perfil                               |");
    System.out.println("|                                          (*) Amigos                            |");
    System.out.println("|                                          (*) Atividades Geral                  |");
    System.out.println("|                                          (*) As minhas Atividades              |");
    System.out.println("|                                          (*) As minhas Estatísticas            |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("| Tens "+profile.get(1)+" pedidos de amizade                                 "+currentTime+"     ");
    System.out.println("|--------------------------------------------------------------------------------|");
    System.out.println("|    M - Log Out                                                     Q - Quit    |");
    System.out.println(" -------------------------------------------------------------------------------- ");
    String ESTADO = "";
    Scanner ler = new Scanner(System.in);
    while (ESTADO==""){
        System.out.print("-> Insira opção : ");
        char leitura = ler.next().charAt(0);
        switch (Character.toUpperCase(leitura)) {
            case '1':  ESTADO = "CACHE";
                       break;
            case 'M':  ESTADO = "MENU";
                       break;
            case 'Q':  save(geo, "Geocashing.out");
                       System.exit(0);
            default :  ESTADO = "TESTE";
                       break;
        }        
    }
    if (ESTADO == "MENU") Menu();
    if (ESTADO == "CACHE") Cache(mail);
    else System.out.println ("\n[HUGE ERROR] O PROGRAMA NAO FAZ MAIS NADA XD");
}
private static void Cache(String mail) throws ClassNotFoundException,IOException{
    System.out.println('\f');
    ArrayList<String> profile = new ArrayList<String>(geo.userProfile(mail));
    Calendar cal = Calendar.getInstance();
    SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
    String currentTime = formato.format(cal.getTime());
    System.out.println(" -------------------------------------------------------------------------------- ");
    System.out.println("|     ___           _                                      [ONLINE] "+profile.get(0)+" ");
    System.out.println("|    / __\\__ _  ___| |__   ___  ___                                              |");
    System.out.println("|   / /  / _` |/ __| '_ \\ / _ \\/ __|                                             |");
    System.out.println("|  / /__| (_| | (__| | | |  __/\\__ \\                                             |");
    System.out.println("|  \\____/\\__,_|\\___|_| |_|\\___||___/                                             |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|          1 - Caches Encontradas                 2 - Lista de Caches            |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                                                |");
    System.out.println("|                                                              "+currentTime+"    ");
    System.out.println("|--------------------------------------------------------------------------------|");
    System.out.println("|    R - Retroceder                    M - Log Out                   Q - Quit    |");
    System.out.println(" -------------------------------------------------------------------------------- ");
    String ESTADO = "";
    Scanner ler = new Scanner(System.in);
    while (ESTADO==""){
        System.out.print("-> Insira opção : ");
        char leitura = ler.next().charAt(0);
        switch (Character.toUpperCase(leitura)) {
            case '1':  ESTADO = "MYCACHES";
                       break;
            case '2':  ESTADO = "ALLCACHES";
                       break;
            case 'R':  ESTADO = "PERFIL";
                       break;
            case 'M':  ESTADO = "MENU";
                       break;
            case 'Q':  save(geo, "Geocashing.out");
                       System.exit(0);
            default :  ESTADO = "TESTE";
                       break;
        }        
    }
    if (ESTADO == "MENU") Menu();
    if (ESTADO == "PERFIL") Profile(mail);
    if (ESTADO == "MYCACHES") MyCaches(mail);
    if (ESTADO == "ALLCACHES") System.out.println ("\n[HUGE ERROR] Ainda nao implementado! :P"); 
    else System.out.println ("\n[HUGE ERROR] O PROGRAMA NAO FAZ MAIS NADA XD");
}
private static void MyCaches(String mail) throws ClassNotFoundException,IOException{
    System.out.println('\f');
    ArrayList<String> profile = new ArrayList<String>(geo.userProfile(mail));
    Calendar cal = Calendar.getInstance();
    SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
    String currentTime = formato.format(cal.getTime());
    Crono tempo = new Crono();
    tempo.start();
    ArrayList<String> mycaches = new ArrayList<String>(geo.userCaches(mail));
    tempo.stop();
    String endTime = tempo.print();
    int inicio = 0; 
    int fim = 0;
    int i = 0;
    String ESTADO = "";
    while (ESTADO==""){
        for(fim = inicio; fim < inicio + 10 && fim < mycaches.size();fim++);
        System.out.println('\f');
        System.out.println(" -------------------------------------------------------------------------------- ");
        System.out.println("|                                                        [ONLINE] "+profile.get(0)+" ");
        System.out.println("|                                                                                |");
        if (mycaches.size()==0) System.out.println("|      [       *** NENHUMA CACHE ENCONTRADA ***        ]                         |");
        else for(i = inicio; i < fim; i++){
                System.out.println("|        "+mycaches.get(i)+"         |");
             }
        System.out.println("|                                                                                |");
        System.out.println("| Resultados em "+endTime+" ms ... ");
        System.out.println("|--------------------------------------------------------------------------------|");
        System.out.println("|                         << (1) | < (2) | (3) > | (4) >>                        |");
        System.out.println("|    R - Retroceder                    M - Log Out                   Q - Quit    |");
        System.out.println(" -------------------------------------------------------------------------------- ");
        Scanner ler = new Scanner(System.in);
        System.out.print("-> Insira opção : ");
        char leitura = ler.next().charAt(0);
        switch (Character.toUpperCase(leitura)) {
            case '1':  inicio = 0;
                       break;
            case '2':  if (inicio-10>=0) inicio-=10;
                       break;
            case '3':  if (inicio+10<=mycaches.size()) inicio+=10;
                       break;
            case '4':  for(inicio=0;inicio+10<mycaches.size();inicio+=10);
                       break;
            case 'R':  ESTADO = "CACHE";
                       break;
            case 'M':  ESTADO = "MENU";
                       break;
            case 'Q':  save(geo, "Geocashing.out");
                       System.exit(0);
            default :  ESTADO = "TESTE";
                       break;
        }        
    }
    if (ESTADO == "MENU") Menu();
    if (ESTADO == "CACHE") Cache(mail);
    else System.out.println ("\n[HUGE ERROR] O PROGRAMA NAO FAZ MAIS NADA XD");
}
private static void save(Gestao a, String filename) throws IOException{
    ObjectOutputStream ois = new ObjectOutputStream(new FileOutputStream(filename));
    ois.writeObject(a);
    ois.close();
}
private static Gestao load(String filename) throws ClassNotFoundException,IOException{
    ObjectInputStream ois = new ObjectInputStream(new FileInputStream(filename));
    Gestao e = (Gestao) ois.readObject();
    ois.close();
    return e;
}
}