/** 
####### #### :  ####, #######
### # :         #####
###### :        ## ###
######## :      #### ####
####:           #### ####### ########

####### # :     #
####### # :     ### ##

######## #### : ###### ##########

#### #### :     ####_#####_####_####_#######

####### ######### : ### # ##### ######### ## #### ### ####### ####

########### :   ### ### ###########, ## ###

*/

import java.util.Scanner;

public class VoidMethods
{
    
        public static void main(String[] args)
        {
           int array1[] = {23,43,12,45,75,32,12};
           int array2[] = {34,54,23,34,98,45,76,98,42,48,61,44}; 
           int array3[] = {78,65,92,45,78,12,10,45,62};
            
            
           
           
          
           System.out.println();
           
           
             
           System.out.println();
             
           
        }
        
        public static void largest (int arr[], int numElements) {
            largest = myArray[0];
            for (int count = 1; count < myArray.length; count++) {
                if (myArray[count] > largest) {
                    largest = myArray[count];
                }
            } 
            System.out.println("The largest int is: " + largest);      
        }
           
        public static double averageArray (double[] arr, int numElements) {
            double sum = 0
            for (int count = 0; count < numElements; count++) {
                sum += arr[count];
                double average = (sum / (double) numElements);
            } 
            return average;
        }

        public static double sumArray (double[] arr, int numElements) {
            double sum = 0;
            for (int count = 0; count < numElements; count++) {
                sum += arr[count];
            }
            return sum;
        }
        
        
        
        
        
        
        
        int n1, n2, n3;
        System.out.println("The largest number of %d, %d, %d is %d", n1, n2, n3, largestOfThree(n1, n2, n3))
            
}







