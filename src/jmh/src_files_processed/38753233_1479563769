import java.util.ArrayList;


/**
 * ###### ### ##### ## # ########.
 * ### ##### ## ######### ## #### ## #### ########.
 * 
 * @###### (######## #######) 
 * @####### (####/##/##)
 */
public class StockManager
{
    private ArrayList<Product> stock;
    

    /**
     * Initialise the stock manager.
     */
    public StockManager()
    {
        stock = new ArrayList<>();
    }

    /**
     * Add a product to the list.
     * @param item The item to be added.
     */
    public void addProduct(Product item)
    {
        stock.add(item);
    }
    
    /**
     * Receive a delivery of a particular product.
     * Increase the quantity of the product by the given amount.
     * @param id The ID of the product.
     * @param amount The amount to increase the quantity by.
     */
    public void delivery(int id, int amount)
    {
        
    }
    
    /**
     * Try to find a product in the stock with the given id.
     * @return The identified product, or null if there is none
     *         with a matching ID.
     */
    public Product findProduct(int id)
    {
       iterator<Product> it = stock.iterator();
       Product foundResult = null;
       while(it.hasNext()) {
           Product t = t.next();
           if(t.getID() == id) {
               foundResult = t;
           }
       }
    }
    /**
     * Locate a product with the given ID, and return how
     * many of this item are in stock. If the ID does not
     * match any product, return zero.
     * @param id The ID of the product.
     * @return The quantity of the given product in stock.
     */
    public int numberInStock(int id)
    {
      Product stockcheck = findProduct(id);
    if(stockcheck == null) {
         return 0;
    }else
        return stockCheck. getQuantity;
    } 

    
       
   /**
    * Return products less than
    */
   
   public void  getProductLessThan(int quantity) {
    iterator<Product> it = stock.iterator();
    Product stockCheck == null;
    
    while(it.hasNext()) {
        product t = it.next();
        if(t.getQuantity() < quantity) {
            System.out.println(t.toString());
        }
    }
}
  
    /**
     * Print details of all the products.
     */
    public void printProductDetails()
    {
     System.out.println ("Product ID:"+ product.getID());
                        ("Product Name:"+ product.getName());
                        ("Product Quantity:"+ prduct.getQuantity());
        
    }
}