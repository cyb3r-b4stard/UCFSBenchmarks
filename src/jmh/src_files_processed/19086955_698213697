/**
 * ######### ######### ### ###### ######## ######, ## ##### #############
 * ### ########### ############# ## ########.
 * 
 * @###### ########## #####
 * @####### ####-##-##
 */
public class Rectangle {
	
	/**
	 * x-Koordinate der linken unteren Ecke
	 */
	int x;
	/**
	 * y-Koordinate der linken unteren Ecke
	 */
	int y;
	/**
	 * Breite
	 */
	int width;
	/**
	 * Höhe
	 */
	int height;
	
	/**
	 * Initialisiert ein Rechteck.
	 *
	 * @param x x-Koordinate der linken unteren Ecke
	 * @param y y-Koordinate der linken unteren Ecke
	 * @param w Breite des Rechtecks
	 * @param h Höhe des Rechtecks
	 */
	Rectangle(int x, int y, int w, int h) {
		this.x = x;
		this.y = y;
		this.width = w;
		this.height = h;
	}
	
	/**
	 * Gibt die Breite des Rechtecks zurück.
	 * @return Breite des Rechtecks.
	 */
	int getWidth() { return width; }
	
	/**
	 * Gibt die H&öhe des Rechtecks zur&ück.
	 * @return H&öhe des Rechtecks.
	 */
	int getHeight() { return height; }
	
	/**
	 * Gibt die x-Koordinate der linken Seite des Rechtecks zur&ück.
	 * @return x-Koordinate der linken Seite des Rechtecks
	 */
	int getLeft() { return x; }
	
	/**
	 * Gibt die x-Koordinate der rechten Seite des Rechtecks zurück.
	 * @return x-Koordinate der rechten Seite des Rechtecks
	 */
	int getRight() { return x + width; }
	
	/**
	 * Gibt die y-Koordinate der unteren Seite des Rechtecks zurück.
	 * @return y-Koordinate der unteren Seite des Rechtecks
	 */
	int getBottom() { return y; }
	
	/**
	 * Gibt die y-Koordinate der oberen Seite des Rechtecks zurück.
	 * @return y-Koordinate der oberen Seite des Rechtecks
	 */
	int getTop() { return y + height; }	
	
	boolean isSquare()
	{
	    height = width;
	    return boolean
	   }
	
}