/* 
 * ##(#) ######## ####### ######### #### #####:
 * #########(#) ####-#### ### #. ######### (####:
 *
 * #### #### ## #### ########; ### ### ############ ## ###/## ######
 * ## ##### ### ##### ## ### ### ####### ###### ####### ## ######### ##
 * ### #### ######## ##########.
 *
 * #### #### ## ########### ## ### #### #### ## #### ## ######,
 * ### ####### ### ########; ####### #### ### ####### ######## ##
 * ############### ## ####### ### # ########## #######.  ### ###
 * ### ####### ###### ####### ### #### #######.
 * 
 * @###### ### #########
 * @###### ##### #######
 * @###### ####### ##### #####
 */

import info.gridworld.actor.Bug;
import java.util.*;

/**
 * # <####>#############</####> ##### ### #########. <## />
 * 
 * @###### ##### ####    ######## ############# ## #### ##########
 * @######  ### ####
 * @####### ###### ##, ####
 */
public class TerminatorBug extends Bug
{
    private int steps;
    private int sideLength;

    /**
     * Constructs a circle bug that traces an octagon of a given side length.
     * 
     * @param length the side length
     */
    public CircleBug (int length)
    {
        steps = 0;
        sideLength = length;
    }
    public void move()
    {
        Grid <Actor> gr = getGrid();
        if (gr == null)
           return;
        Location loc = getLocation();
        Location next = loc.getAdjacentLocation(getDirection());
        if (gr.isValid(next))
           moveTo(next);
        else
           removeSelfFromGrid();
    }
    
    public void terminate()
    {
        Grid <Actor> gr = this.getGrid();
        ArrayList<Actor> neightbors = gr.getNeighbors(this.getLocation());
        for (int i = 0; i < neighbors.size(); i ++)
        {
            Actor food = neighbors.get(i);
            food.remove
    }
    
    /**
     * Moves to the next side of the octagon.
     */
    public void act()
    {
        if (steps < sideLength && canMove())
        {
            move();
            steps++;
        }
        else
        {
            turn();
            steps = 0;
        }
    }
}