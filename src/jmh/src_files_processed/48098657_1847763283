import java.util.*;
/**
 * ##### # ########### ## ##### ######## ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Database
{
    private HashMap<String, ArrayList()> klantMap = new HashMap<String, ArrayList()>();
    private HashMap<String, ArrayList()> orderMap = new HashMap<String, ArrayList()>();

    /**
     * 
     */
    public Database()
    {
        ArrayList a = new ArrayList();
        ArrayList b = new ArrayList();
        ArrayList c = new ArrayList();
        a.add(1,"jan");
        a.add(2,"maan");
        b.add(1,"bal");
        b.add(1,"001");
        c.add(1,"jas");
        c.add(1,"002");
        
        
        
        klantMap.put("001",a);
        orderMap.put("001",b);
        orderMap.put("002",c);
        System.out.println(Arrays.toString(orderMap.values()));
    }
    
    public void voegKlantToe(String klantNr, String naam, String adres)
    {
        if (klantMap.containsKey(klantNr)==false)
        {
            klantMap.put(klantNr,new String[]{naam,adres});
        }
    }
    
    public void voegOrderToe(String orderNr, String omschrijving, String klantNr)
    {
        if (orderMap.containsKey(orderNr)==false && klantMap.containsKey(klantNr)==true)
        {
            orderMap.put(orderNr,new String[]{omschrijving, klantNr});
        }
    }
    
    /*
     * TODO: maken!!!
     * orderMap.entrySet() geeft een collection van de orderMap terug, dit moet nog omgezet
     * worden in een mooie lijst om af te printen
     */
    public void printLijstOrders()
    {
    }
    
    public void schrapOrder(String orderNr)
    {
        if (orderMap.containsKey(orderNr)==true)
        {
            orderMap.remove(orderNr);
        }
    }
    
    /*
     * TODO: alle orders van die klant verwijderen
     */
    public void schrapKlant(String klantNr)
    {
        if (klantMap.containsKey(klantNr)==true)
        {
            klantMap.remove(klantNr);
        }
    }
}