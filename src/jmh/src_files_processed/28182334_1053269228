public class Spiel
{
    Figur f1;
    Figur f2;
    Figur f3;
    Figur f4;
    Figur aktuelleFigur1;
    Figur aktuelleFigur2;
    String farbe1;
    String farbe2;
    String aktuelleFarbe;

    public Spiel()
    {
        farbe1 = "blau";
        farbe2 = "rot";
        f1 = new Figur(farbe1, 2, 2);
        f2 = new Figur(farbe1, -2, 2);
        f3 = new Figur(farbe2, -2, -2);
        f4 = new Figur(farbe2, 2, -2);
    }
    
    /**
     * Vervollständige die Methode. Schaue dir dazu die Abbildung druckeGewinner.png an.
     */
    void druckeGewinner()
    {
        if(spielIstFertig())
        {  
            if(f1.gewonnen())
            {
                System.out.println( "F1 hat gewonnen");
            }
            else if(f2.gewonnen())
            {
                System.out.println( "F2 hat gewonnen");
            }
            else if(f3.gewonnen())
            {
                System.out.println( "F3 hat gewonnen");
            }
            else if(f4.gewonnen())
            {
                System.out.println( "F4 hat gewonnen");
            }
        }
    }
    
    /**
     * Im Moment wird die Farbe der Figur gar nicht ausgegeben. Niemand weiß wer an der Reihe ist.
     * Korrigiere die Methode, sodass die Figurfarbe mit ausgegeben wird.
     */
    void druckeAktuellenSpieler()
    {
        if(aktuelleFarbe != null)
        {
            System.out.println("An der Reihe ist der Spieler mit der Farbe blau");
            System.out.println("An der Reihe ist der Spieler mit der Farbe rot");
        }  
    }
    
    /**
     * Die Methode nachObenBewegen ist vollständig implementiert. Die anderen Bewegungsmethoden jedoch nicht. Implementiere sie.
     */
    void nachObenBewegen()
    {
        aktuelleFigur1.gehe(0);
        aktuelleFigur2.gehe(0);
    }
    
    /**
     * Ergänze die Methode
     */
    void nachUntenBewegen()
    {
        aktuelleFigur1.gehe(2);
        aktuelleFigur2.gehe(2);
    }
    
    /**
     * Ergnze die Methode
     */
    void nachRechtsBewegen()
    {
        aktuelleFigur1.gehe(1);
        aktuelleFigur2.gehe(1);
    }
    
    /**
     * ErgÃ¤nze die Methode
     */
    void nachLinksBewegen()
    {
        aktuelleFigur1.gehe(3);
        aktuelleFigur2.gehe(3);
    }
    
    /**
     * Im Moment wÃ¤hlt die Methode nur die aktuelleFigur1 zufÃ¤llig aus. ErgÃ¤nze die Methode, sodass auch die aktuelleFigur2 zufÃ¤llig ausgewÃ¤hlt wird.
     */
    void aktuelleFigurenAuswuerfeln()
    {
        int zahl1 = new java.util.Random().nextInt(4) +1;
        int zahl2 = new java.util.Random().nextInt(4) +1;
        if(zahl1 == 1)
        {
            aktuelleFigur1 = f1;
        }
        else if(zahl1 == 2)
        {
            aktuelleFigur1 = f2;
        }
        else if(zahl1 == 3)
        {
            aktuelleFigur1 = f3;
        }
        else if(zahl1 == 4)
        {
            aktuelleFigur1 = f4;
        }  
        
        if(zahl2 == 1)
        {
            aktuelleFigur1 = f1;
        }
        else if(zahl2 == 2)
        {
            aktuelleFigur1 = f2;
        }
        else if(zahl2 == 3)
        {
            aktuelleFigur1 = f3;
        }
        else if(zahl2 == 4)
        {
            aktuelleFigur1 = f4;
        }  
    }
    
    /**
     * ErgÃ¤nze die Methode. Das Spiel ist fertig, wenn f1 oder f2 oder f3 oder f4 gewonnen hat.
     */
    boolean spielIstFertig(int x,int y)
    {
        if (f1.gewonnen()){
            return true;
        }
        else if (f2.gewonnen()){
            return true;
        }
        else if (f3.gewonnen()){
            return true;
        }
        else if (f4.gewonnen()){
            return true;
    }
    else if(f1.f2.f3.f(!gewonnen))
    {
    return false;
    }
    }
    
    
    /**
     * Implementiere die Methode. Schaue dir dazu setzeNeuenSpieler.png an.
     */
    void setzeNeuenSpieler()
    {
        if(aktuelleFarbe=farbe1)
        {
         aktuelleFarbe=farbe2;
        }
        else
        {
         aktuelleFarbe=farbe1;
        }
        }
    
    /**
     * Implementiere die Methode. Schaue dir dazu neuenZugVorbereiten.png an.
     */
    void neuenZugVorbereiten()
    {
        if(spielIstFertig()){
            druckeGewinner();
        }
        else(){
            druckeAktuellenSpieler();
            aktuelleFigurenAuswuerfeln();
            druckeAktuelleFiguren();
        }
    }
    
    /**
     * =========================== Diese Methoden sind schon fertig implementiert ================================
     */
    
    void druckeAktuelleFiguren()
    {
        System.out.println("Die aktuellen Figuren sind:");
        aktuelleFigur1.druckePosition();
        aktuelleFigur2.druckePosition();
        System.out.println("---------------------------");
    }
    
    void druckeSpielfeld()
    {
        StringBuilder[][] feld = new StringBuilder[5][5];
        for(int x = 0; x < 5; x++)
            for(int y = 0; y < 5; y++)
                feld[x][y] = new StringBuilder();

        if(f1 == aktuelleFigur1 || f1 == aktuelleFigur2)
            feld[f1.x+2][f1.y+2].append(farbe1.toUpperCase().charAt(0));
        else
            feld[f1.x+2][f1.y+2].append(farbe1.charAt(0));
        if(f2 == aktuelleFigur1 || f2 == aktuelleFigur2)
            feld[f2.x+2][f2.y+2].append(farbe1.toUpperCase().charAt(0));
        else
            feld[f2.x+2][f2.y+2].append(farbe1.charAt(0));
        if(f3 == aktuelleFigur1 || f3 == aktuelleFigur2)
            feld[f3.x+2][f3.y+2].append(farbe2.toUpperCase().charAt(0));
        else
            feld[f3.x+2][f3.y+2].append(farbe2.charAt(0));
        if(f4 == aktuelleFigur1 || f4 == aktuelleFigur2)
            feld[f4.x+2][f4.y+2].append(farbe2.toUpperCase().charAt(0));
        else
            feld[f4.x+2][f4.y+2].append (farbe2.charAt(0));
        if(feld[2][2].toString().equals(""))
            feld[2][2] = new StringBuilder("HOME");
        System.out.print("    ------------------------");
        for(int y = 2; y >= -2; y--)
        {
            System.out.printf("\n%2s |", y);
            for(int x = -2; x <= 2; x++)
            {
                System.out.printf("%-4s|", feld[x+2][y+2]);
            }
            System.out.print("\n    ------------------------");
        }
        System.out.print("\n    -2   -1    0    1    2");
        
    }
}