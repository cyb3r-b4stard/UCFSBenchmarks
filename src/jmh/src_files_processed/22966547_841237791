import java.util.ArrayList;
/** 
 * ####: _______________________________
 * ### ####: ___________________________
 * #### #######: _______________________
 * 
 * 
 * ######:  #######, #. ### ###### #. #######
 * #######:  ########
 * 
 * ########## #. ### ### ####### ### ######## #####.
 * 
 */

public class Store 
{
    private ArrayList<Movie> movies;     
    private Movie thisMovie;             

    private int movieKey;
    private String movieName;
    private int renterID;
    private int dueDate;
    private double price;
    private int timesRented;
    private int currentDate = 20120918;

    private ReadFile reader;
    /**
     * Constructor. Create the store. This means set up the ArrayList movies.
     */
    public Store() 
    {
        movies = new ArrayList<Movie>();
    }

    /**
     * .readFromMovieFile.
     * Read initial movie info from file.
     */
    public void readFromMovieFile() 
    {

        reader = new ReadFile("MovieData.txt");

        reader.setSeparator(",");

        reader.readInputLine();

        while(!reader.eof())        
        {
            movieKey = reader.getIntField(1);
            movieName = reader.getStringField(2);
            renterID = reader.getIntField(3);
            dueDate = reader.getIntField(4);
            price = reader.getDoubleField(5);
            timesRented = reader.getIntField(6);

            thisMovie = new Movie(movieKey, movieName, renterID, dueDate, price, timesRented);
            movies.add(thisMovie);

            reader.readInputLine();
        }
        System.out.println("All movies read from the file and added to the ArrayList");
    }

    /**
     *  .printAllMovieInfoForThisMovie.
     *  Given the index in the ArrayList movies for a particular movie, 
     *  print all info for this movie.
     */
    public void printAllMovieInfoForThisMovie(int index)
    {
        System.out.println("Movie ID    Movie Name                Cust ID       DueDate");
        Movie thisMovie = movies.get(index);
        thisMovie.print();
    }

    /*
     * .listMoviesWithWhile.
     * List all movies in the system with a while loop
     */ 
    public void listMoviesWithWhile()
    {
        System.out.println("Listing Movies with while()");
        int index = 0;
        while(index < movies.size())
        {
            Movie thisMovie = movies.get(index);
            thisMovie.print();

            index ++;
        }
        System.out.println();
    }

    public void listAllMoviesWithIndices()
    {

        System.out.println("Listing Movies with while()");
        int index = 0;
        while(index < movies.size())
        {
            thisMovie = movies.get(index);
            System.out.print(" " + index + " ");
            thisMovie.print();

            index ++;
        }
        System.out.println();

    }

    public void addANewMovie(int pMovieKey, String pMovieName, double pPrice)
    {
        movieKey = pMovieKey;
        movieName = pMovieName;
        price = pPrice;

        thisMovie = new Movie(movieKey, movieName, 0, 0, price, 0);
        movies.add(thisMovie);

    }

    public void removeMovie(int desiredIndex) 
    {
        int index = 0;
        while(index < movies.size())
        {
            thisMovie = movies.get(index);
            if(index == desiredIndex)
            {
                remove(int index);
            }

        }
    }

    public void UpdateMoviePrice(int pIndex, double pNewPrice)
    {

    }

}