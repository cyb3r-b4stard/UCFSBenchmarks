/**
 * #### ##### ########## # ###### #######. ### ### #### ### ####### #####
 * ### #### ######. ### ####, #####'# ####: ##### ## ########## #######, ##
 * ### ## #######. ### ### ### ## ## #####-###-##### ####### ### #### ##
 * ###### (#### ##### ##'# #### #####, ## ######).
 *
 * #### ##### ### ####### ## ## ##### ####### ### ######## #### #### #####.
 * 
 * @######  ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */
public class Picture
{
    private Square wall;
    private Square window;
    private Triangle roof;
    private Circle sun;
    private Square puerta;
    private Person monigote;  
    

    /**
     * Constructor for objects of class Picture
     */
    public Picture()
    {
    }

    /**
     * Dibuja un atardecer.
     */
    public void atardecerAuto()
    {
        wall = new Square();
        wall.moveHorizontal(-140);
        wall.moveVertical(20);
        wall.changeSize(120);
        wall.makeVisible();
        
        window = new Square();
        window.changeColor("black");
        window.moveHorizontal(-135);
        window.moveVertical(40);
        window.changeSize(40);
        window.makeVisible();
        
        puerta = new Square();
        puerta.changeColor("Black");
        puerta.moveHorizontal(-80);
        puerta.moveVertical(80);
        puerta.changeSize(60);
        puerta.makeVisible();

        roof = new Triangle();  
        roof.changeSize(60, 180);
        roof.moveHorizontal(20);
        roof.moveVertical(-60);
        roof.makeVisible();

        sun = new Circle();
        sun.changeColor("yellow");
        sun.moveHorizontal(100);
        sun.moveVertical(-40);
        sun.changeSize(80);
        sun.makeVisible();
        sun.slowMoveVertical(250);
        
        monigote = new Person();
        monigote.changeSize(60, 30);
        monigote.moveHorizontal(-500);
        monigote.moveVertical(0);
        monigote.makeVisible();
        
    }

    /**
     * Crea una persona que entra por una puerta.
     */
    public void vueltaAcasa()
    {
        if (monigote != null)   
        {
         monigote.slowMoveHorizontal(250);
         monigote = null;
         
         else
         
         monigote = new Person();
         monigote.changeSize(60, 30);
         monigote.moveHorizontal(-500);
         monigote.moveVertical(0)
         monigote.makeVisible();
         monigote.slowMoveHorizontal(250);
        
         
    }
    }
    
    
    
    
    /**
     * Change this picture to black/white display
     */
    public void setBlackAndWhite()
    {
        if (wall != null)   
        {
            wall.changeColor("black");
            window.changeColor("white");
            roof.changeColor("black");
            sun.changeColor("black");
        }
    }

    /**
     * Change this picture to use color display
     */
    public void setColor()
    {
        if (wall != null)   
        {
            wall.changeColor("red");
            window.changeColor("black");
            roof.changeColor("green");
            sun.changeColor("yellow");
        }
    }
    
}