
import java.awt.*;
import javax.swing.*;
import java.lang.*;

/**
 * ##### ## - ##### # ########### ## ### ##### ####
 * 
 * @###### (#### ####) 
 * @####### (# ####### ######)
 */
public class EU extends JApplet
{
    private int x;

    /**
     * Called by the browser or applet viewer to inform this JApplet that it
     * has been loaded into the system. It is always called before the first 
     * time that the start method is called.
     */
    public void init()
    {
        JRootPane rootPane = this.getRootPane();    
        rootPane.putClientProperty("defeatSystemEventQueueCheck", Boolean.TRUE);

    }

    /**
     * Called by the browser or applet viewer to inform this JApplet that it 
     * should start its execution. It is called after the init method and 
     * each time the JApplet is revisited in a Web page. 
     */
    public void start()
    {
    }

    /** 
     * Called by the browser or applet viewer to inform this JApplet that
     * it should stop its execution. It is called when the Web page that
     * contains this JApplet has been replaced by another page, and also
     * just before the JApplet is to be destroyed. 
     */
    public void stop()
    {
    }

    /**
     * Paint method for applet.
     * 
     * @param  g   the Graphics object for this applet
     */
    public void paint(Graphics g)
    {
        Polygon star = new Polygon(
                new int[]{0  ,3 ,12,5 ,8,0,-8,-5,-12,-3},
                new int[]{-13,-4,-4,2 ,11,5,11,2,-4,-4},10);
        g.setColor(Color.blue);
        g.fillRect(0,0,300,200);
        g.setColor(Color.yellow);
        g.translate(125,90);
        for (int i=0;i<12;i++)
        {
            double a = Math.PI*2*i/12;
            g.translate( 64*Math.cos(Math.toRadians(a), 64*Math.sin(Math.toRadians(a));
            g.fillPolygon(star);
            g.translate(-64*Math.cos(a),-64*Math.sin(a));

        }
    }
}