import java.util.HashMap;
/**
 * ##### ##########  - ### ########## ## ## ##### ## #########
 * ### ########## ########## ### ######## ## ## #########. ####
 * ######### ### ##### ############ # ###### ## #######: ###### #####,
 * ####, ###, #####.
 * #### #### ######### ## ########## ######## ### ########## # ## 
 * ########## ######## # #### ## ## ###### ###### ## ### #########. 
 * 
 * @######  ####### ####### # ##### #. ######
 * @####### ####.##.##
 */ 

public class Habitacion 
{
       private String descripcion;
private HashMap<String, Habitacion> salidas;

    /**
     * Crea una habitación inicialmente sin salidas.
     * La descripción es algo así como "laboratorio", "el bar"
     * @param descripcion La descripción de la habitación
     */
    public Habitacion(String descripcion)
    {
        this.descripcion = descripcion;
        salidas = new HashMap<String, Habitacion>();
    }

    /**
     * Establece las salidas de la habitación. Cada dirección
     * conduce hacia una habitación o es null
     * 
     * @param norte La salida norte.
     * @param este  La salida este.
     * @param sur   La salida sur.
     * @param oeste La salida oeste.
     */
    
    /**
     * Establece una salida de la Habitacion
     */
    public void setSalida(String direc, Habitacion vecina)
    {
        salidas.put(direc, vecina)
    }

    public Habitacion getSalida(String direc)
    {
       return salidas.get(direc);
    }

    /**
     * @return La descripción de la habitación.
     */
    public String getDescripcion()
    {
        return descripcion;
    }

    public String getStringDeSalidas()
    {
        String resul = "Salidas: ";
        if (getSalida("norte") != null)   resul += "norte";
        if (getSalida("este")  != null)   resul += "este";
        if (getSalida("oeste") != null)   resul += "oeste";
        if (getSalida("sur")   != null)   resul += "sur";
        return resul;
    }
}