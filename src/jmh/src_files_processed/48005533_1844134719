/**
 * ### ##### ### ### ##### ### #######: ###### ####.
 *
 * ### ### #### ### ####### # #######, #### ##### ### #### ####.
 */
public class Store {
    public static void main(String[] args){
    new Store().use();    
   }
   private Product product;
   private CashRegister cashRegister;
    public Store(){
    product = new Product("Sticky tape",200,2.99);
    cashRegister = new CashRegister();
   }
    public void use() {
         char choice;
        while ((choice = readChoice()) != 'x') {
            switch (choice) {
            case 's': sell(); break;
            case 'r': restock(); break;
            case 'v': viewStock(); break;
            case 'c': viewCash(); break;
            default: help(); break;
            }
        }
    }
    private char readChoice(){
      System.out.print("Choice (s/r/v/c/x): ");
      return In.nextChar();
    }
    private void sell() {
      int amount = readAmount(); 
      
      if (product.has(amount)){
        product.sell(amount);
       
    }
          else{
          System.out.println("Not enough stock "); 
        
        }
    }

   
       
       double money = product.sell(amount);
       cashRegister.addCash(money);
  
    
    private void restock() {
         int amount = readAmount();
         product.restock(amount);
      
    }

    private void viewStock() {
        System.out.println(product);
    }

    private void viewCash() {
       
       
        System.out.println(cashRegister);
    }
    
       private int readAmount() {
        System.out.print("Number: ");
        return In.nextInt();
    }
    private void help() {
        System.out.println("Menu options");
        System.out.println("s = sell");
        System.out.println("r = restock");
        System.out.println("v = view stock");
        System.out.println("c = view cash");
        System.out.println("x = exit");
    }
}