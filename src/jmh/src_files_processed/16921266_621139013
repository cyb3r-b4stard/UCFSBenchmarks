import java.util.Random;
/**
 * ########### ### #### ### ###### #############.
 * 
 * @###### (### ####) 
 * @####### (#### ############## #### ### #####)
 */
public class ArrayTraining
{

    /**
     * Konstruktor f√ºr Objekte der Klasse ArrayTraining
     */
    public ArrayTraining()
    {

    }

    public void aufgabe1() 
    {
        int[] data = new int[20];
        for(int c = 0; c < 20; c++)
        {
            data[c] = 1;
        }
        System.out.println("Position 1: " +data[0]);
        System.out.println("Position 10: " +data[9]);
        System.out.println("Position 20: " +data[19]);

        System.out.println("Position 25: " +data[24]);
    }

    public void aufgabe2()
    {
        int[] data = new int[100];
        for(int c=0; c < 100; c++)
        {
            data[c]=c+1;
        }
        int c=0;
        while(c<data.length)
        {
            System.out.println(data[c]+" ");
            c++;
        }
    }

    public void aufgabe3(int groesse)
    {
        int data[] = new int[groesse];
        int data_copy[]= new int[groesse];

        for(int c=0; c<groesse; c++)
        {
            data[c]=c;
        }

        for (int cc=0, countData=groesse-1; cc<groesse; cc++, countData--)
        {
            data_copy[cc]=countData;
        }
        int c=0;
        while(c<data.length)
        {
            System.out.println("data: "+data[c]+" data_copy: "+data_copy[c]);
            c++;
        }
    }

    public void aufgabe4()
    {
        Random r = new Random();
        int data[] = new int[1000];
        int c=0;
        while(c<data.length)
        {
            data[c] = r.nextInt(10000);
            c++;
        }

        int kleinsteZahl = data[0];
        int groessteZahl = data[0];
        double mittelwert = 0;
        c = 1;
        while (c<data.length){
            if(data[c] < kleinseZahl)
            {
                kleinsteZahl = data[c];
            }

            if(data[c] > groessteZahl)
            {
                groessteZahl = data[c]
            }

            mittelwert += data[c]
            c++:
        }
    }
}