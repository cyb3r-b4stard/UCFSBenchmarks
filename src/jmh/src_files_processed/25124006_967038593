public class Werkzeuge
{
    public static void main( String args[] ) {
        JConsole fenster = new JConsole("Werkzeuge");

        while (true) {

        } 
    } 

    public static double [][] matr_mult (double a[][], double b[][]){
        int n=a.length;
        int s=a[0].length;
        double erg[][] =new double[s][s];
        
        for(int i=0;i<s;i++){
            for (int j=0;j<s;j++){
                erg [i][j]=0;
                for(int k=0;k<s;k++){
                    erg[i][j] =erg[i][j]+a[i][k]*b[k][j];
                }
            }
        }
        return erg;
    }
    
    
    public static void matr_ausg(double erg[][], JConsole fenster){
        int n = erg.length;
        for(int i=0; i<n; i++){
            for(int j=0; j<n;j++){
                fenster.print(erg[i][j],10,2);
            }
            fenster.println(); 
        }
    }

    
    public static double [][] matr_add(double a[][], double b[][], JConsole fenster){
        int n = a.length;
        double erg[][] = new double [n][n];
        for(int i=0; i<n; i++){
            for(int j=0; j<n;j++){
                erg[i][j] = a[i][j] + b[i][j];
            }
        }
        return erg;
    }
    
    
    public static double [][] matr_substr(double a[][], double b[][], JConsole fenster){
        int n = a.length;
        double erg[][] = new double [n][n];
        for(int i=0; i<n; i++){
            for(int j=0; j<n;j++){
                erg[i][j] = a[i][j] - b[i][j];
            }
        }
        return erg;
    }

    
    public static double [][] matr_add (double a[][], double b[][]){
        int n=a.length;
        int s= a[0].length;
        double erg[][] =new double [s][s];
            for(int i=0;i<s;i++){
                for (int j=0;j<s;j++){
                    erg[i][j]=a[i][j] +b[i][j];
                }
            }
            return erg;
        }
    
        
    public static void vekt_ausg(double x[], JConsole fenster){
        int n = x.length;
        fenster.println("Vektorausgabe");
        for(int k=0; k<n; k++){
            
                fenster.println(x[k],7,2);
        }
    }

    public static double [] matr_mal_vekt (double a[][],double y[]){
        int n= a.length;
        double x[]=new double [n];
        for (int i=0;i<n; i++){
            for (int k=0;k<n;k++){
                x[i]=x[i]+a[i][k]*y[k];
            }
        }
        return x;
    }
    
    public static boolean pruef_ortho (double m[][]){
        boolean ortho=false;
        int z=m.length;
        int s=m[0].length;
        double erg[][] = matr_mult(m,transp_matr(m));
         for (int i=0;i<s;i++){
             for(int j=0;j<s;j++){
                if(i==j&& Math.abs(erg[i][j]-1)<1E-6){
                    ortho=true;
                }
                else if (i!=j && Math.abs(erg[i][j]-0)<1E-6){
                    ortho=true;
                }
                else{ortho=false;break;}
            }
          return ortho;          
        }

    public static double[][] transp_matr(double m[][]){
        int z=m.length;
        int s=m[0].length;
        double mt[][]=new double [s][s];
        for (int i=0;i<s;i++){
            (int j=0;j<s;j++){
                mt[i][j]=m[j][i];
            }
        }
        return mt;
    }
