package Beleg_WS_16_17;
import Baustelle.*;
import java.util.*;

public class Beleg1{
    
    public static String bearbeiter="4616260 und 7654321";
        
    public static void main(String[] args){
        System.out.println("Generierte UUID: " + createUUID());
        System.out.println("");
        
        
        Bauablauf bauablauf1 = new Bauablauf();
        
        bauablauf1.addProzess(new Prozess("Freimachen und Aushub", 2500, 1 , 24));
        bauablauf1.addProzess(new Prozess("Fundament", 80, 20 , 48/20));       
        bauablauf1.addProzess(new Prozess("Rohbau AW FT", 90, 54 , 16/54.0));
        bauablauf1.addProzess(new Prozess("Dach", 2500, 1 , 36));
        bauablauf1.addProzess(new Prozess("Elektroinstallation", 500, 1 , 8));
        bauablauf1.addProzess(new Prozess("Putz und Malerarbeiten", 35, 54 , 48/54.0));
        bauablauf1.addProzess(new Prozess("Einbau Tor", 3500, 1 , 16));
        
        Bauablauf bauablauf2 = new Bauablauf();
        
        bauablauf2.addProzess(new Prozess("Freimachen und Aushub", 2500, 1 , 24));
        bauablauf2.addProzess(new Prozess("Fundament", 80, 20 , 48/20));       
        bauablauf2.addProzess(new Prozess("Schalung AW", 40, 45 , 16/54.0));
        bauablauf2.addProzess(new Prozess("Bewehrung AW", 40, 45 , 16/54.0));
        bauablauf2.addProzess(new Prozess("Betonage", 40, 45 , 16/54.0));
        bauablauf2.addProzess(new Prozess("Dach", 2500, 1 , 36));
        bauablauf2.addProzess(new Prozess("Elektroinstallation", 500, 1 , 8));
        bauablauf2.addProzess(new Prozess("Putz und Malerarbeiten", 35, 54 , 48/54.0));
        bauablauf2.addProzess(new Prozess("Einbau Tor", 3500, 1 , 16));
        
        ausgabe(bauablauf1, bauablauf2);      
       
    }
    
    
    
    
    /**
    * Generiert die UUID die bei der Abgabe des Beleges anzugeben ist
    */
    private static String createUUID() {
        String id = bearbeiter;   
        try {
            UUID uid = UUID.fromString(id);
            id = bearbeiter;
        }
        catch(Exception e) { UUID uuid = UUID.nameUUIDFromBytes(id.getBytes()); id = uuid.toString(); return id; }
        return id;
    }
    
    private static void ausgabe(Bauablauf b1, Bauablauf b2){
       System.out.format("%-20s%-20s%-20s","", "Alternative 1", "Alternative 2");
       System.out.println("");
       System.out.format("%-20s%-20s%-20s","Gesamtkosten", ""+(b1.getTotalCosts()), ""+b2.getTotalCosts());
       System.out.format("%-20s%-20s%-20s"," ", "Alternative 1", "Alternative 2");
       System.out.format("%-20s%-20s%-20s"," ", "Alternative 1", "Alternative 2");
       System.out.format("%-20s%-20s%-20s"," ", "Alternative 1", "Alternative 2");
       System.out.format("%-20s%-20s%-20s"," ", "Alternative 1", "Alternative 2");
       System.out.format("%-20s%-20s%-20s"," ", "Alternative 1", "Alternative 2");
       
    }
    /*private static double runde(double zahl, int stellen){
        double a=zahl;
        int s = stellen;
        zahl=zahl * Math.pow(10, s);
        zahl=Math.round(zahl);
        zahl=zahl / Math.pow(10,s);
        return zahl;*/
    }
}