
/**
 * ### #### ##### ## ## ######## ### ########## ############## ## # ####'# #### #### 
 * ### ########.
 * 
 * ########### ######
 * ####### ## ##/##/####
 */
public class NyangeAbdulshakur_HW7_Path
{
    private int [][] checkpoint = new int [2][10];
    /**
     * Constructor for objects of class NyangeAbdulshakur_HW7_Path
     */
    public NyangeAbdulshakur_HW7_Path(int time, int elevation, int time1, int elevation1 )
    {
        if( time >= 1000 && time <= 2100 && time1 >= 1000 && time1 <= 2100 && time < time1)
        {
            checkpoint [0][0] = time;
            checkpoint [0][1] = time1;
        }
        else 
        {
            throw new RuntimeException("time does not meet requirements");
        }
        if( elevation >= 2100 && elevation <= 7700 && elevation1 >= 2100 && elevation1 <= 7700 && elevation > elevtion1)
        {
            checkpoint [1][0] = elevation;
            checkpoint [1][1] = elevation1;
        }
        else
        {
            throw new RuntimeException("elevation does not meet requirments");
        }
    }
    public void addCheckPoints( int timeN, int elevationN)
    {
        /*
         * The following code is used to add checkpoints
         * first we initialize a variable called columnsIndex, and assign it the value of 2
         * because columnsIndex of 0 and 1 are already declared as properies in the constructor,
         * which will check conditions of new checkpoint values for time and elevation
         * and throw a RuntimeException if they are not valid; if they are valid 
         * and the outer condition checks to make sure that columnsIndex is not null than the 
         * time and elevation of the same columnsIndex will form a new checkpoint
         * after a new checkpoint is made columnsIndex will increase in value by one so as to
         * not replace the values from the previous checkpoint.
         * 
         */
        int columnsIndex = 2;
        if (columnsIndex < 11)
        {
            if( time[columnsIndex] >= 1000 && time[columnsIndex] <= 2100 && time[coulumns] < time[coulumns + 1])
            {
                checkpoint[0][columnsIndex] = time[columnsIndex];

            }
            else
            {
                throw new RuntimeException("time can't be less than 1000 or greater than 2100");
            }
            if( elevation >= 2100 && elevation <= 7700 && elevation[coulumns] > elevation[coulumns])
            {
                checkpoint[1][columnsIndex] = elevation[columnsIndex];
            }
            else
            {
                throw new RuntimeException("elevation can't be less than 2100 or greater than 7700");
            }
            
        }
        else
        {
            throw new RuntimeException("Can't exceed 10 checkpoints");
        }
        columnsIndex++;
    }

    public static int totalVerticalDistance()
    {
    }

    public static int totalTimeSpent()
    {
    }

    public static double averageSpeed()
    {
    }

    public String toString()
    {
        if (
    }
}