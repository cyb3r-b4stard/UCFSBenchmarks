import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
  import javax.swing.JFrame;
import java.io.*;
import java.util.* ;
import java.awt.* ;
import javax.swing.* ;
import sun.audio.AudioPlayer.*;

public class AhorcadoOK
{
   
    
    
      public static void main (String [] args)
    {
      
      
        String titulo="",letraString="", solucionS="", melase="", correcto= "no", s="", Peliculas="",Musica="",Libros="",Coches="",Introduccion="",Stemas="",Pelis="",music="",librs="",cars="",g="",h="",finalizar="";
        char solucionA []= new char [100];
        char letra = ' ';
        int opcion=0, resolver=0, posicion=0, fallos=0 ;
        boolean resuelto = false, encontrada = false;
        
   
     Object[] possibilities = {"Iniciar Juego", "Salir del Juego"};
     Introduccion = (String)JOptionPane.showInputDialog(null,"¿Selecciona el tema que desees para jugar?","Elige opcion",JOptionPane.QUESTION_MESSAGE,null,possibilities,"Otra letra");
    
     {
       

public class cronometro implements Runnable{
   
    Thread crono;
    javax.swing.JLabel tiempo = new javax.swing.JLabel();

    public cronometro() {
        JFrame ventana = new JFrame("Cronometro");
        ventana.add(tiempo);
        ventana.setSize(150,100);
        ventana.setVisible(true);

        crono = new Thread(this);
        crono.start();
    }

    int minutos=0, segundos=0, horas=0;
    public void run()
    { try {
            for(;;) {
                if(segundos==59) { segundos=0; minutos++; }
                if(minutos==59) { minutos=0; horas++; }
                segundos++;

                tiempo.setText(horas+":"+minutos+":"+segundos);
                crono.sleep(1000); }
        }
        catch (InterruptedException e) { System.out.println(e.getMessage()); }
    }

    public static void main(String args[])
    {
        new cronometro();
    }

}



     
     
      if (possibilities.equals("Salir del Juego"))
      {
      
     
    } 
    
        
  
     
                      try
                       {
                            String command = "cvlc - f simpsonsintro.avi";
                            Process child = Runtime.getRuntime().exec(command);
                        }
                        catch (Exception e)
                        {
                            JOptionPane.showMessageDialog (null, " No se ha podido leer el archivo de video");
                        }
     
     
    
     
    
     Object[] possibilities2 = {"Peliculas", "Musica", "Coches","Libros"};
     Stemas = (String)JOptionPane.showInputDialog(null,"¿Que quieres hacer?","Elige opcion",JOptionPane.QUESTION_MESSAGE,null,possibilities2,"Otra letra");
    
   
   JOptionPane.showMessageDialog (null, Stemas);   
   
     if (Stemas.equals("Peliculas"))
       {
        Object[] possibilities3 = {"conan", "avatar", "harry Potter","terminator"};
        Pelis = (String)JOptionPane.showInputDialog(null,"¿Que peliculas hacer?","Elige opcion",JOptionPane.QUESTION_MESSAGE,null,possibilities3,"Otra letra");
        }
    
      if (Stemas.equals("Musica")) {
         Object[] possibilities4 = {"michael jackson", "melendi", "shakira","skrillex"};
         Pelis = (String)JOptionPane.showInputDialog(null,"¿Que canción quieres?","Elige opcion",JOptionPane.QUESTION_MESSAGE,null,possibilities4,"Otra letra");
      }
     if (Stemas.equals("Libros"))
      {
        Object[] possibilities5 = {"la Casa de los Espiritus", "alas de fuego", "crepusculo","tirant Lo Blanc"};
        Pelis = (String)JOptionPane.showInputDialog(null,"¿Que libro quieres ?","Elige opcion",JOptionPane.QUESTION_MESSAGE,null,possibilities5,"Otra letra");
      }
    
    if (Stemas.equals("Coches"))
    {
     Object[] possibilities7 = {"lamborghini", "ferrari", "audi","bmw"};
      Pelis = (String)JOptionPane.showInputDialog(null,"¿Que coche quieres elegir?","Elige opcion",JOptionPane.QUESTION_MESSAGE,null,possibilities7,"Otra letra");
       
    }        
        
     try  
      {
          

              
         

         
        JOptionPane.showMessageDialog (null, "Le toca al jugador 1");
        titulo = Pelis;

        
        while (posicion < titulo.length())
            if (titulo.charAt(posicion)== ' ')
            {
                solucionS = solucionS + " ";
                posicion = posicion + 1;
            }
            else
            {
                solucionS = solucionS + "*";
                posicion = posicion +1;
        }


         
        
        
        solucionA=solucionS.toCharArray(); 

        while (resuelto == false && fallos<5)
        {
            letraString =           JOptionPane.showInputDialog(Arrays.toString(solucionA),"introduce una   letra del titulo"); 
            letra = letraString.charAt(0);

            posicion = 0;
            encontrada = false;

            while (posicion <titulo.length())
            {
                if (titulo.charAt(posicion)== letra)
                {  
                    encontrada = true;
                    solucionA[posicion] = letra;
                    posicion = posicion + 1;
                }
                else
                    posicion = posicion + 1;
            } 

            if (encontrada == false)
                fallos = fallos +1;
            else         
            {
                resolver = JOptionPane.showConfirmDialog(null,Arrays.toString(solucionA) ,"¿Desea resolver?",JOptionPane.YES_NO_OPTION);
                if (resolver == JOptionPane.YES_OPTION)
                {
                    melase = JOptionPane.showInputDialog(Arrays.toString(solucionA),"introduce el titulo completo");
                    if (melase.equals(titulo))
                    {
                        JOptionPane.showMessageDialog (null, "¡ Has ganado !");
                        resuelto = true;
                        
                      {  
                        JFrame frame = new JFrame("homerganar.jpg");
                    JLabel label = new JLabel(new ImageIcon("homerganar.jpg"));
                    label.setBackground(Color.white);
                    label.setOpaque(true);
                    label.setPreferredSize(new Dimension(137, 452));
                    frame.getContentPane().add(label, BorderLayout.CENTER);
                    frame.pack();
                    frame.setVisible(true);
                        
                    
                    
                  
    
                            
                        
                    String sonido = "homeryuhu.wav";
        
                    InputStream in = new FileInputStream(sonido);
        
                    Audio audio = new Audio(in);
                  
                
            }
                    
                    }
                    else
                    {
                        JOptionPane.showMessageDialog (null, "¡ Lo siento, has perdido !");
                        fallos =5;
                    
                    JFrame frame = new JFrame("homerperder.jpg");
                    JLabel label = new JLabel(new ImageIcon("homerperder.jpg"));
                    label.setBackground(Color.white);
                    label.setOpaque(true);
                    label.setPreferredSize(new Dimension(137, 452));
                    frame.getContentPane().add(label, BorderLayout.CENTER);
                    frame.pack();
                    frame.setVisible(true);
                    
                    String sonido = "homerdoh.wav";
        
                    InputStream in = new FileInputStream(sonido);
        
                    Audio audio = new Audio(in);
                   
                   
                    }
                } 
            }
              
           
        
        
            
            
            
            
            
        }
       
        JOptionPane.showMessageDialog (null, "¡ Fin del Juego !");     
      }
      catch (Exception o)
   
      { 
          JOptionPane.showMessageDialog(null,"Fin");
        }
   }
 }
