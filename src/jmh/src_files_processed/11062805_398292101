
/**
 * ########## # ########.
 * 
 * @###### (### ###-# #####) 
 * @####### (##/##/####)
 */
public class Fraction
{
    private int numerator; 
    private int denominator;

    /**
     * Creates a fraction with an initial value of 7/10.
     */
    public Fraction()
    {
        numerator = 1;
        denominator = 1;
    }

    /**
     * Creates a fraction with the specified numerator and
     * denominator.
     * @param newNumerator the desired numerator for the fraction
     * @param newDenominator the desired denominator for the fraction.
     * The denominator must not be 0.
     */
    public Fraction(int newNumerator, int newDenominator)
    {
        numerator = newNumerator;
        denominator = newDenominator;
    }
    
    /**
     * Creates a fraction that is a copy of the given fraction
     * @param other the fraction to make a copy of
     */
    public Fraction (Fraction other)
    {
        numerator = other.numerator;
        denominator = other.denominator;
    }

    /**
     * Returns the numerator of this fraction.
     * @return the numerator of this fraction
     */
    public int getNumerator()
    {
        return numerator;
    }

    /**
     * Returns the denominator of this fraction.
     * @return the denominator of this fraction
     */
    public int getDenominator()
    {
        return denominator;
    }

    public double getValue()
    {
        return ((double) getNumerator() ) / getDenominator();
    }

    public void setNumerator(int newNumerator)
    {
        numerator = newNumerator;
    }
    
    public void setDenominator(int newDenominator)
    {
        denominator = newDenominator; 
    }


   /**
     * Returns the string representation of this fraction
     * in the form numerator/denominator
     * @return the string representation of this fraction
     * in the form numerator/denominator
     */
    public String toString()
    {
        return numerator + "/" + denominator;
    }
    /**
     *
     */
   public Fraction multiply (int num)
   {
       return new Fraction (numerator * num, denominator);
   }
   
   public Fraction add (int num)
   {   
       Fraction sum = new Fraction (numerator + num * denominator return sum);
   }
}

    
    
   