import java.util.ArrayList;

/**
 * ### ##### ##### ########## ### ######-########## #####. 
 *
 * ### #### ##### ############ #### ##### ####### ####, #### # ### ##### ##
 * ######.
 */
public class Snake 
{
	private GraphicObject head;
	private ArrayList<GraphicObject> bodyParts;
	private GraphicObject b;
	/**
	 * Initializes a new Snake object at the specified (x,y) position.
	 * 
	 * TODO: Implement this.
	 * 
	 * @param x		the initial x position of the snake
	 * @param y		the initial y position of the snake
	 */
	public Snake(float x, float y)
	{
		bodyParts = new ArrayList<GraphicObject>();
		head = new GraphicObject("HEAD", x, y);
		head.setSpeed(2);
		head.setDirection(90);
		bodyParts.add(head);
		for(int i = 0; i < 4; i++)
		{
		    grow();
		}
	}

	/**
	 * Returns the GraphicObject associated with the head of this snake.
	 *  
	 * TODO: Implement this.
	 * 
	 * @return the GraphicObject associated with the head of this snake
	 */
	public GraphicObject getGraphicObject() {
		return null;
	}

	/**
	 * Grows the snake by one body segment.
	 * 
	 * TODO: Implement this.
	 */
	public void grow()
	{
		b = new GraphicObject("BODY", 0, 0);
		b.setLeader(bodyParts.get(bodyParts.size() - 1));
		bodyParts.add(b);
	}

	/**
	 * Reads keyboard input and changes the snake's direction as necessary.
	 * 
	 * TODO: Implement this.
	 * 
	 * @param controlType - 1: classic, 2: analog, 3: slither
	 */
	public void updateMoveDirection(int controlType)
	{
        if(controlType == 1)
        {
            if(Engine.isKeyPressed("LEFT"))
            {
                head.setDirection(head.getDirection() + 90);
            }
            else if(Engine.isKeyPressed("RIGHT"))
            {
                head.setDirection(head.getDirection() - 90);
            }
        }
			if(controlType == 2)
        {
            if(Engine.isKeyHeld("LEFT"))
            {
                head.setDirection(head.getDirection() + 6);
            }
            else if(Engine.isKeyHeld("RIGHT"))
            {
                head.setDirection(head.getDirection() - 6);
            }
        }
			if(controlType == 3)
        {
            if(Engine.isKeyHeld("SPACE"))
            {
                head.setDirection(head.getDirection() + 6);
            }
            else
            {
                head.setDirection(head.getDirection() - 6);
            }
        }
	}

	/**
	 * Kills the snake if the head is colliding with any of the body segments.
	 * 
	 * TODO: Implement this.
	 */
	public void dieIfCollidingWithOwnBody()
	{
        }
	}

	/**
	 * Kills the snake.
	 * 
	 * TODO: Implement this.
	 */
	public void die()
	{
	}

	/**
	 * Returns true if the snake is dead.
	 * 
	 * TODO: Implement this.
	 * 
	 * @return true if the snake is dead, false otherwise
	 */
	public boolean isDead() {
		return false;
	}
}