
/**
 * ##### # ########### ## ##### #### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class TP41
{
    private int x;

    /**
     * Constructor for objects of class TP41
     */
    public TP41()
    {
        x = 0;
    }

    /**
     * An example of a method - replace this comment with your own
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public int sampleMethod(int y)
    {
        return x + y;

    }


    public void moitiers(final int pM)
    {  
        int vM = pM;
        while ( vM != 1){
            vM = vM/2;
            System.out.println(vM);
        }
        
    }
    
    public void affTab(final int[] pTab)
    {
        for(int i=0; i<pTab.length ; i++) {

            System.out.println(pTab[i]);
        }
    }
  
    public void affTabInv(final int[] pTabInv)
    {
        for (int i = pTabInv.length -1 ; i>=0 ; i--){
            System.out.println(pTabInv[i]);
        }
    }
    

    public void initTab( final int[] pTab2)
    {
    for(int i=0; i<pTab2.length ; i++) {
        
        System.out.println(pTab2[i]=i*2);
         
    }
    }
    
    public void essai()
    {
        int[] vTab= new int[] {1,4,6};
        initTab(vTab);
        affTab(vTab);
        affTabInv(vTab);
        Somme(vTab);
       
    }
    
    public int Somme(final int pTab[])
    {
       int vSomme = 0;
        for (int i=0 ; i<pTab.length ; i++){
        vSomme = pTab[i] + vSomme;    
       } 
    return vSomme;
   }

   public void sauteLignes(final int pL)
   {
       for (int i=0; i<pL ; i++){
           i*System.out.println();
       }
    }
    
}
