/**
 * ###### ####### 
 * 
 * @####### ##
 * 
 * ######## ### ### ###-######## ###### ###### ##.
 * 
 * ############ ###, ## ### ############### 
 * ### ################# ##########.
 * 
 * ### ############ ######## ### ############# ######.
 */

 
public class Spieler  
{
 /**
  * Ein Spieler kennt zwei Wuerfel und den Topf:
  */ 
 
   private   Wuerfel wuerfel1;
   private   Wuerfel wuerfel2;
   private   Spieler mitSpieler;
   private   Topf pTopf;

   
  /** 
  * Hier folgen die Attribute der Klasse.
  */
  
   private String name;
   private int punkteStand;
   private int vermoegen;
   private int wurfAnzahl;

   /**
    * Konstruktor fuer Objekte der Klasse Spieler,
    * mit der folgenden Methode wird ein Objekt der Klasse 
    * Spieler erzeugt.
   */
    public Spieler(Wuerfel pWuerfel1, Wuerfel pWuerfel2)
    {
        this.wuerfel1 = pWuerfel1;
        this.wuerfel2 = pWuerfel2;
        this.punkteStand = 0;
        this.vermoegen = 1000;
        this.wurfAnzahl = 0;
    }

    
   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    * 
    */
   public int getPunktestand()
   {
       return this.punkteStand;
   }
  
   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    */
   public int getWurfanzahl()
   {
      return this.wurfAnzahl;
   }
   
   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    */
   public String getName()
   {
	   return this.name;
   }
   
   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    */
   public void setName (String pNeuerName)
   {
         this.name = pNeuerName;
   }
   

   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    */
   public int topfLeeren()
   {
       int lVermoegen = this.vermoegen;
       this.vermoegen = this.vermoegen + (1000 - this.vermoegen)*2;
        this.punkteStand = 0;
        this.wurfAnzahl = 0;
        return lVermoegen;
   }
   
   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    */
   public void einsatzSetzen(int pEinsatz)
   {
              if (this.vermoegen < pEinsatz)
        {
            pEinsatz = this.vermoegen;
        } 
        this.vermoegen = this.vermoegen - pEinsatz;
   }

   /**
    * Fuegen Sie hier einen Kommentar ein, der die Funktionalitaet
    * der folgenden Methode beschreibt.
    */
   public void wuerfeln ()
{
 this.wuerfel1.rollen();
 this.wuerfel2.rollen();
int lErgebnis = this.wuerfel1.getPunkte() + this.wuerfel2.getPunkte();
 if (lErgebnis != 7)
{
 this.punkteStand = this.punkteStand + lErgebnis;
 this.wurfAnzahl++;
 if(this.wurfAnzahl = this.mitSpieler.wurfAnzahl)
 {
     getPunkteStand() 
     if(this.punkteStand < this.mitSpieler.punkteStand)
     {
         System.ou.print1n("Du hast leider verloren !")
        }
        else 
        {
            Systenm.out.print1n("Du hast gewonnen!")
        }
    }
}
else
{
 System.out.println
 ("Du hast leider eine 7 gewuerfelt und damit verloren!");
 
 this.topf.gewinnAuszahlen(this.mitSpieler);
}
}
}