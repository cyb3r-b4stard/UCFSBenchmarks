import kareltherobot.*;

public class tools extends Robot
{
    
    public tools(int st,int ave,Direction d,int b)    
    {
    super(st,ave,d,b);
}
public void tl()
{
    turnLeft();
}
public void tr()
{
    tl();
    tl();
    tl();
}
public void m()
{
    move();
}
public void put()
{
    putBeeper();
}
public void ta()
{
    tl();
    tl();
}
public void row5()
{
    put();
    m();
    put();
    m();
    put();
    m();
    put();
    m();
    put();
}
public void row2()
{
    put();
    put();
}
public void m2()
{
    m();
    m();
    
}
public void m3()
{
    m2();
    m();
    
}
public void m4()
{
    m3();
    m();
}
public void m5()
{
    m4();
    m();
    
}
public void hello()
{
    tl();
    row5();
    tr();
    m();
    m();
    m();
    tr();
    row5();
    ta();
    m();
    m();
    tl();
    m();
    row2();
    tl();
    m();
    m();
    tl();
    tr();
    tr();
    m();
    tr();
    m();
    m();
    put();
    tl();
    m5();
    ta();
}
public void jump()
{
    m5();
    tr();
    m2();
    tr();
    m5();
    turnOff();
   
}
public void row3()
{
    put();
    m();
    put();
    m();
    put();
    m();
}
public void jt1()
{
    put();
    m3();
    put();
    m2();
    row3();
    m2();
    row3();
    m();
    row3();
    move();
    row3();
}
public void jt2()
{
    put();
    m3();
    put();
    m2();
    row3();
    m2();
    row3();
    m();
    row3();
    move();
    row3();
}
public void jt3()
{
    put();
    row3();
    m();
    put();
    m2();
    row3();
    m2();
    row3();
    m();
    row3();
    move();
    row3();
}
public void jt4()
{
    put();
    m3();
    put();
    m2();
    row3();
    m2();
    row3();
    m();
    row3();
    move();
    row3();
}
public void jt5()
{
    put();
    m3();
    put();
    m2();
    row3();
    m2();
    row3();
    m();
    row3();
    move();
    row3();
}
public boolean rib()
{
    tr();
    if (frontIsClear())
    {
        tl();
        
        return false;
    
    }
    tl();
    return true;
}
public boolean ric()
{
    return !rib();
}
 public void jump3()
 {
    if(frontIsClear())
    {
    m();
   }
   if(frontIsClear())
    {
    m();
   }
    if(frontIsClear())
    {
    m();
   }
   tl();
   m();
   
   if(rib())
   {
       m();
    }
    if(rib())
    {
       m();
    }
    tr();
    m();
    tr();
    m();
    if (frontIsClear())
    {
        m();
    }    
    if (frontIsClear())
    {
        m();
    }   
    tl();
 }
 public boolean fib()
 {
    return !frontIsClear();
    
 }
 public void mazemove()
 {
     if (fib())
     {
         tl();
        }
        else
        {
            m();
        }
        if (rib())
        {
            tr();
            m();
            if(ric())
            {
                m();
            }
 }
} 
 public void pickrow()
    {
      tl();
      if (NextToABeeper())
      { 
          pick();
          m();
        }
         tl();
      if (NextToABeeper())
      { 
          pick();
          m();
        }
         tl();
      if (NextToABeeper())
      { 
          pick();
          m();
        }
         TA();
        if (FIC())
        {
            m();
        }
        TA();
        if (FIC())
        {
            m();
        }
        TA();
        if (FIC())
        {
            m();
        }
        tl();
        m();
    }
    }
}

}