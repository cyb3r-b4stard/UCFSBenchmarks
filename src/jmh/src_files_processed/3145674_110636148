

import static org.junit.Assert.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

/**
 * ### #### ##### ###############.
 *
 * @######  (#### ####)
 * @####### (# ####### ###### ## # ####)
 */
public class TestApplication
{
    /**
     * Default constructor for test class TestApplication
     */
    public TestApplication()
    {
    }

    /**
     * Sets up the test fixture.
     *
     * Called before every test case method.
     */
    @Before
    public void setUp()
    {
    }

    /**
     * Tears down the test fixture.
     *
     * Called after every test case method.
     */
    @After
    public void tearDown()
    {
    }

    @Test
    public void incorrectmorelength()
    {
        Application applicat1 = new Application("12345678901", "Hussain");
        assertEquals(false, applicat1.isValidPersonalIdNo("12345678901"));
    }

    @Test
    public void correctLength()
    {
        Application applicat1 = new Application("1234567890", "Hussain");
        assertEquals(true, applicat1.isValidPersonalIdNo("1234567890"));
    }

    @Test
    public void incorrectlessMethod()
    {
        Application applicat2 = new Application("123891234", "Hussain");
        assertEquals(false, applicat2.isValidPersonalIdNo("123891234"));
    }

    @Test
    public void correctfirstDigit()
    {
        Application applicat1 = new Application("1234567890", "Hussain");
        assertEquals(true, applicat1.isValidPersonalIdNo("1234567890"));
    }

    @Test
    public void incorrectfirstDigit()
    {
        Application applicat1 = new Application("0001234500", "Hussain");
        assertEquals(false, applicat1.isValidPersonalIdNo("0001234500"));
    }

    @Test
    public void correctNumeric()
    {
        Application applicat1 = new Application("1234567890", "Hussain");
        assertEquals(true, applicat1.isValidPersonalIdNo("1234567890"));
    }

    @Test
    public void incorrectNumeric()
    {
        Application applicat1 = new Application("12345abcde", "Hussain");
        assertEquals(false, applicat1.isValidPersonalIdNo("12345abcde"));
    }

    @Test
    public void checkUnique()
    {
        Application applicat1 = new Application("1234567890", "Hussain");
        Application applicat2 = new Application("1234567890", "King");
        assertEquals(, applicat2.isValidPersonalIdNo("1234567890"));
    }
}






















