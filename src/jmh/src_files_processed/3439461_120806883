
/**
 * ##### # ########### ## ##### ############### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class LinkedListStack implements Stack
{
    private ListNode node;
    private int size;
    /**
     * Constructor for objects of class LinkedListStack
     */
    public LinkedListStack()
    {
        node=new ListNode()
        size=0;
    }

    public int size() {return size;}
    
    
    public void push(Object el)
    {
            setLast(el); 
            
    }
    
    public Object top()
    {
        
        
    }
    
    public Object pop()
    {
        
    }
    
    
    class ListNode
    {
        ListNode next;
        Object element;
        ListNode head;
        ListNode tail;
        int size;
        
        public ListNode(Object el, ListNode n)
        {
            element=el;
            next=n;
        }
        public ListNode()
        {
            makeEmpty();
        }
        
        private void setLast(Object obj)
        {
            tmp=new ListNode(null,null);
            tmp.setElement(obj);
            tail.setNext(tmp);
            tail=tmp;
            size++;
        }
        private void setElement(Object obj) {element=obj;}
        
        private void setElement(ListNode n) {next=n;}
        
        public boolean isEmpty() {return head==tail;}
        

        
        public void makeEmpty() 
        {
            head=tail=this(null,null);
            size=0;
        }
    }
    
}