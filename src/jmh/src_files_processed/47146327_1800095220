import java.util.ArrayList;

/**
 * # ##### ## #### ####### ## ##### #####.
 * 
 * @###### ##### #. ###### ### ####### #######
 * @####### ####.##.##
 */
public class MusicOrganizer
{
    private ArrayList<String> files;
        
    /**
     * Create a MusicOrganizer
     */
    public MusicOrganizer()
    {
        files = new ArrayList<String>();
    }
    
    /**
     * Add a file to the collection.
     * @param filename The file to be added.
     */
    public void addFile(String filename)
    {
        files.add(filename);
    }
    
    /**
     * Takes a single integer parameter and checks whether
     * it is a valid index for the current state of the col- lection. 
     * To be valid, the parameter must lie in the range 0 to size()–1.
     * 
     * @param integer being checked
     * If parameter is not valid an error message is returned.
     * If parameter is valid nothing is printed
     */
    public void checkIndex(int index){
        if(index < 0 || index > (files.size() - 1)){
            System.out.println("Error. " + index + " is not a valid index");  
        }
    }
    /**
     * Takes a single integer parameter and checks whether
     * it is a valid index for the current state of the col- lection. 
     * To be valid, the parameter must lie in the range 0 to size()–1.
     * 
     * @param integer being checked
     * If parameter is not valid an false is returned.
     * If parameter is valid nothing true is returned.
     */
    
    public boolean validIndex(int index){
        if(index > 0 && index <= files.size()-1){
            return true;
        }
        else{
            return false;
        }
    }
    
    
    /**
     * Return the number of files in the collection.
     * @return The number of files in the collection.
     */
    public int getNumberOfFiles()
    {
        return files.size();
    }
    
    /**
     * List a file from the collection.
     * @param index The index of the file to be listed.
     */
    public void listFile(int index)
    {
        
        if(validIndex(index)){
            String filename = files.get(index);
            System.out.println(filename);
        }
        else {
            System.out.println("Error. " + index + " is invalid. ";
        }
    }
    
    
    /**
     * Remove a file from the collection.
     * @param index The index of the file to be removed.
     */
    public void removeFile(int index)
    {
        if(validIndex(index)) {
            files.remove(index);
        }
    }
}