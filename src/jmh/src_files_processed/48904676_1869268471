public class Test
{
   /*#
    * Complete each method as indicated. Please note that the methods are all static and therefore cannot
    * use instance variables. 
    * 
    * The readme file has extended explainations.
    */
    
   /*#
    * Modify the array x so that all the negative values in the array are now their positive counter
    * parts. For example, if a value in x is -3, turn it into 3.
    */
   public static void makePositive(int[] x)
   {
       for(int i = 0; i < x.length; i++)
            if(x[i] < 0)
                x[i] = x[i] - x[i] - x[i];
   }
   
   /*#
    * Print out each letter in the string twice. If the word is "here" print out
    * "hheerree"
    */
   public static void twice(String x)
   {
      for(int i = 0; i < x.length(); i++)
           System.out.print(x.substring(i, i+1) + x.substring(i, i+1));
   }
   
   /*#
    * Create and return a new string that places the entirety of the string y in between each 
    * character in x. For example, if x is "here" and y is "aa" the newly created string is
    * "haaeaaraaeaa"
    */
   public static String addIn(String x, String y)
   {
       String z = new String
       (for(int i = 0; i < x.length(); i++)
            z.substring(i, i+1) = x.substring(i, i+1) + y;
       return("filler");
   }
   
   /*#
    * You may assume that x and y both contain the exact same number of indexes. Check each 
    * value in y, if it is true, print the corresponding index in the String x. If it is false,
    * do not print the index.
    */
   public static void toPrint(String x, boolean[] y)
   {
       for(int i = 0; i < x.length(); i++)
            if(y[i] == true)
                System.out.print(x.substring(i, i+1));
   }
}