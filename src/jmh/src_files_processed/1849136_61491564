import acm.graphics.*;
import acm.program.*;
import acm.gui.*;
import acm.util.*;
import acm.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.applet.*;


/** ########## ## ######### #### ## # ## ####/##
 * ########## ## ###.#
 * <##>
 * @###### ##### ####### && #### ########
 * @####### ##-##-####
 */
public class Drawings extends GraphicsProgram
{       
        public void run()
    {
        super.setSize(1000,800);
        int width = super.getWidth();
        int height = super.getHeight();
        BasicTurtle yertle = new BasicTurtle();
        super.add(yertle, 250, 250);
        
        double textX = width / 3;
        double textY = 50;
        GLabel text = new GLabel("");
        super.add(text, textX, textY);
        
        this.waitForClick(text, "Click to iniciate");
        this.resolutionReq02(yertle, text);
        this.resolutionReq03(yertle, text);
        this.resolutionReq04(yertle, text);
        
    }
    
        /**
         * Resolution of Req 2 and 4
         *@param BasicTurtel yertel to be used on drawings
         *@param text GLabel to write messeges
         * Method draws a square & a horizontal line
         * Method use the red color for square & first horizontal line & the colors of the rainbow for the second horizontal line
         */
    private void resolutionReq02( BasicTurtle yertle, GLabel text)
    {
        double size=250;
        Color color = Color.red;
        
        text.setLabel("Drawing of a square");
        yertle.drawSquare(size, color);
        yertle.hideTurtle();
        
        this.waitForClick(text, "Click to continue");
        yertle.erasePath();
        yertle.showTurtle();

        text.setLabel("Drawing of an horizontal line");
        yertle.left(90);
        yertle.drawHorizontalLine(250,250,size);
        yertle.hideTurtle();
      
        this.waitForClick(text, "Click to continue");
        yertle.erasePath();
        yertle.showTurtle();
        
        text.setLabel("Drawing of a rainbow line");
        yertle.drawHorizontalRainbowLine(250,250,size);
        
        yertle.hideTurtle();
    }
           
        /**
         * Resolution of Req 3 and 4
         *@param BasicTurtel yertel to be used on drawings
         *@param text GLabel to write messeges
         * Method draws a square with a coloured background
         * Method use the red color for the first square & the color's of the rainbow to the second square
         */
    
        private void resolutionReq03( BasicTurtle yertle, GLabel text)
    {
        this.waitForClick(text, "Click to continue");
        yertle.erasePath();
        yertle.showTurtle();
        
        yertle.setLocation(250,250);
        double size = 150;
        Color colorLine = Color.BLACK;
        Color background = Color.RED;

        this.waitForClick(text, "Click to continue");
        yertle.erasePath();
        text.setLabel("Drawing a square with coloured background");
        
        
        yertle.drawSquareWithBackground(size, colorLine, background);  
        
        yertle.hideTurtle();
    
        this.waitForClick(text, "Click to continue");
        yertle.erasePath();
        yertle.showTurtle(); 
        text.setLabel("Drawing a square with a rainbow background");
        yertle.left(90);
        yertle.drawSquareWithRainbowBackground(size, colorLine);  
        yertle.hideTurtle();
    }
        
      private void resolutionReq04( BasicTurtle yertle, GLabel text)
    {
        this.waitForClick(text, "Click to continue");
        yertle.erasePath();
        IODialog dialog = new IODialog();
        double a= dialog.readDouble ("Deseja voltar ao inicio - Indique 'sim' ou 'nÃ£o'");
        
        if (a > 0)
        {
            super.setSize(1000,800);
            int width = super.getWidth();
            int height = super.getHeight();
            BasicTurtle yertle = new BasicTurtle();
            super.add(yertle, 250, 250);
            
            double textX = width / 3;
            double textY = 50;
            GLabel text = new GLabel("");
            super.add(text, textX, textY);
            
            this.waitForClick(text, "Click to iniciate");
            this.resolutionReq02(yertle, text);
            this.resolutionReq03(yertle, text);
            this.resolutionReq04(yertle, text);
        }
        else
       
        
    
    
    
    
    
    
    
    
    }
    
    
        /**
     * Method that writes a message and waits for a user click
     * @param label Label where to write the text
     * @param text Text to write on screen
     */
    private void waitForClick(GLabel label, String text)
    {
        label.setLabel(text);
        super.waitForClick();
    }
   
}
 