
import java.util.*;

public class MethodsIntro
{
    public static void main(String[] args)
    {
        Scanner kbReader = new Scanner(System.in);

        System.out.println(isPositive(6));
        System.out.println(isEven(22));
        System.out.println(getMax(70, 15));
        System.out.println(getMin(20, 5));
        System.out.println(rollDice(25));
        System.out.println(capitalizeFirst("blake"));
        System.out.println(circleArea(2));
        System.out.println(isMultiple(2, 4));
        System.out.println(isPrime(17));
        System.out.println(fillArray(10));
        System.out.println(convertT(30.00, false));
    }
    public static boolean isPositive(int a)
    {
        if (a > 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    public static boolean isEven(int b)
    {
        if (b % 2 == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    public static int getMax(int c, int d)
    {
        if (c > 1)
        {
            return c;
        }
        else
        {
            return d;
        }
    }
    public static int getMin(int e, int f)
    {
        if (e > f)
        {
            return e;
        }
        else
        {
            return f;
        }
    }
    public static int rollDice()
    {
        Random a = new Random();
        int g = a.nextInt(5);
        return g;
    }
    public static int rollDice(int dieNums)
    {
        Random b = new Random();
        int h = b.nextInt(5);
        return h;
    }
    public static String capitalizeFirst(String a)
    {
        return a.toUpperCase();
    }
    public static double circleArea(double radius)
    {
        return (2 * (radius * radius));
    }
    public static boolean isMultiple(int i, int j)
    {
        if (i % j == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    public static boolean isPrime(int k)
    {
        if (k % 2 != 0)
        {
            return true;
        }
        else 
        {
            return false;
        }    
    }
    public static int[] fillArray(int l)
    {
        int[] nums = new int[l];
        for (l = 0; l < 7; l++)
        {
            if (l == 5)
            { 
                System.out.println(nums[l] + " ");
            }
        }    
    }
    public static double convertT(double temp, boolean isF)
    {
        return(5/9 * (temp -25));
        if (temp <= 30)
        {
            isF = true;
        }
        else
        {
            isF = false;
        }
    }        
    public static int[] posAndNeg(int n)
    {
        int[] nums2 = new int [b + 1];
        for (int a = 0; a < b; a++)
        {
            return nums2[a] + " ";
        }          
    } 
    public static void printReverse(int n)
    {
        for (int a = printReverse.length; a < printReverse; a--)
        {
            return 
        }
    }    
}    