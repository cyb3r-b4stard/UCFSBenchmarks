import sacco.*;
public class PokerHands implements HandChecker
{
    public boolean isFlush(Card[] cards)
    {
        boolean flush = true;
        for(int i= 0; i<5; i++)
        {
            if(cards[i].getSuit()!= cards[i+1].getSuit())
            {
                return=false;
            }
        }
        return flush;
    }
    public boolean isPair(Card[] cards)
    {
        int count = 0;
        String[] pair = new String[5];
        for(int i = 0; i<5; i++)
        {
            pair[i]=cards[i].getValue();
            count = 0;
            for(int j=0; j<5; j++)
            {
                if(cards[i].equals(cards[j].toString()))
                {
                    count++;
                }
                if(count==2)
                {
                    return true;
                }
            }
        }
        return false;
    }
    public boolean isThreeOfAKind(Card[] cards)
    {
        int count = 0;
        for (int i=0; i<=4 ;i++)
        { 
            count = 0;
            for (int j = i+1 ; j <= 4 ; j++)
            {
                if (cards[i]==(cards[j]))
                { 
                    count++;
                }
                if (count>=2)
                {
                    return true;
                }
            }
        }
        return false;
    }
    public boolean isTwoPair(Card[] cards)
    {
        int count = 0;
        
        
        
        
        return false;
    }
    public boolean isStraight(Card[] cards)
    {
        boolean smallRank = true;
        for(int i = 0; i<4; i++)
        {
            if(cards[i].getRank()!=cards[i+1].getRank())
            {
                smallRank=false;
            }
        }
        return true;
    }
    public static void main()
    {
        HandCheckerRunner.main(new PokerHands());
    }
}
    