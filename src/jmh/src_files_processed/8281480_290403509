import java.awt.Color;

/**
 * ##### ######## - # ##### ############# ####### ######### #### ### 
 * ###### #####. 
 *
 * @###### ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */

public class BallDemo   
{
    private Canvas myCanvas;

    /**
     * Create a BallDemo object. Creates a fresh canvas and makes it visible.
     */
    public BallDemo()
    {
        myCanvas = new Canvas("Ball Demo", 600, 500);
    }

    /**
     * Simulate two bouncing balls
     */
    public void bounce()
    {
        int ground = 400;   

        myCanvas.setVisible(true);

        myCanvas.drawLine(50, ground, 550, ground);

        BouncingBall ball = new BouncingBall(50, 50, 16, Color.BLUE, ground, myCanvas);
        ball.draw();
        BouncingBall ball2 = new BouncingBall(70, 80, 20, Color.RED, ground, myCanvas);
        ball2.draw();

        boolean finished =  false;
        while(!finished) {
            myCanvas.wait(50);           
            ball.move();
            ball2.move();
            if(ball.getXPosition() >= 550 || ball2.getXPosition() >= 550) {
                finished = true;
            }
        }
    }
    
    /**Simulate any number of bouncing balls.
     * 
     */
    public void bounce(int balls)
    {
        int ground = 400;   

        myCanvas.setVisible(true);

        myCanvas.drawLine(50, ground, 550, ground);
        
        int[] ballCollection = new int[10];

        for(int index = 0; index < balls; index++)
        {
            BouncingBall ball = new BouncingBall(50, 50, 16, Color.BLUE, ground, myCanvas);
            ball.draw();
            ballCollection[index] = ball;
        }
       

        boolean finished =  false;
        while(!finished) {
            myCanvas.wait(50);           
            for(BouncingBall ball : ballCollection)
            {
                ball.move()
            if(ball.getXPosition() >= 550 || ball2.getXPosition() >= 550) {
                finished = true;
            }
        }
     }
}