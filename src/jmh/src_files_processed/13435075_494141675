import kareltherobot.*;
import java.awt.Color;
/**
 * ##### # ########### ## ##### ######## ####.
 * 
 * @###### (######) 
 * @####### (###. #,####)
 */
public class KCDdisplay extends Robot
{

    /**
     * Constructor for a BetterBot robot.  This constructor uses the
     * same constructor as for a robot.  (Slightly more powerful than a Robot.)
     */ 

    public KCDdisplay(int st, int av, Direction dir, int beeps)
    {
        super(st,av,dir,beeps);
    }

    /**
     * Constructor for a BetterBot robot (with a color option).  This constructor allows the user
     * to select a colour for the robot (as well as the standard attributes).
     */
    public KCDdisplay(int st, int av, Direction dir, int beeps, Color botPaint)
    {
        super(st,av,dir,beeps,botPaint);
    }

    /**
     * turns robot right;
     */
    public void turnRight()
    {
        turnLeft();
        turnLeft();
        turnLeft();
    }

    /**
     * Will move the specified number of intersections to move.
     * 
     * @param length  How many intersections it should movee.
     */
    public void move(int length ) {
        for (int i=0; i<length; i++)
        {
            move();
        }
    }

    /**
     * Will place the specified number of beepers in a row, 
     * starting with the intersection directly ahead of the robot.
     * When completed, the robot will be standing at the intersection where the last
     * beeper was placed, and facing in the robot's original direction.
     * @param length  How many beepers long the line should be.
     */
    public void line(int length ) {
        for (int i=0; i<length; i++)
        {
            move();
            putBeeper();
        }
    }
    
    /**
     * erases the number
     */
    public void erase(stringlength)
    {
        for (int i=draw; i<length;i++)
        {
            pickBeeper();
            move();
        }
    }

    /**
     * draw the number 0
     * This method is written by Glaiza Regonas
     */
    public void drawZero()
    {
        line(7);
        turnRight();
        line(3);
        turnRight();
        line(6);
        turnRight();
        line(2);
        turnLeft();
        
        
        
        
    }

    /**
     * draw the number 1
     * This is written by Glaiza Regonas.
     */
    public void drawOne()
    {
        line(7);
        turnRight();
        move(2);

    }

    /**
     * drawFour draws the number 4
     * This method written by Brianna Ludwig
     */
    public void drawFour()
    {
        move(3);
        line(4);
        turnRight();
        move(2);
        line(1);
        turnRight();
        line(3);
        turnRight();
        line(2);
        turnRight();
        turnRight();
        move(2);
        turnRight();
        line(3); 
        move();
        turnRight();
        move(2);
        turnRight();
    }

    /**
     * drawFive draws the number 5
     * This method written by Brianna Ludwig
     */
    public void drawFive()
    {
        line(1);
        move(2);
        line(4);
        turnRight();
        line(1);
        turnRight();
        move(2);
        line(1);
        move(2);
        line(1);
        turnLeft();
        line(1);
        turnLeft();
        move(2);
        line(1);
        move(2);
        line(1);
        turnRight();
        line(1);
        turnRight();
        move(2);
        line(4);
        turnLeft();
        move(2);
        turnLeft();
    }
}