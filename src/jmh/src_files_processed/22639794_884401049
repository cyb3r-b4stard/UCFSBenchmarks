public class ToothpickGame
{
    private static KeyboardReader reader = new KeyboardReader();
    private static int player1Wins = 0, player2Wins = 0, winsNeeded = 0, numberOfGames = -1, numberOfToothpicks = 0, maxToothpicks = 0, currentPlayer = 0, playerAComputer = 0, computerDifficulty = -1, randomMaxToothpicks = 1;
    public static final int EASY = 1, MEDIUM = 2, HARD = 3, HUMAN = 1, COMPUTER = 2, RANDOM = 0;
    private static String p1Name = "", p2Name= "";
    public static void main (String [] args)
    {
        displayWelcomeBanner();
        setGameParameters();
        while (player1Wins != winsNeeded && player2Wins != winsNeeded)
        {
            playOneGame();
        }
        displayEndOfSeriesStats();
    }
    private static void displayWelcomeBanner ()
    {
        System.out.println("*********************************");
        System.out.println("* WELCOME TO THE TOOTHPICK GAME *");
        System.out.println("*********************************\n");
    }   
    private static void setGameParameters ()
    {
        p1Name = reader.readString("What is Player 1's name?  ");
        checkPlayer2();
        getNumberOfGames();
        maxNumberOfToothpicks();
    }   
    private static void checkPlayer2 ()
    {
        System.out.println(p1Name + ", would you like to play a human or a computer?");
        playerAComputer = reader.readInt("Please enter \"1\" for human and \"2\" for computer:  ");
        while (playerAComputer != HUMAN && playerAComputer != COMPUTER)
        {
            playerAComputer = reader.readInt("Invalid input, " + p1Name + ". Please enter \"1\" for human and \"2\" for computer:  ");
        }
        if (playerAComputer == HUMAN)
        {
            p2Name = reader.readString("What is Player 2's name?  ");
            computerDifficulty = 0;
        }
        else
        {
            System.out.println(p1Name + ", what difficulty computer would you like to play?");
            computerDifficulty = reader.readInt("Please enter \"1\" for easy, \"2\" for medium, and \"3\" for hard:  ");
            while (computerDifficulty != EASY && computerDifficulty != MEDIUM && computerDifficulty != HARD)
            {
                computerDifficulty = reader.readInt("Invalid input, " + p1Name + ". Please enter \"1\" for easy, \"2\" for medium, and \"3\" for hard:  ");
            }
        }
        if (computerDifficulty == EASY)
            p2Name = "Easy Computer";
        else if (computerDifficulty == MEDIUM)
            p2Name = "Medium Computer";
        else if (computerDifficulty == HARD)
            p2Name = "Hard Computer";
    }   
    private static void getNumberOfGames ()
    {
        int randomNumberOfGames = 0;
        System.out.println("How many games would you like to play, " + p1Name + "?");
        numberOfGames = reader.readInt("Please choose 1, 3, 5, or 7:  ");
        while (numberOfGames != 1 && numberOfGames!= 3 && numberOfGames != 5 && numberOfGames != 7)
        {
            System.out.println(p1Name + ", that is not a valid input.");
            numberOfGames = reader.readInt("Please choose 1, 3, 5, or 7:  ");
        }
        winsNeeded = (numberOfGames + 1) / 2;
    }   
    private static void maxNumberOfToothpicks ()
    {
        System.out.println(p1Name + ", how many toothpicks can each player choose per turn?");
        maxToothpicks = reader.readInt("Please choose 3, 4, 5, or 6 (or 0 for a random number):  ");
        while (maxToothpicks != 3 && maxToothpicks != 4 && maxToothpicks != 5 && maxToothpicks != 6 && maxToothpicks != 0)
        {
            System.out.println("That is not a valid input, " + p1Name + ".");
            maxToothpicks = reader.readInt("Please choose 3, 4, 5, or 6 (or 0 for a random number before each game):  ");
        }
        if (maxToothpicks != 0)
            System.out.println("Each player can choose " + maxToothpicks + " toothpicks per turn.");
        else
            randomMaxToothpicks = RANDOM;
    }   
    private static void playOneGame ()
    {
        initializeGame();
        while (numberOfToothpicks > 0)
        {
            if (numberOfToothpicks == 1)
                System.out.println("\nThere is 1 toothpick remaining.");
            else
                System.out.println("\nThere are " + numberOfToothpicks + " toothpicks remaining.");
            currentPlayerTakesTurn();
            if (numberOfToothpicks != 0)
                currentPlayer = (currentPlayer % 2) + 1;
        }
        congratulateWinner();
    }   
    private static void currentPlayerTakesTurn ()
    {
        if (currentPlayer == 1)
            p1Turn();
        else if (playerAComputer == HUMAN)
            p2Turn();
        else if (playerAComputer == COMPUTER)
            computerTurn();
    }
    private static void congratulateWinner ()
    {
        if (currentPlayer == 1)
        {
            player1Wins ++;
            System.out.println("\n" + p1Name + " has won the game! Go " + p1Name + "!");
        }
        if (currentPlayer == 2)
        {
            player2Wins ++
            System.out.println("\n" + p2Name + " has won the game! Go " + p2Name + "!");
        }
    }
    private static void initializeGame ()
    {
        System.out.println("\nGAME" + (player1Wins + player2Wins + 1) + ":");
        if (randomMaxToothpicks == RANDOM)
        {
            maxToothpicks = Math2.random(3, 6);
            System.out.println("Each player can choose " + maxToothpicks + " toothpicks per turn.");
        }
        numberOfToothpicks = Math2.random(15, 35);
        System.out.println("There are " + numberOfToothpicks + " toothpicks.");
        currentPlayer = Math2.random(1, 2);
        if (currentPlayer == 1)
            System.out.println(p1Name + " goes first.");
        else
            System.out.println(p2Name + " goes first.");
    }   
    private static void p1Turn ()
    {
        int player1Choice = 0;
        player1Choice = reader.readInt(p1Name + ", how many toothpicks would you like to take:  ");
        while (player1Choice > maxToothpicks || player1Choice < 1 || player1Choice > numberOfToothpicks)
        {
            System.out.println("That is not a valid input.");
            player1Choice = reader.readInt(p1Name + ", how many toothpicks would you like to take:  ");
        }
        numberOfToothpicks -= player1Choice;
    }   
    private static void p2Turn()
    {
        int player2Choice = 0;
        player2Choice = reader.readInt(p2Name + ", how many toothpicks would you like to take:  ");
        while (player2Choice > maxToothpicks || player2Choice < 1 || player2Choice > numberOfToothpicks)
        {
            System.out.println("That is not a valid input.");
            player2Choice = reader.readInt(p2Name + ", how many toothpicks would you like to take:  ");
        }
        numberOfToothpicks -= player2Choice;
    }   
    private static void computerTurn()
    {
        int computerChoice = 0, coinFlip = 0;
        if (computerDifficulty == EASY)
        {
            computerChoice = Math2.random(1, maxToothpicks);
        }
        if (computerDifficulty == MEDIUM)
        {
            coinFlip = Math2.random(1, 2);
            if (coinFlip == 1)
                computerChoice = Math2.random(1, maxToothpicks);
            else
                computerChoice = optimalChoice();
        }
        if (computerDifficulty == HARD)
        {
            computerChoice = optimalChoice();
        }
        if (computerChoice > numberOfToothpicks)
        {
            computerChoice = numberOfToothpicks;
        }
        System.out.println(p2Name + " took " + computerChoice + " toothpicks.");
        numberOfToothpicks -= computerChoice;
    }   
    private static int optimalChoice()
    {
        int i = (maxToothpicks + 1);
        if (numberOfToothpicks < maxToothpicks)
        {
            return numberOfToothpicks;
        }
        while ((i + (maxToothpicks + 1)) <= numberOfToothpicks)
        {
            i += (maxToothpicks + 1);
        }
        if (i == numberOfToothpicks)
            return 1;
        else
            return (numberOfToothpicks - i);
    }   
    private static void displayEndOfSeriesStats ()
    {
        System.out.println("\n**************************");
        System.out.println("* OVERALL SERIES RESULTS *");
        System.out.println("**************************");
        if (player1Wins == 1)
            System.out.println("\n" + p1Name + " won 1 game.");
        else
            System.out.println("\n" + p1Name + " won " + player1Wins + " games.");
        if (player2Wins == 1)
            System.out.println("\n" + p2Name + " won 1 game.");
        else
            System.out.println(p2Name + " won " + player2Wins + " games.");
        if (player1Wins > player2Wins)
            System.out.println(p1Name + " is the winner! Congratulations.");
        else
            System.out.println(p2Name + " is the winner! Congratulations.");
    }   
}