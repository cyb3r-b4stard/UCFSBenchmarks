import info.gridworld.actor.Actor; 
import info.gridworld.grid.Grid;
import info.gridworld.actor.Rock; 
import info.gridworld.actor.Critter; 
import info.gridworld.grid.Location; 
import java.util.ArrayList; 
import java.awt.Color; 
import info.gridworld.actor.Flower;
public class AmericanCritter extends Critter
{
   public AmericanCritter()
   {
        setColor(Color.RED);    
   }
   public ArrayList<Actor> getActors()
   {
       ArrayList<Actor> actors = new ArrayList<Actor>(); 
       Location loc = getLocation(); 
       for(int i = loc.getRow() - 2; i <= loc.getRow() + 2; i++ ) 
       {
            for(int j = loc.getCol() - 2; j <= loc.getCol() + 2; j++) 
            { 
                Location temp = new Location(i,j); 
                if(getGrid().isValid(temp)) 
                {                       
                    if((getGrid().get(temp) != null) && (getGrid().get(temp) instanceof Critter)) 
                    {
                        actors.add(getGrid().get(temp));
                    }
                }
            }
       }
       System.out.println(actors);
       return actors;
   }    
   public void processActors(ArrayList<Actor> actors)
   {
       Grid<Actor> gr = getGrid();
       for(int i = 0; i < actors.size(); i ++)
       {           
           int a = (int)(Math.random() * actors.size();
       }       
   }      
} 