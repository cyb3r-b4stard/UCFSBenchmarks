/**
 *  @####### ####:  ######, ######
 *  @#######        #.#
 *  ### # :         #####
 *  ######:         ## ###
 *  ########:       #### ####
 *  ####:           ##/##/####   
 *
 *  ########:       ## - ###########
 *  ###########:    ####_#####_####_######_######
 *  ####?##### ####: ######
 *  
 *  ######## ####:  ######.###.#######()
 *                  ### 
 *                  ###()
 *                  ##/####()
 *
 *  ####### #########: ###### # ##### #### ####### ### ###### ##### ###
 *                     ####### ##'# ### #######
 *  
 *  ###########:    ## ########### ####
 */
public class Doctor extends Person
{
    private double fee;
    private String speciality;
    private static double DEFAULTFEE = 150;
    
    /**
     * Contructor that creates the default object
     * Pre: default super class Person is created
     * Post: Office fee is initialized with DEFAULTFEE = 150 
     */
    public Doctor()
    {
        super ();       
        this.fee = DEFAULTFEE;   
    }
    
    
    /**
     * Overloaded constructor 1 sets the objects information with the super
     * class name & the Doctor class's fee and speciality
     * @param super name        uses the super class Person constructor
     * @param speciality        sets the speciality to the user input
     * pre: default super class Person is created
     * post: name and speciality are all set
     */
    public Doctor(String name, String speciality)
    {
        super(name); 
        this.speciality = speciality; 
    }
    
    
    /**
     * Overloaded constructor 2 sets the objects information with the super
     * class name & the Doctor class's fee and speciality
     * @param super name        uses the super class Person constructor
     * @param fee               sets the fee to the user input
     * @param speciality        sets the speciality to the user input
     * pre: default super class Person is created
     * post: name, fee, speciality are all set
     */
    public Doctor(String name, double fee, String speciality)
    {
        super(name); 
        this.fee = fee; 
        this.speciality = speciality; 
    }
    
    public void setOfficeFee(String fee)
    {
        this.fee = fee; 
    }
    
    public void setSepciality()
    {
        this.speciality = speciality; 
    }
    
        
    public String getSpeciality()
    {
        return speciality; 
    }
    
    public void printInfo()
    {
        super.printInfo(); 
        System.out.printf("Office fee: $%,.2f%n",fee); 
        System.out.printf("Speciality: ",speciality);  
    }
    
    public boolean equals(Doctor dr)
    {
        return( this.name().equals(dr.getName()) &&
                this.fee == dr.getFee() &&
                this.specialty.equals(dr.getSpeciality());
    }
    
    
}