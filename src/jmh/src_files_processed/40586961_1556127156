
/**
 * ########### ##### ### ####### ####### ######.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class CalculatePi
{
    public static void main(String[] args)
    {
        double pi = 0;
        System.out.printf("%7s %12s\n", "Term", "   Calculate pi"); 
        for (int i=1; i <=12; i++)
        {

            double numerator = 4.0;
            double denominator = (2*i-1);
            double term  = (numerator/denominator);

            if (i%2 == 1)
                pi += term ;
            else
                pi -= term;
        }
        double error = (Math.PI - pi) / Math.PI * 100.0;
        System.out.printf("%7d    %12.10f   %12.6f\n", i, pi, Math.abs(error));

        pi = 0;
        System.out.printf("\n%7s %12s %12s\n", "   Term  ", "Calculate pi   ", "Percentage Error"); 
        for (int i=1; i <=1000000; i++)
        {

            double numerator = 4.0;
            double denominator = 2*i-1;
            double term  = (numerator/denominator);
            double error = (Math.PI - pi) / Math.PI * 100.0;
            if (i%2 == 1)
                pi += term ;
            else
                pi -= term;

            if (i%50000==0)
                System.out.printf("%7d   %12.10f   %12.6f\n", i, pi, Math.abs(error));

        }

        double piResult = CalculatePi.calcPi(12);
        System.out.printf("\nThe pi result for 12 terms is: %.8f", piResult); 

    }

    public static double calcPi(int Terms)
    {
        double pi = 0;
        for (int i=1; i <=Terms; i++)
        {

            double numerator = 4.0;
            double denominator = 2*i-1;
            double term  = (numerator/denominator);
            if (i%2 == 1)
                pi += term ;
            else
                pi -= term;

        }
        double error =(Math.PI-pi)/Math.PI*100;

        return pi;
    }

    public static int calcTargetPercent(double accuracyPercent)
    {
        double pi = 0; 
        int i;
        for ( i=1; i>=0; i++)
        {

            double numerator = 4.0;
            double denominator = 2*i-1;
            double term  = (numerator/denominator);
            if (i%2 == 0)
                pi -= term ;
            else
                pi += term;

            double error =((Math.PI-pi)/Math.PI)*100;
            if (Math.abs(Math(error) <= Math.abs(Math.ceil(accuracyPercent)))
            {
                break;
            }

        }
        return i;
    }
}
