/*  
 * ####: ###### ########
 * ##########: ###### #######
 * ########: ####.####
 * ####: ## ####### ####
*/ 

/*	#### #######		*/
import java.util.Scanner;

public class Quad

{ 
  public static void main(String[] args)

    {


                    double yinter, axsym, root1, root2, vertexx, vertexy;
                    
                    Scanner keyItin = new Scanner(System.in);
                    System.out.print("A: ");
                    double coa = keyItin.nextDouble();
                
                    System.out.print("B: ");
                    double cob = keyItin.nextDouble();
                    
                    System.out.print("C: ");
                    double coc = keyItin.nextDouble();


                    axsym = getAxissym(coa, cob);
                    System.out.printf("The axis of symmetry is x=%4.3f", axsym);
                    System.out.print("\n\n");
                    
                    
                    vertexx = findVertexx(coa, cob, coc, axsym);
                    vertexy = findVertexy(coa, cob, coc, axsym);
                    System.out.printf("The axis of symmetry is x=%4.3f", vertexx comma vertexy);
                    System.out.printf("\n\n");
                    
                yinter = coc;
                System.out.println("The y-intercept is " + yinter + " ");          
                System.out.printf("\n\n");                       
                          
                root1 = findRoot1(coa, cob, coc);
                root2 = findRoot2(coa, cob, coc);
                System.out.print("The roots of the equation are " + root1 + " and " + root2 + "");
                System.out.print("\n\n");
                       
          }      
              

        public static double getAxissym(double x, double y)
        
        {
                double axsym;
                
                axsym = (-1*y) / (2*x);
                
                return axsym;        
        }

        
        public static double findVertexx(double w, double x, double y, double z)
        
        {
            double vx;
            vx = z; 
                    
            return vx;   
        }
        
        public static double findVertexy(double w, double x, double y, double z)
        
        {
            double vy;

            vy = w*z + x*z + y;
            
            return vy;
        }
        
        public static double findRoot1(double x, double y, double z)
        
        {
            double x1;
            
            x1 = (-1*y) + (Math.sqrt( (y*y) - 4*(x)*(z) )/2*x);
            
            return x1;
                      
        }
       
         public static double findRoot2(double x, double y, double z)
        
        {
            double x2;
            
            x2 = (-1*y) - (Math.sqrt( (y*y) - 4*(x)*(z) )/2*x);
            
            return x2;
            
        }
            
}
     
     
    
      
        




    
    
   