
/**
 * @###### ## ### ###### ####, #########
 * @####### ####### #, ### #, ## ### ####
 */
public class Musician
{
    private String firstName;    	   
    private String lastName;	       
    private String primaryInst;        
	private String phoneNum;		   
	private String emailAddress;	   
	private int awardsNum;			   
    private boolean isUnderContract;   

    /**
     * Default Constructor
     */
    public Musician()
    {
    }

    /**
     * Second constructor which takes in all the parameters. 
     * @param fName     String value, first name of the musician
     * @param lName 	String value, last name of the musician
     * @param pInst   	String value, Primary instrument
     * @param pNum  	String value, Phone number
	 * @param email		String value, E-mail address
	 * @param awards	Integer value, Number of awards won
	 * @param contract	Boolean value, Whether the musician is under contract
     */
    public Musician(String fName, String lName, String pInst, String pNum, String email,
					int awards, boolean contract)
    {
        firstName = fName;
        lastName = lName;
        primaryInst  = pInst;
		phoneNum = pNum;
		emailAddress = email;
		awardsNum = awards;
        isUnderContract = contract;
		if ((firstName || lastName) == (null || " "))
			System.out.println("Names are not entered correctly.");
		
    }
    
    /**
     * MAIN METHOD
     */
    public void main(String [] args)
    {
        Course courseA = new Course("Introduction to Software Development 1", "COMP 1409",
                                      3, false);
        displayCourseInfo();
    }
    
    
    /**
     *@return Method returns the name of the course.
     */
    public String getFirstName()
    {
        return firstName;
    }
    
    /**
     *@return Method returns the number of the course.
     */
    public String getLastName()
    {
        return lastName;
    }
    
    /**
     *@return Method returns the credits given for the course.
     */
    public String getPrimaryInst()
    {
        return primaryInst;
    }
    
    /**
     *@return Method returns the boolean value for which the course is a requirement.
     */
    public String getPhoneNum()
    {
        return phoneNum;
    }
	
	public String getEmailAddress()
    {
        return emailAddress;
    }
	
	public int getAwardsNum()
    {
        return awardsNum;
    }
    
	public boolean getIsUnderContract()
    {
        return isUnderContract;
    }
	
	
    /**
     *@return VOID method that displays all the variable in a single screen
     */
    public void displayCourseInfo()
    {

			
        System.out.println("Musician: " + firstName + " " + lastName);
        System.out.println("Instrument: " + primaryInst);
        System.out.println("E-mail: " + emailAddress);
        System.out.println("Phone: " + phoneNum);
		System.out.println("Awards: " + awardsNum);
		if (isUnderContract == true)
			System.out.println("Under Contract?: YES");
		else if(isUnderContract == false)
			System.out.println("Under Contract?: NO"); 
    }
    
	
    /**
     *@VOID method that changes first name.
     */
	 
    public void setFirstName(String fName)
    {
        firstName = fName;
		if (firstName == null || " ")
			System.out.println("Please enter a valid first name.")
    }
    
	/**
     *@VOID method that changes last name.
     */
    public void setLastName(String lName)
    {
        lastName = lName;
		if (lastName == null || " ")
			System.out.println("Please enter a valid last name.")
    }
    
    /**
     *@VOID method that changes primary instrument.
     */
    public void setPrimaryInst(String pInst)
    {
        primaryInst = pInst;
    }
    
    /**
     *@VOID method that changes phone number.
     */
    public void setPhoneNum(String pNum)
    {
        phoneNum = pNum;
    }
    
    /**
     *@VOID method that changes isRequiredCourse variable.
     */
    public void setEmailAddress(String email)
    {
        emailAddress = email;
    }
	
	public void setAwardsNum(int awards)
    {
        awardsNum = award;
    }
	
    public void setIsUnderContract(boolean contract)
    {
        isUnderContract = contract;
    }
}