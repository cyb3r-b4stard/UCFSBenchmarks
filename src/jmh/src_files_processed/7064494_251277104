
/**
 *#### ####### ## ## ####### #### #### ## ## #### # ### #### #, #### ##
 * 
 * #### ##
 * ##/##/####*/
public class BaseConversions
{
  
	public static String conversion(int n, int base) {
		if (n < 0)
			throw new IllegalArgumentException("No negative number is allowed.");
		
		  if (base == 2)
		     return binary(n);
		  if (base == 8)
		     return octal(n);
		  if (base == 16)
		     return hexadecimal(n);
		   return null;
		}
	}
	
	private static String binary(int n) {
		String result = "";
		while(n >= 2) {
			result = n%2 + result;
			n = n/2;
		}
		return n + result;
	}
	
	private static String octal(int n) {
		String result = "";
		while(n >= 8) {
			result = n%8 + result;
			n = n/8;
		}
		return n + result;
	}
	
	private static String hexadecimal(int n) {
		String result = "";
		while(n >= 16) {
			result = hex(n%16) + result;
			n = n/16;
		}
		return hex(n) + result;
	}
	
	private static String hex(int n) {
		if (n < 10) {
			return n + "";
		} else if (n == 10) {
			return "A";
		} else if (n == 11) {
			return "B";
		} else if (n == 12) {
			return "C";
		} else if (n == 13) {
			return "D";
		} else if (n == 14) {
			return "E";
		} else {
			return "F";
		}
	}
}