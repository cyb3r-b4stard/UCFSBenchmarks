import java.util.ArrayList;

/**
 * # ##### ## #### ####### ## ##### #####.
 * 
 * @###### ##### #. ###### ### ####### #######
 * @####### ####.##.##
 */
public class MusicOrganizer
{
    private ArrayList<String> files;
        
    


    /**
     * Create a MusicOrganizer
     */
    public MusicOrganizer()
    {
        files = new ArrayList<>();
    }
    
    /**
     * Check valid index for the current state of collection
     */
    
    public void checkIndex(int index)
    {
        if(index >= 0 && index <= files.size()-1) {
            
        
        } 
        else {
            System.out.println("valid range is between 0 and -1");
        
        }
    }
    
    public  boolean validIndex(int index)
        {
        if(index >= 0 && index < files.size()-1) {
            return true;
            
        
        } 
        else {
            return false;
        
        }
    }
    
    /**
     * Add a file to the collection.
     * @param filename The file to be added.
     */
    public void addFile(String filename)
    {
        files.add(filename);
    }
    
    /**
     * Return the number of files in the collection.
     * @return The number of files in the collection.
     */
    public int getNumberOfFiles()
    {
        return files.size();
    }
   
    /**
     * List a file from the collection.
     * @param index The index of the file to be listed.
     */
    public void listFile(int index)
    {
        if(validIndex(index)) {
            String filename = files.get(index);
            System.out.println(filename);
        }
    }
    
    /**
     * Remove a file from the collection.
     * @param index The index of the file to be removed.
     */
    public void removeFile(int index)
    {
         if(validIndex(index)) {
            files.remove(index);
        }
    }
    
   /**
     * Include index of each file name in the listning
     */
    public void listAllFiles(){
        int position = 1;
        for(String filename : files){
            System.out.println(position + ": " + filename);
            position = position + 1;
     }
   }

 /**
 * List the names of files matching the given search string.
 */
  public void listMatching(String searchString) 
  {
      boolean ifFound = false;
    for(String filename : files) {
        if(filename.contains(searchString)) {
            System.out.println(filename);
            ifFound = true;
        }
} 
if (ifFound){
System.out.println("No filenames matched the search string");
}
}
/**
 * PLay samples of tracks by particular artist.
 */ public void listMatching(String searchString) 
  {
      boolean ifFound = false;
    for(String filename : files) {
        if(filename.contains(searchString)) {
            System.out.println(filename);
            ifFound = true;
        }
} 
if (ifFound){
System.out.println("No file names matched the search string");
}
}