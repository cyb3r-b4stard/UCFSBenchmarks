
/**
 * ##### # ########### ## ##### ###### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Driver
{
    private int x;

    /**
     * Constructor for objects of class Driver
     */
    public Driver()
    {
        x = 0;
    }

    /**
     * Laver to raflebægre, slår dem og printer udfaldet.
     */
    public static void test(){
        DieCup dieCup1 = new DieCup();
        DieCup dieCup2 = new DieCup();
        dieCup1.roll();
        dieCup2.roll();
        System.out.println("Summen af øjne i dieCup1 er: " + dieCup1.getEyes());
        System.out.println("Summen af øjne i dieCup2 er: " + dieCup2.getEyes());
        System.out.println("Summen af begge dieCups er: " + (dieCup1.getEyes() + dieCup2.getEyes()));

    }

    /**
     * Laver to raflebægre med henholdsvis 3 og 4 terninger, slår dem og printer udfaldet.
     */
    public static void test2(){
        DieCup dieCup1 = new DieCup(3);
        DieCup dieCup2 = new DieCup(4);
        dieCup1.roll();
        dieCup2.roll();
        System.out.println("Summen af øjne i dieCup1 er: " + dieCup1.getEyes());
        System.out.println("Summen af øjne i dieCup2 er: " + dieCup2.getEyes());
        System.out.println("Summen af begge dieCups er: " + (dieCup1.getEyes() + dieCup2.getEyes()));

    }

    public static void test2a(){
        DieCup dieCup1 = new DieCup(3);
        DieCup dieCup2 = new DieCup(4);
        int dieCup1Victory = 0;
        int dieCup2Victory = 0;
        for (int i = 0; i<100; i++){
            dieCup1.roll();
            dieCup2.roll();
            dieCup1.getEyes();
            dieCup2.getEyes();
            if (dieCup1.getEyes() > dieCup2.getEyes()) {
                dieCup1Victory += 1;
            }
            else {
                dieCup2Victory +=1;
            }
        }
        System.out.println("Cup 1 har vundet " + dieCup1Victory + " gange");
        System.out.println("Cup 2 har vundet " + dieCup2Victory + " gange");
    }

    public static void test2b(){
        DieCup dieCup1 = new DieCup(3);
        DieCup dieCup2 = new DieCup(4); 
        int Cup1 = 0;
        int Cup2 = 0;
        int NumberOfRounds = 0;
        while (Cup1 <= Cup2) {
            dieCup1.roll();
            dieCup2.roll();
            Cup1 = dieCup1.getEyes();
            Cup2 = dieCup2.getEyes();
            NumberOfRounds += 1;
        }
        if (NumberOfRounds == 1){
            System.out.println("Efter " + NumberOfRounds + " runde var DieCup1 større end DieCup2.");
        }
        else {
            System.out.println("Efter " + NumberOfRounds + " runder var DieCup1 større end DieCup2.");
        }
    }

    public static void test3() {
        DieCup dieCup1 = new DieCup(3);
        DieCup dieCup2 = new DieCup(4);
        DieCup dieCup3 = new DieCup(5);
        DieCup dieCup4 = new DieCup(7);
        int TotalSum = 0;
        for (int i = 0; i<100; i++) {
            dieCup1.roll();
            dieCup2.roll();
            dieCup3.roll();
            dieCup4.roll();
            int Sum = (dieCup1.getEyes() + dieCup2.getEyes() + dieCup3.getEyes() + dieCup4.getEyes());
            TotalSum = TotalSum + Sum;
        }
        int AvgSum = (TotalSum/100);
        System.out.println("Average sum of eyes: " + AvgSum)
    }
}