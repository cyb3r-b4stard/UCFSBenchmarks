import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.Set;
import java.util.Iterator;

class NobelPrizeWinners{
    private HashMap<String, PrizeWinner[]> winners;
    
    public NobelPrizeWinners(){
        String[] WinnersPhys2009  = new PrizeWinner[3];
        String[] WinnersChem2009  = new PrizeWinner[3];
        String[] WinnersMed2009   = new PrizeWinner[3];
        String[] WinnersLit2009   = new PrizeWinner[3];
        String[] WinnersPeace2009 = new PrizeWinner[3];
        String[] WinnersEco2009   = new PrizeWinner[3];
        

        String[] WinnersPhys2008  = new PrizeWinner[3];
        String[] WinnersChem2008  = new PrizeWinner[3];
        String[] WinnersMed2008   = new PrizeWinner[3];
        String[] WinnersLit2008   = new PrizeWinner[3];
        String[] WinnersPeace2008 = new PrizeWinner[3];
        String[] WinnersEco2008   = new PrizeWinner[3];
        
        String[] WinnersPhys2007  = new PrizeWinner[3];
        String[] WinnersChem2007  = new PrizeWinner[3];
        String[] WinnersMed2007   = new PrizeWinner[3];
        String[] WinnersLit2007   = new PrizeWinner[3];
        String[] WinnersPeace2007 = new PrizeWinner[3];
        String[] WinnersEco2007   = new PrizeWinner[3];
        
        String[] WinnersPhys2006  = new PrizeWinner[3];
        String[] WinnersChem2006  = new PrizeWinner[3];
        String[] WinnersMed2006   = new PrizeWinner[3];
        String[] WinnersLit2006   = new PrizeWinner[3];
        String[] WinnersPeace2006 = new PrizeWinner[3];
        String[] WinnersEco2006   = new PrizeWinner[3];
        
        String[] WinnersPhys2005  = new PrizeWinner[3];
        String[] WinnersChem2005  = new PrizeWinner[3];
        String[] WinnersMed2005   = new PrizeWinner[3];
        String[] WinnersLit2005   = new PrizeWinner[3];
        String[] WinnersPeace2005 = new PrizeWinner[3];
        String[] WinnersEco2005   = new PrizeWinner[3];
        
        String[] WinnersPhys2004  = new PrizeWinner[3];
        String[] WinnersChem2004  = new PrizeWinner[3];
        String[] WinnersMed2004   = new PrizeWinner[3];
        String[] WinnersLit2004   = new PrizeWinner[3];
        String[] WinnersPeace2004 = new PrizeWinner[3];
        String[] WinnersEco2004   = new PrizeWinner[3];
        
        String[] WinnersPhys2003  = new PrizeWinner[3];
        String[] WinnersChem2003  = new PrizeWinner[3];
        String[] WinnersMed2003   = new PrizeWinner[3];
        String[] WinnersLit2003   = new PrizeWinner[3];
        String[] WinnersPeace2003 = new PrizeWinner[3];
        String[] WinnersEco2003   = new PrizeWinner[3];
        
        WinnersPhys2009[0] = "Charles K.", "Kao";
        
        winners = new HashMap<String, PrizeWinner[]>();
        
        
        
        winners.put("2009 Physics", new PrizeWinner[] {new PrizeWinner("Charles K.", "Kao"),
                                                       new PrizeWinner("Willard S.", "Boyle"),
                                                       new PrizeWinner("George S.", "Smith")});
                                                         
        winners.put("2009 Chemistry", new PrizeWinner[] {new PrizeWinner("Venkatraman", "Ramakrishnan"),
                                                         new PrizeWinner("Thomas A.", "Steitz"),
                                                         new PrizeWinner("Ada E.", "Yonath")});
                                                         
        winners.put("2009 Medicine", new PrizeWinner[]  {new PrizeWinner("Elizabeth H.", "Blackburn"), 
                                                         new PrizeWinner("Carol W.", "Greider"), 
                                                         new PrizeWinner("Jack W.", "Szostak")});
                                                         
        winners.put("2009 Literature", new PrizeWinner[]{new PrizeWinner("Herta", "Müller")});

        winners.put("2009 Economics", new PrizeWinner[] {new PrizeWinner("Elinor", "Ostrom"), 
                                                         new PrizeWinner("Oliver E.", "Williamson")});


        
        winners.put("2008 Physics", new PrizeWinner[]   {new PrizeWinner("Yoichiro", "Nambu"), 
                                                         new PrizeWinner("Makoto", "Kobayashi"), 
                                                         new PrizeWinner("Toshihide", "Maskawa")});

        winners.put("2008 Chemistry", new PrizeWinner[] {new PrizeWinner("Osamu", "Shimomura"), 
                                                         new PrizeWinner("Martin", "Chalfie"),
                                                         new PrizeWinner("Roger Y.", "Tsien")});

        winners.put("2008 Medicine", new PrizeWinner[]  {new PrizeWinner("Harald", "zur Hausen"), 
                                                         new PrizeWinner("Françoise", "Barré-Sinoussi"), 
                                                         new PrizeWinner("Luc", "Montagnier")});

        winners.put("2008 Literature", new PrizeWinner[]{new PrizeWinner("Jean-Marie Gustave", "Le Clézio")});

        winners.put("2008 Peace", new PrizeWinner[]     {new PrizeWinner("Martti", "Ahtisaari")});

        winners.put("2008 Economics", new PrizeWinner[] {new PrizeWinner("Paul", "Krugman")});


        
        winners.put("2007 Physics", new PrizeWinner[]   {new PrizeWinner("Albert", "Fert"), 
                                                         new PrizeWinner("Peter", "Grünberg")});

        winners.put("2007 Chemistry", new PrizeWinner[] {new PrizeWinner("Gerhard", "Ertl")});

        winners.put("2007 Medicine", new PrizeWinner[]  {new PrizeWinner("Mario R.", "Capecchi"), 
                                                         new PrizeWinner("Sir Martin J.", "Evans"), 
                                                         new PrizeWinner("Oliver", "Smithies")});

        winners.put("2007 Literature", new PrizeWinner[]{new PrizeWinner("Doris", "Lessing")});

        winners.put("2007 Peace", new PrizeWinner[]     {new PrizeWinner("Intergovernmental Panel on Climate Change (IPCC)", ""), 
                                                         new PrizeWinner("Albert Arnold (Al)", "Gore Jr.")});

        winners.put("2007 Economics", new PrizeWinner[] {new PrizeWinner("Leonid", "Hurwicz"), 
                                                         new PrizeWinner("Eric S.", "Maskin"), 
                                                         new PrizeWinner("Roger B.", "Myerson")});


        
        winners.put("2006 Physics", new PrizeWinner[]   {new PrizeWinner("John C.", "Mather"), 
                                                         new PrizeWinner("George F.", "Smoot")});

        winners.put("2006 Chemistry", new PrizeWinner[] {new PrizeWinner("Roger D.", "Kornberg")});

        winners.put("2006 Medicine", new PrizeWinner[]  {new PrizeWinner("Andrew Z.", "Fire"), 
                                                         new PrizeWinner("Craig C.", "Mello")});

        winners.put("2006 Literature", new PrizeWinner[]{new PrizeWinner("Orhan", "Pamuk")});

        winners.put("2006 Peace", new PrizeWinner[]     {new PrizeWinner("Muhammad", "Yunus"), 
                                                         new PrizeWinner("Grameen Bank", "")});

        winners.put("2006 Economics", new PrizeWinner[] {new PrizeWinner("Edmund S.", "Phelps")});


        
        winners.put("2005 Physics", new PrizeWinner[]   {new PrizeWinner("Roy J.", "Glauber"), 
                                                         new PrizeWinner("John H.", "Hall"), 
                                                         new PrizeWinner("Theodor W.", "Hänsch")});

        winners.put("2005 Chemistry", new PrizeWinner[] {new PrizeWinner("Yves", "Chauvin"), 
                                                         new PrizeWinner("Robert H.", "Grubbs"), 
                                                         new PrizeWinner("Richard R.", "Schrock")});

        winners.put("2005 Medicine", new PrizeWinner[]  {new PrizeWinner("Barry J.", "Marshall"), 
                                                         new PrizeWinner("J. Robin", " Warren")});

        winners.put("2005 Literature", new PrizeWinner[]{new PrizeWinner("Harold", "Pinter")});

        winners.put("2005 Peace", new PrizeWinner[]     {new PrizeWinner("International Atomic Energy Agency (IAEA)", ""), 
                                                         new PrizeWinner("Mohamed", "ElBaradei")});

        winners.put("2005 Economics", new PrizeWinner[] {new PrizeWinner("Robert J.", "Aumann"), 
                                                         new PrizeWinner("Thomas C.", "Schelling")});


      
        winners.put("2004 Physics", new PrizeWinner[]   {new PrizeWinner("David J.", "Gross"), 
                                                         new PrizeWinner("H. David", "Politzer"), 
                                                         new PrizeWinner("Frank", "Wilczek")});

        winners.put("2004 Chemistry", new PrizeWinner[] {new PrizeWinner("Aaron", "Ciechanover"), 
                                                         new PrizeWinner("Avram", "Hershko"), 
                                                         new PrizeWinner("Irwin", "Rose")});
 
        winners.put("2004 Medicine", new PrizeWinner[]  {new PrizeWinner("Richard", "Axel"), 
                                                         new PrizeWinner("Linda B.", "Buck")});

        winners.put("2004 Literature", new PrizeWinner[]{new PrizeWinner("Elfriede", "Jelinek")});

        winners.put("2004 Peace", new PrizeWinner[]     {new PrizeWinner("Wangari Muta", "Maathai")});

        winners.put("2004 Economics", new PrizeWinner[] {new PrizeWinner("Finn E.", "Kydland"), 
                                                         new PrizeWinner("Edward C.", "Prescott")});


     
        winners.put("2003 Physics", new PrizeWinner[] {new PrizeWinner("Alexei A.", "Abrikosov"), 
                                                        new PrizeWinner("Vitaly L.", "Ginzburg"), 
                                                        new PrizeWinner("Anthony J.", "Leggett")});

        winners.put("2003 Chemistry", new PrizeWinner[] {new PrizeWinner("Peter", "Agre"), 
                                                        new PrizeWinner("Roderick", "MacKinnon")});

        winners.put("2003 Medicine", new PrizeWinner[] {new PrizeWinner("Paul C.", "Lauterbur"), 
                                                        new PrizeWinner("Sir Peter", "Mansfield")});

        winners.put("2003 Literature", new PrizeWinner[] {new PrizeWinner("John M.", "Coetzee")});

        winners.put("2003 Peace", new PrizeWinner[]     {new PrizeWinner("Shirin", "Ebadi")});

        winners.put("2003 Economics", new PrizeWinner[] {new PrizeWinner("Robert F.", "Engle III"), 
                                                         new PrizeWinner("Clive W.J.", "Granger")});
                                                                                                    
                                                        
                                                       
    }
    
    public int getNumberOfWinners(){
        int total = 0; 
        
        Set<String> keys = winners.keySet();
        
        for(String key: keys){
            PrizeWinner[] prizeWinner = winners.get(key);
            for (int i = 0; i < prizeWinner.length; i++) { 
                if(prizeWinner != null){ 
                    total++;
                }
            }
        }
        return total; 
    }


    
    public int getNumberOfWinnersForYear(int year, String prize){

        Set<String> key = winners.keySet();


        for (String keys : keys) {
            if (key.equalsIgnoreCase(year) && key.equalsIgnoreCase(prize)) {
                PrizeWinner[] winner = winners.get(key);

                for (int i = 0; i < winner.length; i++) {
                   
                }
            }
        }

      
    }
    
    public void displayAllYearsAndWinners(){
        Set<String> keys = winners.keySet();
        Iterator<String> it = keys.iterator();
        while(it.hasNext()){
            String key = it.next();
            System.out.println(key);
        }
    }
}