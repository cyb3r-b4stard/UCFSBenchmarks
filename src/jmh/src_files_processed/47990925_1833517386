
/**
 * ##### # ########### ## ##### ############### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class FractionCounter
{
    private double[] holderval;
    private double[] numray;
    private double[] denray;
    private int[] counter;
    private int place = 1;
    public FractionCounter(int length){
        holderval = new double[length];
        numray = new double[length];
        denray = new double[length];
        counter = new int[length];
    }
    public void remake(int length){
        holderval = new double[length];
        numray = new double[length];
        denray = new double[length];
        counter = new int[length];
    }
    public void addFraction(double num, double den){
        double value = num / den;
        boolean decide = false;
        for(int holdpoint = 0; holdpoint < place; holdpoint++){
            if(value == holderval[holdpoint]){
                counter[holdpoint]++;
                decide = true;
                if(numray[holdpoint] > num && denray[holdpoint] > den){
                    numray[holdpoint] = num;
                    denray[holdpoint] = den;
                }
            }
        }
        if(!decide){
            numray[place] = num;
            denray[place] = den;
            holderval[place] = value;
            counter[place]++;
            place++;
        }
    }
    public String toString(double num, double den){
        boolean numint = false;
        boolean denitn = false;
        int retpos = -1;
        double value = num / den;
        for(int holdpoint = 0; holdpoint < place; holdpoint++){
            if(value == holderval[holdpoint]){
                retpos = holdpoint;
            }
        }
        if(retpos < 0){
            return "Fraction not found";
        }
        else{
            if(numray[
            
        }
    }
}