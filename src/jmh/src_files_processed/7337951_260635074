public class BinaryTree<K extends Comparable<K>, V>{ 
  
  private K key;
  private V value;
  private BinaryTree<K,V> left;
  private BinaryTree<K,V> right;
  
  /**
   * This class is a binary tree-based collection for key-value-pairs.
   */
  public BinaryTree(K key, V value){
  }
  
  public void put(K key, V value) {
      if (this == null)
      {
          this.key = key;
          this.value = value;
      }
      if (this.key.getKey() < key.getKey())
      {
          left = BinaryTree(key, value);
      }
      else
      {
          right = BinaryTree(key, value);
      }
  }

  public V get(K key) {
      if (this.key.equels(key))
      {
          return this.value;
      }
      else if ()
      return null;
  }
}
class K
{
    private int x;

    /**
     * Constructor for objects of class V
     */
    public K(int s)
    {
        x = s;
    }
    public int getKey()
    {
        return x;
    }
}