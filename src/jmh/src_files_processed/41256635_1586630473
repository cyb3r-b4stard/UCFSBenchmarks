/**
 * ####### #### #####, ### ############# #########, #.#. ### ##### ####### 
 * ############ ### #####. ### ##### ### ######## ##########, #.#. ### #### 
 * ### #### ######### ###### ### ######## #########. ########## ###### ### ######## ## ###
 * ##### ######## ###### ##### #########. 
 * @###### (#### ########) 
 * @####### (##.##.####)
 */
public class StringSet
{
    /** Anzahl der Groeße der Menge*/
    private String [] menge;
    /** Zaehlt die elemente in der Menge*/
    private int elemente;

    /**
     * Erzeugt eine Mengen mit einer festen Anzahl von Elementen. 
     * Wenn die Anzahl der Elemente kleiner als 2 ist, so wird 
     * die Groesse der Menge automatisch auf 2 gesetzt. 
     * Wenn die Anzahl gleich 2 ist oder groesser als 2,so wird 
     * der eingebenen Wert für die Groesse der Menge eingesetzt.  
     * 
     * @param eingabeElemente Die feste Anzahl der Elemente in der Menge (Groesse der Menge).
     */
    public StringSet(final int eingabeElemente)
    {
        if (eingabeElemente < 2) {
            menge = new String [2];
        } else {
            menge = new String [eingabeElemente];
        }

        elemente = 0;
    }

    /** Fügt eine Element (Zeichenkette) in die Menge. Falls null
     * eingeben wird oder die Menge keine Elementer mehr aufnehmen 
     * kann,so bleibt die Menge unverändert. Außerdem werden Elemente 
     * die bereits hinzugefuegt wurden nicht mehr hinzugefuegt. Es 
     * wird false zurueckgeben.Wenn die Menge jedoch noch Elemente 
     * (Zeichenkette) aufnehmen kann oder noch kein Element mit dem 
     * gleichen Wert hinzugefuegt wurden, so werden diese Elemente in 
     * die Menge hinzugefügt. Es wird true zurueckgeben. Eine Zeichenkette,
     * die nur aus Leerzeichen besteht, kann nicht eingefügt werden.
     * 
     * @param value Das Element (Zeichenkette), welches in die Menge hinzugefuegt werden soll.
     */

    public boolean add(String value)
    {

        if (value == null|| elemente >= menge.length|| value.trim().isEmpty()) {
            return false; 
        }

        for (int i = 0; i < menge.length; i++) {
            if ( menge[i]== value) {
                return false;
            } 
        }
        menge [elemente++]= value;
        return true; 
    }

    /** Entfernt Elemente (Zeichenkette) aus der Menge. Wenn das 
     * einegeben Element in der Menge vorhanden ist, so wird es 
     * aus der Menge entfernt. Es wird true zurueckgegeben.
     * Wenn jedoch das eingebene Element nicht in der Menge 
     * vorhanden ist oder der Wert null einegeben wird, so bleibt
     * die Menge unveraendert. Es wird false zurueckgeben.
     * 
     * @param value Das Element (Zeichenkette), welches aus der Menge entfernt werden soll. 
     */ 
    public boolean remove(String value)
    {
        for (int i= 0; i<menge.length; i++) { 

            if (value == menge[i] & menge[i]!= null) {
                menge [i] = null;
                elemente = elemente-1;
                return true; 
            } 

        }  

        for (int i= 0;i<menge.length;i++) {

            if(menge [i] == null|| menge [i]!= value||value.trim().isEmpty()) {
                return false;
            }

        }
        return false;
    }

    /**Überprueft ob das Element in der Menge vorhanden ist. 
     * Ist das einegebene Element (Zeichenkette) in der Menge 
     * vorhanden, so wird true zurueckgeben. Ist das eingebene
     * Element (Zeichenkette) nicht in der Menge vorhanden oder 
     * den Wert null hat, so wird false zurueckgeben.
     * 
     * @param value Das Element (Zeichenkette), welches überpfueft werden soll ob es in der Menge vorhanden ist. 
     */
    public boolean contains(String value)
    { 
        for ( int i= 0; i<menge.length; i++) {
            if (menge[i]== value& menge[i]!= null) {
                return true;
            }
        }
        return false;

    }

    /** Kommentar To String */
    public String toString() 
    {

        for( int i=0; i<menge.length; i++) {

            if (menge[i]!= null ) {
                String detail = return menge [i]+",";

            }
            return String detail;

        } 
        return menge[elemente];
    }

    /**Gibt die Anzahl der Elemente, die sich aktuell in der Menge befinden.
     *
     *@return Die Anzahl der Elemente, die sich aktuell in der Menge befinden. 
     */
    public int getSize(){
        return elemente;
    }
}
