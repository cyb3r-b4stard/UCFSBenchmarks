
import acm.graphics.*;
import acm.program.*;
import acm.gui.*; 
import acm.util.*; 
import acm.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.applet.*;

/** 
 * @###### ##### #######, #####
 * @###### ###### #############, (#### #### # ### ######)
 * @####### #/##/####
 */

public class NewGTurtle extends GTurtle
{
    /*
     * Default constructor - creates the object with default values
     */
    public NewGTurtle()
    {
        super();
    }

    /**
     * principal method that call the others drawings. (req1)
     */ 
    public void demoDrawings()
    {

    }

    /**
     * Method that draw a rectangle using the coordinates x, y so set and width and height to ajust the size. (req 2)
     * @param x that mark the x coordinate.
     * @param y that mark the y coordinate.
     * @param width that mark the length of the window on x coordinate.
     * @param height that mark the length of the window on y coordinate.
     */   
    public void drawRect(GTurtle turtle, double x, double y, double width, double height, boolean filled, double angle)
    {
        final TURN = 90.0;
        if (filled == true)
        {
            this.drawFilledRect(turtle, width, height, TURN, angle);
        }
        else{
            for(int a = 0; a < 2 ; a++)
            {
                this.completeRect(turtle, width, height, TURN);
            }
        }
    }

    private void drawFilledRect(GTurtle turtle, double width, double height, double turn, double angle)
    {
        if(width > 0 && height > 0)
        {
            this.completeRect(turtle, width, height, turn);
            this.recolocation(turtle, width, height, turn, angle);
        }
    }

    private void completeRect(GTurtle turtle, double width, double height, double turn)
    {
        for(int a = 0; a < 2 ; a++)
        {
            this.forward(width);
            this.right(turn);
            this.forward(height);
            this.right(turn);
        }
    }

    private void recolocation(GTurtle turtle, double width, double height, double turn, double angle)
    {
        this.right(angle);
        this.forward(1);
        this.setDirection(0);

        this.drawFilledRect(turtle, width -2, height -2, turn, angle);
    }

    public void randomSquares(int minNSquares, int maxNSquares, int minSize, int maxSize)
    {
    }
    
    private void simpleSquare(GTurtle turtle, int minSize, int maxSize, double turn)
    {
        for(int a = 0; a < 4 ; a++)
        {
            this.forward(minSize);
            this.right(turn);
        }
    }
} 