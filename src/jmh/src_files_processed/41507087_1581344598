
/**
 * ##### # ########### ## ##### ######### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class StringSet
{
    private int x;
    private int capazity;
    private String characterString[];
    private int maxNum;
    private int numStrings;

    /**
     * Constructor for objects of class StringSet
     */
    public StringSet(int capazity)
    {
        if (capazity > 1){
            characterString = new String [capazity];
            maxNum = capazity;
        }
        if (capazity < 2){
            characterString = new String [2];
            maxNum = 2;
        }
    }

    /**
     * A method to add a Value
     * 
     * @param  value. The String that should be added
     * @return true, if the Value can be added
     * @return false, if the value cannot be added 
     */
    public boolean add(String value){
        if(contains(value) == true){
            return false; 
        }
        if(numStrings == maxNum){
            return false;
        }	
        else {
            characterString[numStrings ++] = value;
            return true;
        }
    }

    public boolean remove(String value){
        if(value == null){
            return false;
        }	
        for(int s = 0; s < maxNum; s ++) {
            if(characterString[s] == value){
                characterString[s] = null;
                numStrings --;
                for(int c = s;c < maxNum; c++){
                    if(c < maxNum -1){
                        characterString[c] = characterString[c+1];
                        return true;	
                    } else{
                        characterString[s] = null;
                    }
                }
            }
        }
        return false;
    }

    /**
     * A method to check if the Value is in characterString
     * 
     * @param value, the string that is supposed to be in characterString
     * @return true, if it's in the String
     * @return false, if it isn't in the string
     */

    public boolean contains(String value){
        if(value == null){
            return false;
        }	
        for(int s = 0; s < maxNum - 1; s ++) {
            if(characterString[s] == value){
                return true;
            }
        }
        for
        return false;
    }
}