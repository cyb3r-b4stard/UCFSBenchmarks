

/* #### ### #### ### ########## # (####)
 * ####: ####### ########## 
 * ########:##########
 * ##:
 */

import ecs100.*;

/** ####### ### ########### #### ## ######## # #######*/

public class ShippingCalculator{

    public static final double handlingCharge = 1.60;    
    public static final double sizeRate = 300;           
    public static final double weightRate = 1.50;        

    /** Constructor, sets up the user interface */
    public ShippingCalculator(){
        UI.initialise();
        UI.addButton("Core", this::calculateShippingCore ); 
        UI.addButton("Completion", this::calculateShippingCompletion );
        UI.addButton("Quit", UI::quit);
    }

    /** Calculates and prints cost of shipping a package.)
     */
    public void calculateShippingCore(){
        double sizeheight = UI.askDouble("Height of the package? (meters)");           
        double sizewidth = UI.askDouble("Width of the package? (meters)");             
        double sizedepth = UI.askDouble("Depth of the package? (meters)");             
        double weight = UI.askDouble("Weight of the package? (kilograms)");            
        double distance = UI.askDouble("Distance package travelling? (kilometers)");   
        double sizecost = sizeheight * sizewidth * sizedepth * sizeRate;               
        double weightcost = weight * weightRate;                                       
        double zone = (distance / 100);                                                
        int zoneint =zone;                                                        
        UI.println("Price for size: $" + sizecost);                                    
        UI.println("Price for weight: $" + weightcost);                                
        UI.println("Zone: " + zoneint);                                                
        UI.println("Total price: $" + ((sizecost + weightcost + handlingCharge) * zoneint)); 

    }
    /** Calculates and prints cost of shipping a collection of packages.
     */
    public void calculateShippingCompletion(){
        /*# YOUR CODE HERE */

    }

}