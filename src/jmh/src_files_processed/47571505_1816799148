import java.util.Arrays;

public class SkyView {
    /** A rectangular array that holds the data representing a rectangular array of scan data */
    private double[][] view;
    
    /** Constructs a SkyView object from a 1-dimensional array of scan data.
    *   @param numRows the number of rows represented in a view
    *       Precondition: numRows>0
    *   @param numCols the number of columns represented in the view
    *       Precondition: numCols>0
    *   @param scanned the scan data received from the telescope, stored in telescope order.
    *       Precondition: scanned.length == numRows * numCols
    *   Postcondition: view has been created as a rectangular 2-dimensional array
    *               with numRows rows and numCols columns and the values in scanned
    *               have been copied to view and are ordered as in the original rectangular area of sky.
    */
    public SkyView(int numRows, int numCols, double[] scanned)
    {
        int slength = scanned.length;
        double[][] view = new double[numRows][numCols]
        int index = 0;
        for(int r  = 0; r < numRows; r++)
        {
            if(r % 2 ==0)
            {
                for(int c = 0; c < numCols; c++)
                {
                    view[r][c] = scanned[index];
                    scanned++;
                }
            }
            else
            {
                for(int c = numCols - 1; c >= 0; c--)
                {
                    view[r][c] = scanned[index];
                    scanned++;
                }
            }
        }
    
    
    
    
    
    
    }
    
    /** Returns the average of the values in a rectangular section of view.
    *   @param startRow the first row index of the section
    *   @param endRow the last row index of the section
    *   @param startCol the first column index of the section
    *   @param endCol the last column index of the section
    *   Precondition: 0 <= startRow <= endRow < view.length
    *   Postcondition: 0 <= startCol <= endCol < view[0].length
    *   @return the average of the values in the specified section of the view
    */
    public double getAverage(int startRow, int endRow, int startCol, int endCol) 
    {
    
    
    
    
    
    
    }
    
    
    
    
    /** This method is used solely for grading purposes.  Do not change. */
    public double[][] getView() {
    return view;
    }
    
}