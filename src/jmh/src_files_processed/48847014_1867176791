
/* #### ### ####### - ######
 * ####:
 * ########:
 * ##:
 */

import ecs100.*;
import java.awt.Color;
import java.util.*;

/** ###### ########## # ##### ###### #### ##### ####### ### ##### ## # ##### #####.
 *  ### ###### #### ##### ### ####### ######## (# ### ###### ##### ### #####) ### ### #####
 *  (##### ## ### #### ## ### #### ## ### ########## ########## #### ## #### #### ## #### ####) 
 *
 *  #### #### ### ####() ###### ## ######, ## #### #### ### ####.
 *  ## #### #### ####### ## ### ###### ## ### #####.
 *  ## ### ##### ###### ###_#####, #### ## #####'# #### ## ####.
 *  ## ## ## ##### ###### #### ###_#####, #### ## #### #### ####### ### #####.
 *    ### ###### ## ## #####, ### #### ## #### #### ####### ### #####
 *  ## ## ## ##### ###### #### ###_#####, #### ## #### #### #######
 *    ### ###### ## ## #####, ### ###### ## #### ####
 *  ## ### ###### ## #, #### ## ###### #### ### ####.
 * 
 *  ###### ################, # ###### #### ### #### ###### #### #### ## #####.
 *  ### ########## ####### #### #### ### ####() ###### ## ## ####.
 *  
 */

public class Glider{

    public static final double HORIZ_SIZE = 48;   
    public static final double VERT_SIZE = 12;    

    public static final double MID_SPEED = 6;  

    private double xPos; 
    private double height; 
    private double xSpeed; 
    private String imageFile = "glider.png"; 

    /**
     * Construct a new Glider object.
     * Parameters are the initial height above the ground, and
     * the initial speed (ie, the horizontal step size). Positive is to the right
     * Note, all gliders start at horizontal position 0
     * Stores the parameters into fields,
     */
    public Glider(double ht, double sp){
        this.height = ht;
        this.xSpeed = sp;

    }
    /** Move the glider one step:
     * If the glider is on the ground, then it should not move at all.
     * Otherwise, it moves the the right, and depending on its speed, also changes its height
     * If it has gone below the ground, then put it on the ground
     * DO NOT REDRAW THE GLIDER!!!
     */
    public void move(){
        this.xPos = this.xPos + this.xSpeed;

        if((this.height == 0)||(this.height<0)){
            this.height = 0;
            this.xSpeed = 0;
            this.xPos = this.xPos;
        }
        else if(this.height => GliderSimulation.CEILING){
            
        }

        if(this.xSpeed > MID_SPEED){
            this.height = this.height + this.xSpeed;
        }
        else if(this.xSpeed < MID_SPEED){
            this.height = this.height - this.xSpeed;
        }
        else if (this.xSpeed == MID_SPEED){
            this.height = this.height;
        }

    }

    /**
     * Draw the glider in its current position.
     * Note that you will need to convert from the height of the glider above the floor into
     * a distance down from the top of the screen.
     * You may use the image file  "glider.png"
     */
    public void draw(){
        double y = (GliderSimulation.FLOOR - this.height - VERT_SIZE); 
        String filename = this.imageFile;
        UI.drawImage(filename, this.xPos, y, HORIZ_SIZE, VERT_SIZE); 

    }

    /** Return the current x position of the glider */
    public double getX(){
        return this.xPos;   
    }

    /** Return the current height of the glider */
    public double getHeight(){
        return this.height;   
    }

    /** Change the speed of the glider */
    public void setSpeed(double sp){
        this.xSpeed = sp;

    }

    /** A method to help test your code:
     */
    public static void test(){
        double tooFar = 400;
        double tooHigh = 300;
        UI.clearPanes();
        double speed = Math.random()*15;
        UI.printf("Creating a glider, speed=%.2f\n",speed);
        Glider glider = new Glider(100, speed);
        UI.setColor(Color.black);

        UI.drawRect(0, GliderSimulation.FLOOR-tooHigh, tooFar, tooHigh);

        glider.draw();

        UI.println("Moving the glider.");

        int step=0;
        while (step<300) {
            glider.move();

            UI.clearGraphics();
            glider.draw();
            UI.drawRect(0, GliderSimulation.FLOOR-tooHigh, tooFar, tooHigh);

            if (glider.getX()> tooFar){
                UI.println("Glider TOO FAR: "+ glider.getX());
                break;
            }
            if (glider.getHeight() >= tooHigh) {
                UI.println("Too High: "+ glider.getHeight() + ", slowing down");
                glider.setSpeed(3);
            }
            if (glider.getHeight() == 0) {
                UI.println("On ground. Shouldn't move any more");
                if (step>150) { break; }
            }

            UI.sleep(40);
            step++;
        }
        UI.println("Test completed.");
    }

}