
/**
 *  ########### ##### ############ #### ##### ########## ### ### ######
 *  #### ##### ########### ###### ## ### ############# ########. 
 * 
 * @###### ## 
 * @####### (##.##.##
 */
public class TANZROBOTER extends ROBOTER
{
    
    /**
	 * Erzeugen eines neuen Tanzroboters mit vorgegebener Startposition 
	 * 
	 * Vorher muss ein Objekt der Klasse WELT angelegt werden, in der der Roboter lebt. 
	 * 
	 * @param Startposition (startX, startY) mit 1..WeltBreite bzw. 1..WeltLänge 
	 * @param Startblickrichtung 'S','W','N','O' 
	 * @param Referenz auf die Welt in der der Roboter leben soll 
	 * 
	 */
	
    public TANZROBOTER(int startX, int startY, char startBlickrichtung, WELT inWelt)
    {
        super(int startX, int startY, char startBlickrichtung, WELT inWelt);
    }

   /**
	 * Erzeugen eines neuen Tanzroboters aufgrund der Einstellungen in einer Karolwelt-Datei 
	 * 
	 * Vorher muss ein Objekt der Klasse WELT angelegt werden, in der der Roboter leben soll. 
	 * Wenn dieses Weltobjekt aus einer Karolwelt-Datei geladen wurde, dann werden 
	 * die dortigen Robotereinstellungen verwendet, sonst ein Default-Roboter 
	 * mit (1,1) und Blickrichtung 'S' 
	 * 
	 * @param Referenz auf die Welt in der der Roboter leben soll
	 * 
	 */
	public TANZROBOTER(WELT inWelt)
	{
	}
	
	
    /** Schritt nach links und anschließend
     * Blick in die ursprüngliche Richtung.
     */
    
    public void SchrittLinks()
      {
        
      }
      
       /** Schritt nach rechts und anschließend
     * Blick in die ursprüngliche Richtung.
     */
    
    public void SchrittRechts()
      {
        
      }
      
       /** Schritt zurück  und anschließend
     * Blick in die ursprüngliche Richtung.
     */
    
    public void SchrittRueck()
      {
        
      }
      
       /** Schritt nach vorne 
     */
    
    public void SchrittVor()
      {
        
      }
      
    
    }
