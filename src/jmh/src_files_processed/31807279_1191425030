
/* #### ### #### ### ########## # 
 * ####:
 * ########:
 * ##:
 */

import ecs100.*;
import java.awt.Color;
import java.util.Scanner;

/** ### ####### ######## ### ####### ### ######### ### ######## ## ### ##### ## ##### ##### ## # ##### #### ### ###### ## # ###.
 *  ##### ### ####### ###### ##### ### ##### ##### ##### #### # #### ### ## ########## ##: 
 *    ### ####### ### ### ####### ##### ##### ##### ## ### ##### ###### ### ###.
 *    ### ####### ##### ##### ##### ###### ### ###.
 *
 *  ### ####### ### ### #######.  #### #### #### # ######## ## ###### ####
 *  ### #### (####### ### ######## ######).
 *  ### ###### # ###### ##### ### ######; ### ##### ##### # #####.
 */
public class PowerAnalyser{

    /**
     * analyseLevels reads a sequence of levels from the user  and prints out
     *    maximum, minimum, and average level.
     *    
     * The sequence is terminated by any word (non-number) such as "done" or "end".
     * All the levels are integers between 0 and 8000. 
     * The method will need variables to keep track of various quantities, all of which 
     * need to be initialised to an appropriate value.
     * It will need a loop to keep reading the levels until there isn't an integer next.
     * [Core]
     *   - There is guaranteed to be at least one level,
     *   - Print the maximum, minimum, and average level
     *   - Hint, keep track of the sum of the levels using a variable of type double
     */
    public void analyseLevels() {
        UI.clearText();
        String level= UI.askString("level");

        Scanner scen = new Scanner(level);
        int max=0;
        int min=0;
        int ave=0;
        int sum=0;
        int num=0;

        while(true){
            int a = UI.nextInt();
            if(num==0){
                max=a;
                min=a;
                sum=a;
            }
            if(a>max){
                max=a;
            }
            if(a<max){
                min=a;

            }
            sum = sum +a;
            ave = sum/ num;

            num++;
        }
        UI.println(max,min.ave);

        /*# YOUR CODE HERE */

    }

    /**
     * Reads a sequence of levels (integers) from the user (using Scanner
     * and the terminal window) and plots a bar graph of them, using narrow 
     * rectangles whose heights are equal to the level.
     * The sequence is terminated by any word (non-number) such as "done" or "end".
     * The method may assume that there are at most 24 numbers.
     * The method will need a loop to keep reading the levels until there isn't a number next.
     *  Each time round the loop, it needs to read the next level and work out where
     *  to draw the rectangle for the bar. 
     * [Completion]
     *   - The method should work even if there were no readings for the day.
     *   - Any level greater than 8000 should be plotted as if it were just 8000, putting an
     *         asterisk ("*") above it to show that it has been cut off.
     *   - Draws a horizontal line for the x-axis (or baseline) without any labels.
     * [Challenge:] 
     *   - The graph should also have labels on the axes, roughly every 50 pixels.
     *   - Make the method ask for a maximum level first, then scale the y-axis and values 
     *     so that the largest numbers just fit on the graph.
     *   - The numbers on the y axis should reflect the scaling.
     */
    public void plotLevels() {
        UI.clearText();
        UI.clearGraphics();

        /*# YOUR CODE HERE */

        UI.nextLine(); 
        UI.println("Done");
    }

    /** ---------- The code below is already written for you ---------- **/
    /** Constructor: set up user interface */
    public PowerAnalyser(){
        UI.initialise();
        UI.addButton("Clear", UI::clearPanes );
        UI.addButton("Analyse Levels", this::analyseLevels );
        UI.addButton("Plot Levels Completion", this::plotLevels );
        UI.addButton("Quit", UI::quit );
    }

}