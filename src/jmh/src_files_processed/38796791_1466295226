
import java.util.*;
public class TicTacToe
{
    public static void main ()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println(" Welcome to Tic Tac Toe. I am o and you are x");
        int turn = 0;
        int whoseTurn = (int)(0 + 2*Math.random());
        String[][] board = new String[3][3];
        for( int r = 0; r < board.length;r++)
        {
            for( int c = 0; c < board[r].length; c++)
            {
                board[r][c] = " - ";
                System.out.print( board[r][c] + " ");
            }
            System.out.println();
        }
        if(whoseTurn % 2 == 0)
        {
            System.out.println("It is your turn. The board currently looks like this.");
            usersTurn(board);
            whoseTurn++;
        }
        else
        {
            System.out.println("It is my turn");
            compsTurn(board);
            whoseTurn++;
        }
    }

    public static void printBoard( String [][] board)
    {
        for( int r = 0; r < board.length; r++)
        {
            for( int c = 0; c < board[r].length; c++)
            {
                System.out.print(board[r][c] + " ");
            }
            System.out.println();
        }
    }

    public static String checkWinner( int [][] a)
    {
        String d = new String("player x is the winner");
        String e = new String("player o is the winner");
        String f = new String("NO WINNER");

        if( z[0][0].equals("x") & z[0][2].equals("x") & z[0][4].equals("x") )
        {
            return d;
        }
        else if( z[0][0].equals("o") & z[0][2].equals("o") & z[0][4].equals("o" )
        {
            return e;
        }

        if( z[2][0].equals("x") & z[2][2].equals("x") & z[2][4].equals("x") )
        {
            return d;
        }
        else if( z[2][0].equals("o") & z[2][2].equals("o") & z[2][4].equals("o" )
        {
            return e;
        }

        if( z[4][0].equals("x") & z[4][2].equals("x") & z[4][4].equals("x") )
        {
            return d;
        }
        else if( z[4][0].equals("o") & z[4][2].equals("o") & z[4][4].equals("o" )
        {
            return e;
        }

        if( z[0][0].equals("x") & z[2][0].equals("x") & z[4][0].equals("x") )
        {
            return d;
        }
        else if( z[0][0].equals("o") & z[2][0].equals("o") & z[4][0].equals("o" )
        {
            return e;
        }

        if( z[0][2].equals("x") & z[2][4].equals("x") & z[4][4].equals("x") )
        {
            return d;
        }
        else if( z[0][2].equals("o") & z[2][4].equals("o") & z[4][4].equals("o" )
        {
            return e;
        }

        if( z[0][4].equals("x") & z[2][2].equals("x") & z[4][0].equals("x") )
        {
            return d;
        }
        else if( z[4][0].equals("o") & z[2][2].equals("o") & z[4][0].equals("o" )
        {
            return e;
        }

        if( z[0][0].equals("x") & z[2][2].equals("x") & z[4][4].equals("x") )
        {
            return d;
        }
        else if( z[0][0].equals("o") & z[2][2].equals("o") & z[4][4].equals("o" )
        {
            return e;
        }
        else  
        {
            return f;
        }
    }

    public static String[][] compsTurn( String[][] board)
    {
        int row = (int)( 0 + 3*Math.random());
        int column = (int)( 0 + 3*Math.random());
        String compMove = new String("o");
        if( board[row][column].equals("x") || board[row][column].equals("o"))
        {
            compsTurn(board);
        }
        else
        {
            board[row][column] = compMove;
        }
        System.out.println(" This is the board now");
        return board;

    }

    public static String[][] usersTurn(String[][] board)
    {
        Scanner sc = new Scanner(System.in);
        System.out.println( "Choose either 0, 1 or 2 for your row.")
        int row = sc.nextInt();
        System.out.println("Choose either 0,1 or 2 for you column.")
        int column = sc.nextInt();
        String userMove = new String("x");
        for( int r = 0; r < board.length; r++)
        {
            for( int c = 0; c < board[r].length; c++)

            {
                if( row == r && column = c)
                {
                    board[r][c] = userMove;
                }
            }
        }
        return board;
    }
}




