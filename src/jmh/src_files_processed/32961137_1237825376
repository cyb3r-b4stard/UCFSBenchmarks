
/**
 * # ############ ###### ##### #### (###### ######## ## # ######, ## #### ## #### # ####), 
 * ### ## ######### # ##### ## ### ########### ## #### ###### ## #### ####. 
 * ## #.#. ######### ### #### "# ### ###" ##### #### ###### # #### ## ### ###### ### # ### #, 
 * ###### # ## ### ##### ### #, ### ###### # ## ### ##### ### #. 
 * 
 * ####### ### ######## ## ####-########### (## #.#. ##### ## ### ## ########). 
 * ###-###### ########## ### #######. 
 * ### ###### ### #### #### ######## ### ##### ######## ##### # ##### ######### ## #######. 
 * ### ##### ######## ####### ####### ### ############# ### ####. 
 * 
 * @###### ###### ##### 
 * @####### #.# 
 */

public class TextAnalyser
{
    private int   letters;     
    private int[] frequencies; 

    public TextAnalyser()
    {
        int letters = 0;
        frequencies = new int[26];
    }
    
    public TextAnalyser(String initial)
    {
        int letters = 0;
        frequencies = new int[26];
        
    }
    
    public void analyse (String s)
    {
        for (index=0;index<s.length();index++){
        int cha = (int)s.charAt(index);    
        if (cha>96){
        frequencies[cha-97] = frequencies[cha-97]+1
        }    
        }
    }
    
    public void analyseFile (String f)
    {
    }

    public void reset() 
    {
    }
    
    public int lettersAnalysed()
    {
        return -1;
    }
    
    public int frequency (char c)
    {
        return -1;
    } 
    
    public char mostFrequent ()
    {
        return '!';
    }
    
    public void histogram()
    {
    }

}