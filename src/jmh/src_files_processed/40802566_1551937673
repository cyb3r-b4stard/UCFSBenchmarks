public class Rational{
    private int num, denom;
    public Rational( int n, int d ){
        if ( d == 0 )
            throw new IllegalArgumentException(
                "denominator cannot be zero" );
        if ( d < 0 ){
            n = -1*n;
            d = -1*d;
        }
        num = n;
        denom = d;
        reduce();
    }

    public Rational multiply( Rational r ){
        int top = num * r.num;
        int bottom = denom * r.denom;
        return new Rational( top, bottom );
    }

    public Rational add( Rational r ){
        int top = num * r.denom; 
        int bottom = denom * r.denom; 
        int top1 = r.num*denom; 
        int bot2 = r.denom*denom; 
        top=top+top1; 
        return new Rational( top, bottom );
    }
    public boolean same( Rational r ){
        return num == r.num && denom == r.denom;
    }

    public double value(){
        double finalval = num;
        return finalval;
    }

    private void reduce(){
        if (num/num==0){
            return 1;
        }
        else if (num/2!=0&&denom/2!=0||num/2==0&&denom/2!=0||num!2=0&&denom/2=0){
            return num + "/" + denom;
        }
        else if (num>denom){
            int max = num;
            int min = denom;
        }
        else {
            int max = denom;
            int min = num;
        }
        for (int i = 1; i<=min;i++){
            int x = max*i;
            if (x%max==0){
                int lcm = x;
                int num2 = num/lcm;
                int denom2 = denom/lcm;
                return num2 + "/" + denom2;
        }
        public String toString(){
            return num + "/" + denom;
        }
    }