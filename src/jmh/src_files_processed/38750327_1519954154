import java.util.ArrayList;

public class Observatory
{
    private String observatoryName;
    private String countryName;
    private int yearObservationsBegan;
    private double sqKmArea;
    private int eventsRecorded;
    public static ArrayList <Earthquake> eArray;
    public double magnitudePlaceHolder;
    public double setValue;
    public double answer;
    

    /**
     * Constructor for objects of class Observatory and a new arraylist to contain earthquake objects
     */
    public Observatory (int eventsRecorded, String observatoryName, String countryName, int yearObservationsBegan, double sqKmArea)
    {
        this.observatoryName = observatoryName;
        this.countryName = countryName;
        this.yearObservationsBegan = yearObservationsBegan;
        this.sqKmArea = sqKmArea;
        this.eventsRecorded = eventsRecorded;
        magnitudePlaceHolder = 0;
        eArray = new ArrayList<Earthquake>();
        setValue = 0;
        answer = 0;
       
    }
    
    

    public static void addValue (Earthquake Value)
    {
        eArray.add(Value);

    }

    /*a method to search my arraylist for the largest magnitude earthquake which is stored there and return that value*\
     * magnitudePlaceHolder is used to store the largest value as the program is ran. 
     */
    public double showLargestMagnitude()

    {
        for(Earthquake d : eArray)
        {
            magnitudePlaceHolder = 0; 
            if(d.getMagnitude() >= magnitudePlaceHolder)
            {
                magnitudePlaceHolder =  d.getMagnitude();

            }

        }  
        return magnitudePlaceHolder; 
    }

    public double average()

    {
        double average = 0;
        double sumOfValues = 0;
        /*using my array of earthquakes, i set the sum of values as the sum of all earthquakes recorded.
        the average then is equal to the sum of values divided by the size of my array.*/

        for (Earthquake d : eArray) {
            sumOfValues+= d.getMagnitude ();
            average = (sumOfValues/eArray.size());
        }
        return average;


        
    }

    public void showMagnitudeAboveN (double insertMagnitude)
    { 

        for (Earthquake d : eArray)
        {
          
            if(d.getMagnitude() >= insertMagnitude) {
                System.out.println(d.getMagnitude());
               
               
            }

        }
     
    }


   public double showAllMagnitudes(){
     
    { 
        for (Earthquake d : eArray){
            setValue= d.getMagnitude();
        }
        return setValue;
    }
    
}

 public void details1(){
        System.out.println(eventsRecorded);
        System.out.println(observatoryName);
        System.out.println(countryName);
        System.out.println(yearObservationsBegan);
        System.out.println(sqKmArea);
    }
    
    public String getName(){
        
        return observatoryName;
    

}

  public String getCountry(){
        
        return countryName;
    

}







