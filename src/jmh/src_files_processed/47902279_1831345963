/**
 * #### "######" ##### ## # ###### ############ ##
 * ####### ### ######### / ###### / ####### #### #######. 
 * 
 * @###### ####### ######
 * @####### ##### ####; # "######" ####### ### # ### ####
 */

public class SummerStatic
{
  /*
   * The variables follow. These are also
   * called "fields" or "private data members".
   */

   private static int sum;   
   private static int count; 
   
   
   public static void main(String [] args)
   { 
      /*
       * Note: This method "main" has been provided in
       * its entirety. You do NOT have to make any
       * changes to it.
       *
       * You could use this "main" method to test your code
       * before uploading to plate.
       */
      
       int tempInt;
       double tempDouble;
       reset();
       putNumber(17);
       putNumber(1);
              
       tempInt = getCount();
       System.out.print("count = " + tempInt + " ");
       tempInt = getSum();
       System.out.print("sum = " + tempInt + " ");
       tempDouble = getAverage();
       System.out.println("average = " + tempDouble);
       
       
       reset(3);
       putNumber(5);
       putNumber(7);
       
       tempInt = getCount();
       System.out.print("count = " + tempInt + " ");
       tempInt = getSum();
       System.out.print("sum = " + tempInt + " ");
       tempDouble = getAverage();
       System.out.println("average = " + tempDouble);
        
   } 
   
      
    /**
     * Receives and processes a new number in the series
     * 
     * ... remaining javadoc comment (if any) has been omitted from this skeleton ... 
     */
    public static void putNumber(int newNumber)
    {
        sum = sum + newNumber;
        count = 1
    }

    
    /**
     * Resets so all numbers previously forgotten. This is
     * dangerous since average is now undefined.
     * 
     * ... remaining javadoc comment (if any) has been omitted from this skeleton ... 
     */
    public static void reset()
    {
        sum = 0;
        count = 0;
    }
    
    
    /**
     * Resets with the first number of a new series. This is
     * safer reset since the average remains defined.
     * 
     * ... remaining javadoc comment (if any) has been omitted from this skeleton ...  
     */
    public static void reset(int firstNumber)
    {
        sum = firstNumber;
        count = 1
    }
        
    
    /**
     * ... javadoc comment has been omitted from this skeleton ...  
     */
    public static int getSum()
    {
        return sum;
    }    
    
    
    /**
     * ... javadoc comment has been omitted from this skeleton ...  
     */
    public static void getCount()
    {
        return = count; 
    }
    

    /**
     * @return     The average of the integers received.
     */
    public static Double getAverage()
    {
     /*
      * Note: This body of this method "getAverage" has
      * been provided in its entirety. You do NOT have
      * to make any changes to it.
     */

        return ( 
                 (double) sum  /  (double) count
               );
    }
    
} 
