
/**
 * ###########
 * 
 * ######## #####
 * ##/##/##
 */
public class OurResturant
{
   /* constantes */
  public static final double Iva = 0.23; 
   /* memoria variaveis de instancia */
   private int fishtimes;
   private int meattimes;
   private int fishdiscounttimes;
   private int meatdiscounttimes;
   private double FishCost;
   private double MeatCost;
   private double earnings;
   private double balance;
  /* Constructores */
 public OurResturant(float menuFish, float menuMeat){
     FishCost = menuFish;
     MeatCost = menuMeat;
     meattimes = 0;
     fishtimes = 0;
     fishdiscounttimes = 0;
     meatdiscounttimes = 0;
    }
 public double request(int numberOfFish, int numberOfMeat){
     if (numberOfFish > 2 && numberOfMeat > 2){
     fishdiscounttimes = numberOfFish + fishdiscounttimes;
     meatdiscounttimes = numberOfMeat + meatdiscounttimes;
     earnings = (meattimes*10) * 0.8 +(fishtimes*10) * 0.8; 
    }
    if (numberOfFish <= 2 || numberOfMeat <= 2){
    fishtimes = numberOfFish + fishtimes;
    meattimes = numberOfMeat + meattimes;
    earnings = (meattimes * 10) + (fishtimes*10);
}
    return earnings;
    }
 public int normalMenus(){
     return (fishtimes + meattimes);
    }
 public int reducedMenus(){
     return (fishdiscounttimes + meatdiscounttimes);
    }
 public double cash(){
     earnings = (fishtimes + meattimes) * 10 + (fishdiscounttimes + meatdiscounttimes)*(10*0.8);
     return earnings;
    }
 public double iva(){
     earnings = earnings * 0.23;
     return earnings;
    }
 public double profit(){
     balance = (earnings - ((FishCost * fishtimes) + (MeatCost * meattimes) + (FishCost * fishdiscounttimes) + (MeatCost * meatdiscounttimes)));
     return balance;
    }
 public boolean hasProfit(){
     if( balance > 0)
     return true;
     if ( balance =< 0)
     return false;
}