/**
 * #############.####
 * 
 */


/**
 * #####, ###-#### ########### ## ############# ##### ####.
 * 
 *
 * @###### ###### ######
 * @####### ######### ##, ####
 */
public class LemonadeStand
{
    private int lemons;
    private int gallonsOfWater;
    private int cupsOfSugar;
    private int emptyGlasses;
    private int glassesOfLemonade;
    private double price;
    private double income;

    /**
     * Javadoc comment.
     */
    public LemonadeStand()
    {
        lemons = 0;
        gallonsOfWater = 0;
        cupsOfSugar = 0;
        emptyGlasses = 0;
        glassesOfLemonade = 0;
        price = 0.0;
        income = 0.0;
    }

    /**
     * Javadoc comment.
     * 
     * @param initLemons is in use
     * @param initGallonsOfWater is in use
     * @param initCupsOfSugar is in use
     * @param initEmptyGlasses is in use
     * @param initPrice is in use
     */
    public LemonadeStand(int initLemons, int initGallonsOfWater,
    int initCupsOfSugar, int initEmptyGlasses, 
    double initPrice)
    {
        setLemons(initLemons);
        setGallonsOfWater(initGallonsOfWater);
        setCupsOfSugar(initCupsOfSugar);
        setEmptyGlasses(initEmptyGlasses);
        setPrice(initPrice);
        glassesOfLemonade = 0;
        income = 0.0;
    }

    /**
     * Javadoc comment.
     * 
     * @return getLemons is in use
     */
    public int getLemons()
    {
        return lemons;
    }

    /**
     * Javadoc comment.
     * 
     * @return getGallonsOfWater is in use
     */
    public int getGallonsOfWater()
    {
        return gallonsOfWater;
    }

    /**
     * Javadoc comment.
     * 
     * @return getCupsOfSugar is in use
     */
    public int getCupsOfSugar()
    {
        return cupsOfSugar;
    }

    /**
     * Javadoc comment.
     * 
     * @return getEmptyGlasses is in use
     */
    public int getEmptyGlasses()
    {
        return emptyGlasses;
    }

    /**
     * Javadoc comment.
     * 
     * @return getGlassesOfLemonade is in use
     */
    public int getGlassesOfLemonade()
    {
        return glassesOfLemonade;
    }

    /**
     * Javadoc comment.
     * 
     * @return getPrice is in use
     */
    public double getPrice()
    {
        return price;
    }

    /**
     * Javadoc comment.
     * 
     * @return getIncome is in use
     */
    public double getIncome()
    {
        return income;
    }

    /**
     * Javadoc comment.
     * 
     * @param newLemons is in use
     */
    public void setLemons(int newLemons)
    {
        lemons = newLemons;
        if(lemons < 0)
        {
            lemons = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @param newGallonsOfWater is in use
     */
    public void setGallonsOfWater(int newGallonsOfWater)
    {
        gallonsOfWater = newGallonsOfWater;
        if(gallonsOfWater < 0)
        {
            gallonsOfWater = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @param newCupsOfSugar is in use
     */
    public void setCupsOfSugar(int newCupsOfSugar)
    {
        cupsOfSugar = newCupsOfSugar;
        if(cupsOfSugar < 0)
        {
            cupsOfSugar = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @param newEmptyGlasses is in use
     */
    public void setEmptyGlasses(int newEmptyGlasses)
    {
        emptyGlasses = newEmptyGlasses;
        if(emptyGlasses < 0)
        {
            emptyGlasses = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @param newGlassesOfLemonade is in use
     */
    public void setGlassesOfLemonade(int newGlassesOfLemonade)
    {
        glassesOfLemonade = newGlassesOfLemonade;
        if(glassesOfLemonade < 0)
        {
            glassesOfLemonade = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @param newPrice is in use
     */
    public void setPrice(double newPrice)
    {
        price = newPrice;
        if(price < 0)
        {
            price = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @param newIncome is in use
     */
    public void setIncome(double newIncome)
    {
        income = newIncome;
        if(income < 0)
        {
            income = 0;
        }
    }

    /**
     * Javadoc comment.
     * 
     * @return makeLemonade is in use
     */
    public int makeLemonade()
    {
        lemons -= 6;
        gallonsOfWater -= 1;
        cupsOfSugar -= 1;
        emptyGlasses -= 8;
        glassesOfLemonade += 8;

        if(lemons < 6 &&
        gallonsOfWater < 1 &&
        cupsOfSugar < 1 &&
        emptyGlasses < 8 &&)
        {
            lemons = 0;
            gallonsOfWater = 0;
            cupsOfSugar = 0;
            emptyGlasses = 0;
            glassesOfLemonade = 0;
            return 0;
        }
        else
        {
            return 1;
        }

    }

    /**
     * Javadoc comment.
     * 
     * @return sellLemonade is in use
     */
    public int sellLemonade()
    {
        glassesOfLemonade -= 1;
        income += price;
        return 0;
    }

    /**
     * Javadoc comment.
     * 
     * @return sellMoreLemonade is in use
     * @param requestedGlasses is in use
     */
    public int sellMoreLemonade(int requestedGlasses)
    {
        return 1;
    }

    /**
     * Javadoc comment.
     * 
     * @param args is in use
     */
    public static void main(String[]args)
    {
        LemonadeStand lemonadeStand = new LemonadeStand(5, 2, 2, 16, 1.1);

        lemonadeStand.makeLemonade();
        System.out.println("Lemonade Recipe:\n");
        System.out.println("\t" + lemonadeStand.getLemons()
            + " Lemons.");
        System.out.println("\t" + lemonadeStand.getGallonsOfWater()
            + " Gallons of water.");
        System.out.println("\t" + lemonadeStand.getCupsOfSugar()
            + " Cups of sugar.");
        System.out.println("\t" + lemonadeStand.getGlassesOfLemonade()
            + " Glasses of lemonade.\n");

        lemonadeStand.sellLemonade();
        System.out.println("Sold:\n");
        System.out.println("\t" + "Glasses of lemonade sold: "
            + lemonadeStand.getGlassesOfLemonade());
        System.out.println("\tIncome: $" + lemonadeStand.getIncome());
    }
}