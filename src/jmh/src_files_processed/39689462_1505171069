/** ##### ##########. 
 * 
 *  @###### (###. ######. ###. ###### #, #) 
 *  @####### (##### ####/##)
 */

public class Rectangulo {

    private double b, h; 
    private String color;
    private Punto centro;

    /** Crea un Rectangulo de base y altura 50.0 negro y centro en (0.0,0.0).
     */
    public Rectangulo() {
        this.b = 50.0; this.h = 50.0; this.color = "negro";
        this.centro = new Punto();
    }
    
    /** Crea un Rectangulo de base b, altura h, color c
     *  y centro en (px,py).
     */
    public Rectangulo(double b, double h, String c, double px, double py) {
        this.b = b; this.h = h; this.color = c;
        this.centro = new Punto(px, py);
    }

    /** Devuelve la base del Rectangulo */
    public double getB() { return this.b; }
    
    /** Devuelve la altura del Rectangulo */
    public double getH() { return this.h; }
    
     /** Devuelve el color del Rectangulo */
    public String getColor() { return this.color; }
    
    /** Devuelve la abscisa del centro del Rectangulo */
    public double getCentroX() { return this.centro.getX(); }
    
    /** Devuelve la ordenada del centro del Rectangulo */
    public double getCentroY() { return this.centro.getY(); }
    
    /** Consulta el centro del Rectangulo. Devuelve un nuevo Punto con  
     *  las mismas coordenadas que las del centro del Rectangulo  */
    public Punto getCentro() { 
        return new Punto(this.centro.getX(), this.centro.getY());
    }
    
    /** Modifica la base del Rectangulo a nuevaB. */
    public void setB(double nuevaB) { this.b = nuevaB; }  

    /** Modifica la altura del Rectangulo a nuevaH. */
    public void setH(double nuevaH) { this.h = nuevaH; }   
 
    /** Modifica el color del Rectangulo a nuevoColor. */
    public void setColor(String nuevoColor) { this.color = nuevoColor; }   
 
    /** Modifica el centro del Rectangulo a la posicion (px,py). */
    public void setCentro(double px, double py) {
        this.centro.mover(px, py);
    }

    /** Alinea a la izquierda el rectangulo con r. */ 
    public void alineaIzq(Rectangulo r) {
        double xLadoIzq = r.getCentroX() - r.b / 2.0;
        double nXCentro = xLadoIzq + this.b / 2.0;   
        this.centro.setX(nXCentro);  
    }
    
    /** Devuelve true sii o es un Rectangulo con la misma base, la misma
     *  altura, el mismo centro y el mismo color que el Rectangulo.
     */
    public boolean equals(Object o) {
        return  o instanceof Rectangulo
                && ((Rectangulo) o).b == this.b 
                && ((Rectangulo) o).h == this.h 
                && ((Rectangulo) o).centro.equals(this.centro)
                && ((Rectangulo) o).color.equals(this.color);
    }

    /** Devuelve un String con la descripcion completa del Rectangulo */
    public String toString() {
        return "Rectangulo de base " + this.b + " y altura " + this.h 
               + ", color " + this.color 
               + " y centro en " + this.centro.toString();
    }  
    
    /** Devuelve el area del Rectangulo */
    public double area() { return this.h * this.b; }
    
    /** Devuelve el perimetro del Rectangulo */
    public double perimetro() { return 2 * (this.h + this.b); }
    
    public int comparaColor (Rectangulo r){
    String azul; String rojo; String verde; String c = r.getColor(); int aux;
    
    if (c == "azul"){
        c.equalsIgnoreCase(azul); aux = 0;}
        else if (c == "azul"){
            c.equalsIgnoreCase(rojo); aux = -1;}
            else if (c == "azul") { 
                c.equalsIgnoreCase(verde); aux = -1}
    
    }

}