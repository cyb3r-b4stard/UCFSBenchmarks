import java.awt.*;
import java.util.*;

public class InsertList extends GUI
{
    public static void main(String[] args)
    {   new InsertList();   }
    
    java.awt.List show = addList("",50,50,100,200,this);
    LinkedList<String> names = new LinkedList<String>();
    Button add = addButton("Add",200,50,100,50,this);
    Button insert = addButton("Insert",200,100,100,50,this);
    
    public InsertList()
    {   super(400,400);   }

    public void actions(Object source,String command)
    {
        if(source==add)
        {   String s = input("Type a String to add");
            names.add(s);
        }
        
        if(source==insert)
        {   String s = input("Type a String to insert");
            doInsert(s);
        }            
        showAll(); 
    }

    public void doInsert(String s)
    {    
    {  doInsert
        
        
    }
    }
    
    public void showAll()
    {
        show.removeAll();
        
        for(int c=0; c < names.size(); c++)
        {
            String n = names.get(c);
            show.add(n);
        }        
    }
    /***************************************************\
     Sometimes we collect names in order as they arrive,
     for example on a sign-out sheet for students
     who are leaving school early.
     
     In other situations, it's more useful to keep the
     names in alphabetical order.  We do this by
     INSERTING each new name in the correct position,
     according to the alphabet.  
     
     This program should be able to [ADD] names at the end
     or [INSERT] a new name in the correct alphabetical order.
     So far, it only does the [ADD] function, because
     that is easy.  We need to write the [INSERT] method.
    \**************************************************/    
}