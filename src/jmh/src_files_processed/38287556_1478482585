public class TheToothpickGame
{
    public static int maxPerTurn = 0, player1Wins = 0, player2Wins = 0, totalGames = 0, winsNeeded = 0, totalToothpicks = (int) (Math.random() * 20) + 20, toothpicksRemaining = totalToothpicks, opponent = 2, currentPlayer = opponent, compSkillLevel = 1, toothpicksPerTurn = 0, coinFlip = 1, gamesPlayed = 0;
    public static boolean computerOpponent = false;
    public static final int EASY = 1, MEDIUM = 2, HARD = 3;
    public static String player1 = "", player2 = "", winner = player1, bigWinner = "";
    public static KeyboardReader reader = new KeyboardReader();
    public static void main (String [] args)
    {
        displayWelcomeBanner();
        setGameParameters();   

        while (player1Wins != winsNeeded && player2Wins != winsNeeded)
            playOneGame();

        displayEndOfSeriesStats();
    }

    public static void displayWelcomeBanner()
    {
        System.out.println("***********************************************");
        System.out.println("***********************************************");
        System.out.println("***********************************************");
        System.out.println("********Welcome to the Toothpick Game!*********");
        System.out.println("***********************************************");
        System.out.println("***********************************************");
        System.out.println("***********************************************");
    }

    public static void setGameParameters()        
    {
        player1 = reader.readString("Player 1, please enter in your name: ");
        int opponent = reader.readInt(player1 + " is player 2 going to be a human or computer opponent? Enter in 1 for human and 2 for computer: ");
        while (opponent < 1 || opponent > 2)
        {
            System.out.println("I'm sorry, " + player1 + ", but that is an invalid choice.");
            opponent = reader.readInt(player1 + " is player 2 going to be a human or computer opponent? Enter in 1 for human and 2 for computer: ");
        }
        if (opponent == 1)
        {
            player2 = reader.readString("Player 2, please enter your name: ");
        }
        if (opponent == 2)
        {
            computerOpponent = true;
            setComputerLevel();
        }
        maxPerTurn = reader.readInt(player1 + ", what is the maximum number of toothpicks that a player can take per turn? Enter 3, 4, 5, or 6 (or 0 to have it randomly chosen before each game). ");
        while (maxPerTurn != 0 && maxPerTurn > 6 || maxPerTurn != 0 && maxPerTurn < 3)
        {
            System.out.println("I'm sorry, " + player1 + " but that is an invalid choice. Please choose 3, 4, 5, 6, or 0.");
            maxPerTurn = reader.readInt(player1 + ", what is the maximum number of toothpicks that a player can take per turn? Enter 3, 4, 5, or 6 (or 0 to have it randomly chosen before each game). ");
        }
        totalGames = reader.readInt(player1 + ", will you be playing best out of 1, 3, 5, or 7? ");
        while (totalGames != 1 && totalGames != 3 && totalGames != 5 && totalGames != 7)
        {
            System.out.println("I'm sorry, " + player1 + " but that is an invalid choice. Please choose 1, 3, 5, or 7.");
            totalGames = reader.readInt(player1 + ", will you be playing best out of 1, 3, 5, or 7? ");
        }
        winsNeeded = (int) (totalGames + 1)/2;
        System.out.println("You need to win " + winsNeeded + " games to be the big winner.");
    }
    winsNeeded = (int) (totalGames + 1)/2;
    public static void setComputerLevel()
    {
        compSkillLevel = reader.readInt("Choose your computer skill level (1, 2 or 3): ");
        if (compSkillLevel == EASY)
        {
            System.out.println("You have chosen to play Elmo, our easiest computer. La La La La Easy World.");
            player2 = "Elmo";
        }
        if (compSkillLevel == MEDIUM)
        {
            System.out.println("You have chosen to play Big Bird, our medium computer. He looks friendly, but watch out for the beak!");
            player2 = "Big Bird";
        }
        if (compSkillLevel == HARD)
        {
            System.out.println("You have chosen to play Oscar the Grouch, a trash talking genius.");
            player2 = "Oscar the Grouch";
        }
    }
    
    public static void initializeGame()
    {
        System.out.println("Let's flip a coin to see who goes first!");
        coinFlip = (int) (Math.random() * 2) + 1;
        currentPlayer = coinFlip;
        if (coinFlip == 1)
        {
            System.out.println(player1 + ", you go first!");
        }
        else 
        {
            System.out.println(player2 + " will go first.");
        }
        System.out.println("The toothpick overlord has graced you with " + totalToothpicks + " toothpicks.");
        if (maxPerTurn == 0)
        {
            maxPerTurn = (int) (Math.random() * 4) + 3;
            System.out.println("You may take " + maxPerTurn + " toothpicks per turn.");
        }
        else 
        {
            System.out.println("You may take " + maxPerTurn + " toothpicks per turn.");
        }
    }

    private static void playOneGame()
    {
        initializeGame();           

        while (toothpicksRemaining > 0)
        {
            if (toothpicksRemaining == 1)
                System.out.println("\nThere is 1 toothpick remaining.");
            else
                System.out.println("\nThere are " + toothpicksRemaining + " toothpicks remaining.");        

            currentPlayerTakesTurn();

            if (toothpicksRemaining != 0)
                currentPlayer = (currentPlayer % 2) + 1; 
        }

        congratulateWinner();
    }

    private static void currentPlayerTakesTurn()
    {
        if (currentPlayer == 1)
            player1TakesTurn();
        else if (computerOpponent == false)
            player2TakesTurn();
        else if (compSkillLevel == EASY)
            easyComputerTakesTurn();
        else if (compSkillLevel == MEDIUM)
            mediumComputerTakesTurn();
        else if (compSkillLevel == HARD)
            hardComputerTakesTurn();
    }

    public static void player1TakesTurn()
    {
        toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        while (toothpicksPerTurn > maxPerTurn)
        {
            System.out.println("The maximum number of toothpicks you can take is " + maxPerTurn + ". You can't take more.");
            toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        }
        while (toothpicksPerTurn == 0)
        {
            System.out.println("You can't take 0 toothpicks.");
            toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        }
        while (toothpicksPerTurn < 0)
        {
            System.out.println("When they invent negative toothpicks, we'll let you know.");
            toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        }
        while (toothpicksPerTurn > toothpicksRemaining)
        {
            System.out.println("Let's take it back to kindergarten and figure out this whole subtracting thing. You can't take more than you have.");
            toothpicksPerTurn = reader.readInt(player2 + ", how many toothpicks do you want to take? ");
        }
        if (toothpicksRemaining - toothpicksPerTurn == 0)
        {
            winner = player1;
            player1Wins ++;
            System.out.println(player1 + " has won " + player1Wins + " games.");
        }
        toothpicksRemaining = toothpicksRemaining - toothpicksPerTurn;
    }

    public static void player2TakesTurn()
    {
        toothpicksPerTurn = reader.readInt(player2 + ", how many toothpicks do you want to take? ");
        while (toothpicksPerTurn > maxPerTurn)
        {
            System.out.println("The maximum number of toothpicks you can take is " + maxPerTurn + ". You can't take more.");
            toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        }
        while (toothpicksPerTurn == 0)
        {
            System.out.println("You can't take 0 toothpicks.");
            toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        }
        while (toothpicksPerTurn < 0)
        {
            System.out.println("When they invent negative toothpicks, we'll let you know.");
            toothpicksPerTurn = reader.readInt(player1 + ", how many toothpicks do you want to take? ");
        }
        while (toothpicksPerTurn > toothpicksRemaining)
        {
            System.out.println("Let's take it back to kindergarten and figure out this whole subtracting thing. You can't take more than you have.");
            toothpicksPerTurn = reader.readInt(player2 + ", how many toothpicks do you want to take? ");
        }
        if (toothpicksRemaining - toothpicksPerTurn == 0)
        {
            winner = player2;
            player2Wins ++;
            System.out.println(player2 + " has won " + player2Wins + " games.");
        }
        toothpicksRemaining = toothpicksRemaining - toothpicksPerTurn;
    }

    public static void easyComputerTakesTurn()
    {
        toothpicksPerTurn = (int) (Math.random() * maxPerTurn) + 1;
        if (toothpicksPerTurn > toothpicksRemaining)
        {
            toothpicksPerTurn = (int) (Math.random() * toothpicksRemaining) + 1;
        }
        if (toothpicksRemaining > maxPerTurn && toothpicksPerTurn > 1)
        {
            System.out.println(player2 + " will take " + toothpicksPerTurn + " toothpicks.");
        }
        if (toothpicksRemaining > maxPerTurn && toothpicksPerTurn == 1)
        {
            System.out.println(player2 + " will take " + toothpicksPerTurn + " toothpick.");
        }
        if (toothpicksRemaining <= maxPerTurn && toothpicksRemaining == 1) 
        {
            toothpicksPerTurn = toothpicksRemaining;
            System.out.println(player2 + " will take the final toothpick. Better luck next time!");
            winner = "Elmo";
            player2Wins ++;
        }
        if (toothpicksRemaining <= maxPerTurn && toothpicksRemaining != 1)  
        {
            toothpicksPerTurn = toothpicksRemaining;
            System.out.println(player2 + " will take the final " + toothpicksRemaining + " toothpicks. Better luck next time!");
            winner = "Elmo";
            player2Wins ++;
        }
        toothpicksRemaining = toothpicksRemaining - toothpicksPerTurn;
    }

    public static void mediumComputerTakesTurn()
    {
        toothpicksPerTurn = (int) (Math.random() * maxPerTurn) + 1;
        if (toothpicksRemaining > 13 && toothpicksPerTurn > 1)
        {
            System.out.println("I will take " + toothpicksPerTurn + " toothpicks.");
        }
        else if (toothpicksRemaining > 13 && toothpicksPerTurn == 1)
        {
            System.out.println("I will take " + toothpicksPerTurn + " toothpick.");
        }
        else
        {
            toothpicksPerTurn = toothpicksRemaining % (maxPerTurn + 1);
            if ((toothpicksRemaining % (maxPerTurn + 1)) == 0)
            {
                toothpicksPerTurn = (int) (Math.random()*maxPerTurn) + 1;
                if (toothpicksPerTurn != 1)
                {
                    System.out.println("I will take " + toothpicksPerTurn + " toothpicks. You're actually playing quite well. You might have a shot at the win.");
                }
                if (toothpicksPerTurn == 1)
                {
                    System.out.println("I will take " + toothpicksPerTurn + " toothpick. You're actually playing quite well. You might have a shot at the win.");
                }
            }
            if ((toothpicksRemaining % (maxPerTurn + 1)) != 0 && (toothpicksRemaining % (maxPerTurn + 1)) > 1)
            {
                System.out.println("I will take " + toothpicksPerTurn + " toothpicks. Try to beat me now!");
            }
            if ((toothpicksRemaining % (maxPerTurn + 1)) != 0 && (toothpicksRemaining % (maxPerTurn + 1)) == 1)
            {
                System.out.println("I will take " + toothpicksPerTurn + " toothpick. Try to beat me now!");
            }
            if (toothpicksRemaining <= maxPerTurn && toothpicksRemaining != 1)
            {
                System.out.println("I will take the remaining " + toothpicksRemaining + " toothpicks. I have won. All bow down.");
                winner = player2;
                player2Wins ++;
            }
            if (toothpicksRemaining <= maxPerTurn && toothpicksRemaining == 1)
            {
                System.out.println("I will take the last remaining toothpick. I have won. All bow down.");
                winner = player2;
                player2Wins ++;
            }
        }
        toothpicksRemaining = toothpicksRemaining - toothpicksPerTurn;
    }

    public static void hardComputerTakesTurn()
    {
        toothpicksPerTurn = toothpicksRemaining % (maxPerTurn + 1);
        if (toothpicksRemaining % (maxPerTurn + 1) == 0)
        {
            toothpicksPerTurn = (int) (Math.random()*maxPerTurn) + 1;
            if (toothpicksPerTurn > 1)
            {
                System.out.println("I will take " + toothpicksPerTurn + " toothpicks. You might actually have a shot this round.");
            }
        }
        if (toothpicksRemaining <= maxPerTurn && toothpicksRemaining != 1) 
        {
            System.out.println("I will take final toothpick. Better luck next time!");
            winner = "The All Powerful Overlord, Also Known As ME!!!";
            player2Wins ++;
        }
        if (toothpicksRemaining <= maxPerTurn && toothpicksRemaining != 1)  
        {
            System.out.println("I will take final toothpick. Better luck next time!");
            winner = "The All Powerful Overlord, Also Known As ME!!!";
            player2Wins ++;
        }
        toothpicksRemaining = toothpicksRemaining - toothpicksPerTurn;
    }

    public static void displayEndOfSeriesStats()
    {
        if (player1Wins == winsNeeded && winsNeeded != 1)  
        {
            System.out.print(player1 + ", you won " + player1Wins + " games. Good job! Guess you really are superior.");
            bigWinner = player1;
        }
        else if (player1Wins == winsNeeded && winsNeeded == 1)  
        {
            System.out.print(player1 + ", you won the one and only game. Good job! Guess you really are superior.");
            bigWinner = player1;
        }
        else if (player2Wins == winsNeeded && computerOpponent == false && winsNeeded != 1)
        {
            System.out.print(player2 + ", you won " + player2Wins + " games. Good job! Guess you really are superior.");
            bigWinner = player2;
        }
        else if (player2Wins == winsNeeded && computerOpponent == false && winsNeeded == 1)
        {
            System.out.print(player2 + ", you won the one and only game. Good job! Guess you really are superior.");
            bigWinner = player2;
        }
    }
    public static void congratulateWinner()
    {
        System.out.println("Congratulations to the big winner: " + bigWinner);
    }
}