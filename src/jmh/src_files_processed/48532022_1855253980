
/**
 * ##### # ########### ## ##### ############ ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class LabyrintheV2
{
    int[][] plan = {
        {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {-1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1},
        {-1,  0, -1, -1, -1, -1,  0, -1, -1, -1, -1,  0, -1},
        {-1,  0, -1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1},
        {-1,  0, -1,  0, -1, -1, -1, -1, -1,  0, -1,  0, -1},
        {-1,  0, -1,  0, -1,  0,  0,  0, -1,  0, -1,  0, -1},
        {-1,  0, -1,  0, -1,  0, -1,  2, -1,  0, -1,  0, -1},
        {-1,  0, -1,  0, -1,  0, -1, -1, -1,  0, -1,  0, -1},
        {-1,  0, -1,  0,  0,  0,  0,  0,  0,  0, -1,  0, -1},
        {-1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1},
        {-1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, -1},
        {-1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1}
        };
    
    int[][] entree = new int[1][1];
    int[][] sortie = new int[1][1];
    
    public LabyrintheV2() {
        for(int ligne = 0; ligne < plan.length; ligne++) {
            for(int colonne = 0; colonne < plan[ligne].length; colonne++) {
                if(plan[ligne][colonne] == 1) {
                    entree[][] = plan[ligne][colonne];
                }else if(plan[ligne][colonne] == 2){
                    
                }
            }
        }
    }
    
    public int getEntree() {
        return entree;
    }
    
    public int getSortie() {
        return sortie;
    }
    
    
    @Override
    public String toString() {
        String info = "";
        
        for(int ligne = 0; ligne < plan.length; ligne++) {
            for(int colonne = 0; colonne < plan[ligne].length; colonne++) {
                if(plan[ligne][colonne] == -1) {
                    info += "# ";
                }else if(plan[ligne][colonne] == 0){
                    info += ". ";
                }else if(plan[ligne][colonne] == 1){
                    info += "E ";
                }else if(plan[ligne][colonne] == 2){
                    info += "S ";
                }
            }
            info += "\nâ”ƒ \t";
        }
        return info;
    }
}