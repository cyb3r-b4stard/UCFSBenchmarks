
public class StringLinkedList implements StringList {
    private StringListElement head = null;
    
    public StringLinkedList(){
    }
    
    /**
     * Return the number of elements currently in
     * the list.
     */
    public int size(){ 
        int size = 0;
        StringListElement current = head;
        while (current != null) {
            current = current.getNext();
            size++;
        }
        return size;
    }
    
    /**
     * Return the String at the given index
     */
    public String get(int index){
        StringListElement current = head;
        String answer = "chanukkah";
        int count = 0;
        while (current != null && answer !="chanukkah") {
            current = current.getNext();
            count++;
            if (index==count){
                answer = current.getData();
        }
        
    }
    return answer;
    }
    
    /**
     * Return the index of the first occurance of
     * the given String in the list (using .equals for
     * comparison).  Return -1 if the String is not found.
     */
    public int indexOf(String s){
        StringListElement current = head;
        int count = 0;
        int answer = -1;
        while (current != null){
            current = current.getNext();
            count++;
            if (current.getData() == s){
               answer = count;
               break;
            }
    }
    return answer;
}
    
    /**
     * Append given String to the end of the existing list
     */
    public void add(String s){
        StringListElement current = head;
        if (head == null) {
           head = new StringListElement(s);
        }
        while (current.getNext()!=null){
            current = current.getNext();
        }
        current.setNext(new StringListElement(s));

    }
    
    /**
     * Insert the given String at the given index.
     * Elements in the list will be shifted "down"
     * in order to make room for the new String.
     */
    public void add(int index, String s){ 
        StringListElement current = head;
        int count = 0
        while (current.getNext()!=null){
            current = curent.getNext();
            count++
            if (index==count){
                StringListElement add = new StringListElement(s);
                add.setNext(add.getNext());
                
                
                
        
    }
}
    /**
     * Replace the String at the given index with the
     * given String. The String that was replaced will
     * be returned.
     */
    public String set(int index, String s){ 
        return null;
    }

    /**
     * Remove the String at the given index, shifting
     * the remaining elements "up" in the list to plug
     * in the "hole".  Return the String that was removed.
     */
    public String remove(int index){ 
        return null;
    }
    
    /**
     * Remove all the Strings in the list
     */
    public void clear() {
    }
       
}