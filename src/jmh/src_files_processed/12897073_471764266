
/**
 * ##### # ########### ## ##### ############# ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
import java.util.Scanner;
public class PasswordMakerV2
{
    public static void main (String [ ] args)
    {
        Scanner in= new Scanner(System.in);
        int selection;
        int length;
        int passwordLength=0;
        int randNum=0;
        int lowerCase=0;
        int upperCase=0;
        int characters=0;
        int numbers=0;
        String passWord;
        System.out.println("Password Generation");
        System.out.println("***************************************************************");
        System.out.println("*  [1] Lowercase Letters                                      *");
        System.out.println("*  [2] Lowercase Letters & Uppercase Letters                  *");
        System.out.println("*  [3] Lowercase Letters, Uppercase, and Numbers              *");
        System.out.println("*  [4] Lowercase Letters,Uppercase, Numbers, and Punctuation  *");
        System.out.println("*  [5] Quit                                                   *");
        System.out.println("***************************************************************");
        System.out.println("Enter Selection (1-5): ");
        selection= in.nextInt();
        if(selection==5)
        {
            in.close();
        }
        System.out.println("\nPassword Length (1-14): ");
        length=in.nextInt();
        
        
        
        if(selection == 1)
        {
        while(passwordLength <= length)
        {
         randNum=(int)(Math.random() * (122-97)) + 97;
         lowerCase= (char)randNum;
         passwordLength++;
        }
        System.out.println("Password: " +((char)lowerCase); 
         
        }        
         
        if(selection == 2)
        {
            while(passwordLength <= length)
            {
            randNum=(int)(Math.random() * (122-97)) + 97;
            lowerCase=randNum;
            randNum=0;
            randNum=(int)(Math.random() * (90-65)) + 65;
            upperCase=randNum;     
            passwordLength++;
            passWord=" " +((char)lowerCase) + ((char)upperCase);
           }
           
        }
        
        if(selection == 3)
        {
            while(passwordLength <= length)
            {
            randNum=(int)(Math.random() * (122-97)) + 97;
            lowerCase=randNum;
            randNum=0;
            randNum=(int)(Math.random() * (90-65)) + 65;
            upperCase=randNum;     
            randNum=0;
            randNum=(int)(Math.random() * (57-48)) + 48;
            numbers=randNum;
            randNum=0;
            passwordLength++;
            passWord= " " + ((char)lowerCase) + ((char)upperCase) + ((char)numbers);
           }
            
        }
       
        if(selection == 4)
        {
            while(passwordLength <= length)
            {
            randNum=(int)(Math.random() * (122-97)) + 97;
            lowerCase=randNum;
            randNum=0;
            randNum=(int)(Math.random() * (90-65)) + 65;
            upperCase=randNum;     
            randNum=0;
            randNum=(int)(Math.random() * (57-48)) + 48 ;
            numbers=randNum;
            randNum=0;
            randNum=(int)(Math.random() * (47-33)) + 33;
            characters= randNum;
            randNum=0;
            passwordLength++;
            passWord= " " +((char)lowerCase) + ((char)upperCase) + ((char)numbers) + ((char)characters);
        }
       
        }
        
       
    if(selection ==5)
    {
        in.close();
    }
    
}            
}