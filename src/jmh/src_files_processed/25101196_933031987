import java.util.*;
import java.io.*;
/**
 * ##### # ########### ## ##### ############# ####.
 * 
 * @###### (####### ### ######!!) 
 * @####### (# ####### ###### ## # ####)
 */
public class SudokuChecker
{
    public static void main(String args[]) throws IOException
    {
        Scanner fileReader = new Scanner(new File("ride.txt"));
        int row1 = fileReader.nextInt();
        int row2 = fileReader.nextInt();
        int row3 = fileReader.nextInt();
        int row4 = fileReader.nextInt();
        int row5 = fileReader.nextInt();
        int row6 = fileReader.nextInt();
        int row7 = fileReader.nextInt();
        int row8 = fileReader.nextInt();
        int row9 = fileReader.nextInt();
        int[][] sudoku = new int[9][9];
        sudoku[0][0] = 
        for (int x = 0; x<9; x++)
        {
            sudoku [x][0] = Integer.parseInt(row1.substring(x, x+1));
        }
            
        
    }
    
    public static boolean checkRow(int numI)
    {
        String num = numI + "";
        for(int x = 1; x<=9; x++)
        {
            boolean contains = false;
            for(int index = 0; index<9; index++)
            {
                if (num.substring(index, index+1).equals(x+""))
                    contains = true;
                
            }
            if (contains==false)
                return false;
             
           
            
        }
        return true;
    }
    
    public static boolean checkColumn(int row1, int row2, int row3, int row4, int row5, int row6, int row7, 
    int row8, int row9, int colNum)
    {
        String column = getNumAtCol( row1, colNum) + getNumAtCol( row2, colNum) + getNumAtCol( row3, colNum) +
         getNumAtCol( row4, colNum) + getNumAtCol( row5, colNum) + getNumAtCol( row6, colNum) +
          getNumAtCol( row7, colNum) + getNumAtCol( row8, colNum) + getNumAtCol( row9, colNum);
        return checkRow(Integer.parseInt(column));
        
    }
    
    public static String getNumAtCol(int rowI, int colNum)
    {
        String row = rowI + "";
        return row.substring(colNum, colNum+1);
        
    }
    

}