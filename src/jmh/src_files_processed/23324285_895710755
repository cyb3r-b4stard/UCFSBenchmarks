/**
 * ### ###### ##### ########## # ###### ## # ##### ####.
 * ## ##### ######## ####### ## # ######.
 * 
 * @######   #### ######### (#####)
 * @#######  ##/##/####
 */


public class Member
{
    private String mid;
    
    private String name;

    private boolean isMale;
    
    private String activities;
    
    private Activity society;

    /**
     * Create a new member with a given ID, name and gender. 
     * 
     * @param  mid     A member ID
     * @param  name    A member name
     * @param  isMale  A member is male or not
     */
    public Member(String mid, String name,  boolean isMale)
    {       
        this.mid = mid;
        this.name = name; 
        this.isMale = isMale;
        activities = "";

    }

    /**
     * Get the member ID of this member
     * 
     * @return the member ID of this member.
     */
    public String getMID()
    {
        return mid;
    }
    
    /**
     * Get  the name of this member.
     * 
     * @return  the name of this member.
     */
    public String getName()
    {
        return name;
    }

    /**
     * Set a new name for this member.
     * 
     * @param name  A new name for this member
     */
    public void setName(String name)
    {
        this.name = name;
    }
        
    /**
     * Get the gender of the member, i.e. "Male" or "Female"
     * 
     * @return The String "Male" if the member is male, 
     *         otherwise "Female".
     */
    public String getGender()
    {
       if(isMale == true) 
       {
         return "Male";
        }
       else {
         return "Female";
        }
      
    }
        
    public void classRegistration(Activity newSociety)
    {
      this.society = newSociety;
      int number = society.getMemberNos();
      
      if(number < 20)
      {
          number=number+1;
          society.setMemberNos(number);
          String activities += society;
        }
      else 
      {
          System.out.println("Activity not avaliable");
        }
    }
    
    /**
     * Print the member's details, 
     * i.e. id, name, gender and a list of activities, 
     * to the output terminal.
     * e.g.  Member ID: M001   Name: Cathy Lee   Gender: Female   
     *       Activities: Yoga Pilates
     */
    public void print()
    {
       System.out.println("Member ID:" +mid);
       System.out.println("Name:" +name);
       System.out.println("Gender: "+getGender());
       System.out.println("Activities: "+activities);
        
    }
    
}