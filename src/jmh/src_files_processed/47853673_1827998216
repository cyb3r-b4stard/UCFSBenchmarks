import java.util.*;
/**
 * ##### # ########### ## ##### ##### ####.
 * 
 * @###### (######## #########) 
 * @####### (#)
 */
public class Hotel
{
    private ArrayList<Room> availableRooms;
    private ArrayList<Room> reservedRooms;
    /**
     * Constructor for objects of class Hotel
     */
    public Hotel()
    {

    }

    /**
     * 
     */
    public Hotel(ArrayList<Room> availableRoomsIn, ArrayList<Room> reservedRoomsIn)
    {
        availableRooms = availableRoomsIn;
        reservedRooms = reservedRoomsIn;
    }

    public boolean addNewRoom(Room room)
    {
        boolean hasRoom = false;
        if(!reservedRooms.contains(room))
        {
            hasRoom = true;
            availableRooms.add(room);
        }
        return hasRoom; 
    }

    public ArrayList<Room> getAllAvailableRooms()
    {
        return availableRooms;
    }

    public ArrayList<Room> getAllReservedRooms()
    {
        return reservedRooms;
    }

    public Room getAvailableRoomByRoomNumber(int roomNumber)
    {
        if(!reservedRooms.contains(roomNumber) && availableRooms.contains(roomNumber)) 
        {
            return availableRooms.get(roomNumber);
        }
        else 
        {
            return null;
        }
    }

    public int getFloor(int roomNumber)
    {
        int floorNumber = roomNumber;
        return floorNumber = Integer.parseInt(Integer.toString(roomNumber).substring(0, 1));
    }

    public ArrayList<Room> getAvailableRooms(int floor, View view, int maxCapacity, boolean kitchenette)
    {
        if(availableRooms.contains(floor) && availableRooms.contains(view) && availableRooms.contains(maxCapacity) && availableRooms.contains(kitchenette))
        {
          return availableRooms.get(int floor, View view, int maxCapacity, boolean kitchenette)
        }
        return null;
    }

    public Room getReservedRoomByRoomNumber(int roomNumber)
    {
        if(reservedRooms.contains(roomNumber) && !availableRooms.contains(roomNumber))
        {
            return reservedRooms.get(roomNumber);
        }
        else
        {
            return null; 
        }
    }

    public boolean makeRoomAvailable(int roomNumber)
    {
        if(reservedRooms.contains(roomNumber))
        {
            return true;
        }
        return false; 
    }

    public boolean reserveRoom(int roomNumber)
    {
        if(availableRooms.contains(roomNumber))
        {
            return true;
        }
        return false; 
    }

    public String toString()
    {
        return "The available room are " +  getAllAvailableRooms() +  " and the reserved rooms are " + getAllReservedRooms();
    }
}