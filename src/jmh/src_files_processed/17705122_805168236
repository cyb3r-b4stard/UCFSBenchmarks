q2/**
 * This "Summer" class is a simple introduction to
 * methods and variables / fields / private data members. 
 * 
 * @author Raymond Lister
 * @version April 2015; a "static" version for a Lab Test
 */

/*
 * HINT: You should NOT need to memorise much to complete
 *       the skeleton. The javadoc comment block before
 *       each method header provides a lot of information,
 *       especially the lines beginning "@param" and
 *       "@return".  The type of the variables
 *       "sum", and "count" (i.e. both of type int)
 *       also provides useful useful information.
 */

public class SummerStatic
{
  /*
   * The variables follow. These are also
   * called "fields" or "private data members".
   */

   private static int sum;   
   private static int count; 
   
   
   public static void main(String [] args)
   { 
      /*
       * Note: This method "main" has been provided in
       * its entirety. You do NOT have to make any
       * changes to it.
       *
       * You could use this "main" method to test your code
       * before uploading to plate.
       */
      
       reset();
       putNumber(17);
       putNumber(1);
              
       System.out.print("count = " + getCount() + " ");
       System.out.print("sum = " + getSum() + " ");
       System.out.println("average = " + getAverage());
       
       
       reset(3);
       putNumber(5);
       putNumber(7);
             
       System.out.print("count = " + getCount() + " ");
       System.out.print("sum = " + getSum() + " ");
       System.out.println("average = " + getAverage());
        
   } 
   
      
    /**
     * Receives and processes a new number in the series
     * 
     * @param  newNumber   a new number in the series 
     */
    public static void putNumber(int newNumber)
    {
        sum=sum+newNumber
        count=count+1;
    }

    
    /**
     * Resets so all numbers previously forgotten. This is
     * dangerous since average is now undefined.
     */
    public static void reset()
    {
        sum=0;
        count=1;
    }
    
    
    /**
     * Resets with the first number of a new series. This is
     * safer reset since the average remains defined.
     * 
     * @param	firstNumber	Start of a new series 
     */
    public static void reset(int firstNumber)
    {
        sum=firstNumber;
        count=1;
    }
        
    
    /**
     * @return     The sum of all the numbers received 
     */
    public static int getSum()
    {
        return(sum);
    }    
    
    
    /**
     * @return     The number of integers received.
     */
    public static int getCount()
    {
        return(count);
    }
    

    /**
     * @return     The average of the integers received.
     */
    public static returntype getAverage(parametersIfAny)
    {
     /*
      * Note: This body of this method "getAverage" has
      * been provided in its entirety. You do NOT have
      * to make any changes to it.
     */

        return ( 
                 (double) sum  /  (double) count
               );
    }
    
} 
