public class Rule
{ 
    public static final int START_NUMBER = 10;
    public static final int END_NUMBER = 100;

    public static int getSumOfDigits(int number)
    {
        /* Student's code goes here */
        int dig0 = 0, dig1 = 0, dig2 = 0;
        for (int i = 10; i < START_NUMBER; ++i)
        {
            /* dig0 */
            if (i < 100)
            {
                dig0 = 0;
            }
            else if (i >= 100)
            {
                int ndig0 = 0;
                if (100 <= i && i <= 199)
                {
                    ndig0 = 1;
                }
                else if (200 <= i && i <= 299)
                {
                    ndig0 = 2;
                }
                else if (300 <= i && i <= 399)
                {
                    ndig0 = 3;
                }
                else if (400 <= i && i <= 499)
                {
                    ndig0 = 4;
                }
                else if (500 <= i && i <= 599)
                {
                    ndig0 = 5;
                }
                else if (600 <= i && i <= 699)
                {
                    ndig0 = 6;
                }
                else if (700 <= i && i <= 799)
                {
                    ndig0 = 7;
                }
                else if (800 <= i && i <= 899)
                {
                    ndig0 = 8;
                }
                else if (900 <= i && i <= 999)
                {
                    ndig0 = 9;
                }
                switch (ndig0)
                {
                    case 1:
                    dig0 = 1;
                    break;
                    
                    case 2:
                    dig0 = 2;
                    break;
                    
                    case 3:
                    dig0 = 3;
                    break;
                    
                    case 4:
                    dig0 = 4;
                    break;
                    
                    case 5:
                    dig0 = 5;
                    break;
                    
                    case 6:
                    dig0 = 6;
                    break;
                    
                    case 7:
                    dig0 = 7;
                    break;
                    
                    case 8:
                    dig0 = 8;
                    break;
                    
                    case 9:
                    dig0 = 9;
                    break;
                }
            }
            /* 
            
            /* dig1 */
            if (i < 10 || (i >= 100 && i < 110) ||  (i >= 200 && i < 210) ||  (i >= 300 && i < 310))
            {
                if (i >= 400 && i < 410 || (i >= 500 && i < 510) || (i >= 600 && i < 610))
                {
                    if (i >= 700 && i < 710 || (i >= 800 && i < 810) || (i >= 900 && i < 910))
                    {
                        dig1 = 0;
                    }
                }
            }
            else
            {
                int ndig1 = 0;
                if (i >= 90 && i < 100 || (i >= 190 && i < 200) || (i >= 290 && i < 300))
                {
                    if (i >= 390 && i < 400 || (i >= 490 && i < 500) || (i >= 590 && i < 600))
                    {
                        if (i >= 690 && i < 700 || (i >= 790 && i < 800) || (i >= 890 && i < 900))
                        {
                            if(i >= 990 && i < 1000)
                            {
                                ndig1 = 9;
                            }
                        }
                    }
                }
                else if (i >= 80 && i < 90 || (i >= 180 && i < 190) || (i >= 280 && i < 290))
                {
                    if (i >= 380 && i < 390 || (i >= 480 && i < 490) || (i >= 580 && i < 590))
                    {
                        if (i >= 680 && i < 690 || (i >= 780 && i < 790) || (i >= 880 && i < 890))
                        {
                            if(i >= 980 && i < 990)
                            {
                                ndig1 = 8;
                            }
                        }
                    }
                }
                else if (i >= 70 && i < 80 || (i >= 170 && i < 180) || (i >= 270 && i < 280))
                {
                    if (i >= 370 && i < 380 || (i >= 470 && i < 480) || (i >= 570 && i < 580))
                    {
                        if (i >= 670 && i < 680 || (i >= 770 && i < 780) || (i >= 870 && i < 880))
                        {
                            if(i >= 970 && i < 980)
                            {
                                ndig1 = 7;
                            }
                        }
                    }
                }
                else if (i >= 60 && i < 70 || (i >= 160 && i < 170) || (i >= 260 && i < 270))
                {
                    if (i >= 360 && i < 370 || (i >= 460 && i < 470) || (i >= 560 && i < 570))
                    {
                        if (i >= 660 && i < 670 || (i >= 760 && i < 770) || (i >= 860 && i < 870))
                        {
                            if(i >= 960 && i < 970)
                            {
                                ndig1 = 6;
                            }
                        }
                    }
                else if (i >= 50 && i < 60 || (i >= 150 && i < 160) || (i >= 250 && i < 260))
                {
                    if (i >= 350 && i < 360 || (i >= 450 && i < 460) || (i >= 550 && i < 560))
                    {
                        if (i >= 650 && i < 660 || (i >= 750 && i < 760) || (i >= 850 && i < 860))
                        {
                            if(i >= 950 && i < 960)
                            {
                                ndig1 = 5;
                            }
                        }
                    }
                }
                else if (i >= 40 && i < 50 || (i >= 140 && i < 150) || (i >= 240 && i < 250))
                {
                    if (i >= 340 && i < 350 || (i >= 440 && i < 450) || (i >= 540 && i < 550))
                    {
                        if (i >= 640 && i < 650 || (i >= 740 && i < 750) || (i >= 840 && i < 850))
                        {
                            if(i >= 940 && i < 950)
                            {
                                ndig1 = 4;
                            }
                        }
                    }
                }
                else if (i >= 30 && i < 40 || (i >= 130 && i < 140) || (i >= 230 && i < 240))
                {
                    if (i >= 330 && i < 340 || (i >= 430 && i < 440) || (i >= 530 && i < 540))
                    {
                        if (i >= 630 && i < 640 || (i >= 730 && i < 740) || (i >= 830 && i < 840))
                        {
                            if(i >= 930 && i < 940)
                            {
                                ndig1 = 3;
                            }
                        }
                    }
                }
                else if (i >= 20 && i < 30 || (i >= 120 && i < 130) || (i >= 220 && i < 230))
                {
                    if (i >= 320 && i < 330 || (i >= 420 && i < 430) || (i >= 520 && i < 530))
                    {
                        if (i >= 620 && i < 630 || (i >= 720 && i < 730) || (i >= 820 && i < 830))
                        {
                            if(i >= 920 && i < 930)
                            {
                                ndig1 = 2;
                            }
                        }
                    }
                }
                else if (i >= 10 && i < 20 || (i >= 110 && i < 120) || (i >= 210 && i < 220))
                {
                    if (i >= 310 && i < 320 || (i >= 410 && i < 420) || (i >= 510 && i < 520))
                    {
                        if (i >= 610 && i < 620 || (i >= 710 && i < 720) || (i >= 810 && i < 820))
                        {
                            if(i >= 910 && i < 920)
                            {
                                ndig1 = 1;
                            }
                        }
                    }
                }
            }
            /* 
        }
        number = dig0 + dig1 + dig2;
        return number;
    }

    public static void test1()
    {
        for(int i = START_NUMBER; i < END_NUMBER; ++i)
        {
            System.out.println("The sum of " + i  + "'s digits is: " + getSumOfDigits(i));
        }
    }

    public static void test2()
    {
        for(int i = START_NUMBER; i < END_NUMBER; ++i)
        {
            if(i % 3 == 0)
            {
                System.out.print(i + " is divisible by 3 ");
            }
            else
            {
                System.out.print(i + " is not divisible by 3 ");
            }
            
            if(getSumOfDigits(i) % 3 == 0)
            {
                System.out.println("and the rule applies on it");
            }
            else
            {
                System.out.println("and the rule does not apply on it");
            }
        }
    }

    public static void main(String[] args)
    {
        test1();
        test2();
    }
}