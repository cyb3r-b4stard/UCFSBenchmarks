import java.util.ArrayList;

/**
 * ###### ### ##### ## # ########.
 * ### ##### ## ######### ## #### ## #### ########.
 *
 * @###### (#### ####)
 * @####### (# ####### ###### ## # ####)
 */
public class StockManager
{
    private ArrayList<Product> stock;

    /**
     * Initialise the stock manager.
     */
    public StockManager()
    {
        stock = new ArrayList<Product>();
    }

    /**
     * Add a product to the list.
     * @param item The item to be added.
     */
    public void addProduct(Product item)
    {
        stock.add(item);
    }

    /**
     * Receive a delivery of a particular product.
     * Increase the quantity of the product by the given amount.
     * @param id The ID of the product.
     * @param amount The amount to increase the quantity by.
     */
    public void delivery(int id, int amount)
    {
    }

    /**
     * Try to find a product in the stock with the given id.
     * @return The identified product, or null if there is none
     *         with a matching ID.
     */
    public Product findProduct(int id)
    {
        for(Product item : stock)
        {
            if(id >= 1){
                if(item.getId() == id){
                    return item;
                }

            }

        }
    }

    /**
     * Locate a product with the given ID, and return how
     * many of this item are in stock. If the ID does not
     * match any product, return zero.
     * @param id The ID of the product.
     * @return The quantity of the given product in stock.
     */
    public int numberInStock(int id)
    {
        if(id >= 1 && item != null)
        {

            if(item.getQuantity() >= 1){
                System.out.println()
                return item.getQuantity();
            }
        }
        return 0;
    }

    /**
     * Print details of all the products.
     */
    public void printProductDetails()
    for(Product item : stock)
    {
        System.out.println(item.ToString());
    }
}