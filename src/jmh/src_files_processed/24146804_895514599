public class BuildingContoller{
    private static ElevatorModel elevatorN, elevatorS, elevatorW;
    public static void main(String[] args){
        elevatorN = new ElevatorModel();
        elevatorS = new ElevatorModel();
        elevatorW = new ElevatorModel();
        int b = 1;
    }
    
    public static ElevatorModel getSelectedElevator(){
        System.out.print("Select Elevator: ");
        char elevator = Keyboard.readChar();
        if(elevator == 'N'){
            return ElevatorModel elevator = elevatorN;
        }else if(elevator == 'W'){
            return ElevatorModel elevatot = elevatorW;
        }else if(elevator == 'S'){
            return ElevatorModel elevator = elevatorS;
        }
        return ElevatorModel elevator;
    }
    
    public static int getFirstMenuChoice(){
        System.out.println("Menu:");
        System.out.println("  0) Move up one floor");
        System.out.println("  1) Move down one floor");
        System.out.println("  2) Open Front door");
        System.out.println("  3) Close Front door");
        System.out.println("  4) Open Back door");
        System.out.println("  5) Close Back door");
        System.out.println("  6) People enter");
        System.out.println("  7) People leave");
        System.out.print("Menu choice: ");
        int menuChoice = Keyboard.readInt();
        return menuChoice;
    }
    
    public static boolean applyOperation(int menuChoice, ElevatorModel elevator){
        switch(menuChoice){
            case 0: elevator.moveUp(); break;
            case 1: elevator.moveDown(); break;
            case 2: elevator.openFront(); break;
            case 3: elevator.closeFront(); break;
            case 4: elevator.openBack(); break;
            case 5: elevator.closeBack(); break;
            case 6: System.out.print("How many people? ");
                    int n = Keyboard.readInt();
                    elevator.loadPeople(n); break;
            case 7: System.out.print("How many people? ");
                    int m = Keyboard.readInt();
                    elevator.exitPeople(m); break;
            default: System.out.println("Illegal Operation");
        }
        
    }
    
    public static void printState(){
        System.out.println("N - Floor:" + elevatorN.getFloor() + "Front:");
    }    
}