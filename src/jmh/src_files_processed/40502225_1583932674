import java.util.*;
public abstract class Device extends ICloud
{
    private String DeviceName;
    private String DeviceType;
    private boolean isShuffleOn;
    private boolean PowerState;  
    private int sizeinMegs;      
    private int SizeOfDevice; 

    public static Song[] defaultSongs = {new Song("99 Red Balloons", "Some German Band", 4, 9), new Song("Highway To Hell", "Some musician", 5, 8), new Song("Beethoven's 9th", "Beethoven", 60, 15),new Song ("Smells Like Teen Spirit", "Nirvana", 4, 5),new Song ("Glycerine", "Bush", 5, 3), new Song ("Eleanor Rigby", "The Beatles", 7, 5), new Song("Tambourine Man", "Bob Dylan", 4, 6), new Song("House of the Rising Sun", "some musicician", 3, 7)}; 

    ArrayList<Song> SongsList = new ArrayList<Song>();
    public Device()
    {

    }

    public Device( String name, String type, int size)
    {
        this.DeviceName = name;
        this.DeviceType = type;
        this.SizeOfDevice = size; 

        for (int x = 0; x < 5; x++)
        {      
            int num = (int) (Math.random() * 10);
            for (int y = 0; y < defaultSongs.length; y++)
            {
                if(!(defaultSongs[num].getTitle.equals(SongsList.get(y).getTitle()))
                {

                    if( num <= 7 )
                    {

                        this.SongsList.add(defaultSongs[num]); 
                    }
                }
            }
        }

    }

    public void addSong(String Title, String Artist, int length, int size)

    {
    }

    public String getName()
    {
        return this.DeviceName;
    } 


    public void removeSong( String someTitle)
    {
        if ( !(someTitle.equals(null)))
        {
            for (int x = 0; x< this.SongsList.size(); x++)
            {
                if (this.SongsList.get(x).getTitle().equals(someTitle))
                {
                    this.SongsList.remove(x); 
                    x--; 
                }
            }
        }
    }

    public void printAllSongsInfo()
    {

        String[] songsInfo = new String[SongsList.size()]; 
        for( int x =0; x< SongsList.size(); x++)
        {
            songsInfo[x] = SongsList.get(x).toString(); 
            System.out.println(songsInfo[x]); 
        }

    }

    public int getSizeRemaining()
    {
        int Remaining = this.SizeOfDevice; 
        for ( int x = 0; x < SongsList.size(); x++)
        {
            Remaining = Remaining - SongsList.get(x).getSizeOfSong(); 
        }

        return Remaining; 
    }

    public int getNumSongs()
    {
        return this.SongsList.size(); 
    }

    public boolean getIsShuffleOn()
    {
        return this.isShuffleOn; 
    }

    public void playSong(Device s)
    {
    }


}