
/**
 * ##### # ########### ## ##### ############ ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Administrasi
{
 
    /**
     * Constructor for objects of class Administrasi
     */
    public Administrasi()
    {
       
    }

    /**
     * An example of a method - replace this comment with your own
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public static void pesananDitugaskan(Pesanan pesan, Ojek pelayan)
    {
       pesan.setStatusSelesai(false);
       pesan.setStatusDiproses(true);
       pesan.setPelayan(pelayan);
       ojekAmbilPesanan(pesan, pelayan);
       
    }
    public static void ojekAmbilPesanan(Pesanan pesan, Ojek pelayan) {
       pesan = new Pesanan(); 
       pesan.setStatusSelesai(false);
       pesan.setStatusDiproses)(true);
       pesan.setPelayan(layanan);
       Administrasi newadmin = new Administrasi();
       newadmin.ojekAmbilPesanan(pesan, layanan);
    }
    public static void ojekLepasPesanan(Ojek pelayan){
        
        pelayan.setStatus(StatusOjek.Idle);
        pelayan.setPesanan(null);
       
    } 
    
    public static void pesananDibatalkan(Ojek pelayan){ 
       
        pelayan.getPesanan().setStatusSelesai(false);
        pelayan.getPesanan().setStatusDiproses(false);
        pelayan.setPesanan(null);
        ojekLepasPesanan(pelayan); 
    } 
    
    public static void pesananDibatalkan(Pesanan pesan){ 
     ojekLepasPesanan(pesan.getPelayan());
     pesan.setStatusSelesai(false);
     pesan.setStatusDiproses(false);
     pesan.setPelayan(null);
        
    } 
    
    public static void pesananSelesai(Pesanan Pesan) { 
        ojekLepasPesanan(pesan.getPelayan());
        pesan.setStatusSelesai(true);
        pesan.setStatusDiproses(false);
        pesan.setPelayan(null);
    }
    
}