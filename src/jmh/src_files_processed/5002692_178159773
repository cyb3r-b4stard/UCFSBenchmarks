/**
 *###########: ##### #####.####
 *#########:   #### #####
 */

/**
 * ##### # ########### ## ##### ##### ####.
 * 
 * @###### #### ###### 
 * @####### #
 */
import java.util.Scanner;
import java.util.ArrayList;
public class Items implements Proj2Constants
{
    private String[] category = {"photography and camera","jewellery and watches","clothing and accessories"};
    private String[] itemType = {"Camera","watch","shoe"};
    private String itemCamera1 = "cannon eos rebel t31 600d body + 4 lens kit 18-55 is + 75-300 + 24gb flash & more";
    private String itemCamera2 = "nikon d series d5100 16.2 mp digital slr camera - black kit w/ af-s vr 18-55mm";
    private String itemCamera3 = "panasonic lumix dmc-zs25 / dmc-tz35 16.1 mp 20x opticl zoom digital camera";
    private String itemWatch1 = "invicta 1774 mens pro driver gold tone stainless steel chronograph dive watch";
    private String itemWatch2 = "invicta specialty chronograph tachymeter black dial stnls steel new mens watch";
    private String itemWatch3 = "invicta specialty chronograph tachymeter black dial stnls steel new mens watch";
    private String itemShoe1 = "nike air jordan alpha mens 12 basket ball shoes blue black white 39813-103";
    private String itemShoe2 = "reebok realflex transition 2 mens athletic running shoes";
    private String itemShoe3 = "adidas original gazelle mens shoes sneakers canvas";
    private int[] sellerCameraID = {100,101,102};
    private int[] sellerWatchID = {200,201,202,};
    private int[] sellerShoeID = {203,204,205};
    private enum SellType{FIX_PRICE, BOTH, AUCTION};
    private int[] quantityCamera = {2,10,5};
    private enum Condition{NEW,USED};
    private double[] startingBidsCamera = {0.00,300.00,100.00};
    private double[] buyoutCamera = {729.95,700.00,160.00};
    private int[] quantityWatch = {1,3,10};
    private double[] startingBidsWatch = {50.00,30.45,25.45};
    private double[] buyoutWatch = {99.85,84.99,94.45};
    private int[] quantityShoe = {5,5,1};
    private double[] startingBidsShoe = {10.00,10.00,5.00};
    private double[] buyoutShoe = {};
    private DateTime startTime;
    private DateTime endTime;
    int currentAmount;
    String currentCategory;
    String currentItemType;
    String itemTypeDescription;
    int itemTypeID;
    String sellType;
    double startBidsItem;
    double endBidsItem;
    Condition condition;
    SellType sellType;
    /**
     * 
     * Constructor for objects of class Items
     */
    public Items(int catNumber, int itemNumber, int itemID)
    {
     int f;
     currentCategory = category[catNumber];
     currentItemType = itemType[itemNumber];
     if(itemNumber == 0)
     {
      for(f=0;f<category.length;f++)
      {
       if(sellerCameraID[f] == itemID)
       {
        if(itemID == 100)
        {
         startTime = new DateTime("1-1-2014,21:49:00");
         endTime = new DateTime("1-8-2014,21:49:00");
         currentAmount = quantityCamera[0];
         itemTypeID = itemID;
         itemTypeDescription = itemCamera1;
         condition = Condition.NEW;
         sellType = SellType.FIX_PRICE
         startsBidsItem = startingBidsCamera[f];
         endBidsItem = buyoutCamera[f];
        }
       }
      }
     }

    }

    /**
     * An example of a method - replace this comment with your own
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public void printOutItems()
    {
      int i;
      Condition classItem = Condition.NEW;
      SellType soldCategory = SellType.FIX_PRICE;
      String start = "Start";
      String end = "End";
      String itemID = "Item ID";
      String classDescription = "Item description";
      String categ = "Category";
      String type = "Item Type";
      String price1 = "Starting Bid";
      String amount = "Quantity";
      String price2 = "End bid";
      String itemCondition = "Condition";
      String sellingCategory = "Sell Type";
      System.out.printf("12%s 12%s 12%s 12%s 12%s 12%s 12%s 12%s 12%s 12%s 12%s /n",categ,type,classDescription,itemID,amount,sellingCategory,itemCondition,price1,price2,start,end);
      for(i=0;i<=category.length;i++)
      {
       if(i == 0)
        {
         startTime = new DateTime("1-1-2014,21:49:00");
         endTime = new DateTime("1-8-2014,21:49:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[i],itemType[i],itemCamera1,sellerCameraID[i],quantityCamera[i],soldCategory,classItem,startingBidsCamera[i],buyoutCamera[i],startTime,endTime);
         System.out.println("*********************************************************************************************");
         startTime = new DateTime("2-27-2014,9:30:00");
         endTime = new DateTime("2-29-2014,9:30:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[1],itemType[1],itemWatch1,sellerWatchID[i],quantityWatch[i],SellType.FIX_PRICE,Condition.USED,startingBidsWatch[i],buyoutWatch[i],startTime,endTime);
         System.out.println("*********************************************************************************************");
         startTime = new DateTime("3-11-2013,00:00:59");
         endTime = new DateTime("3-14-2013,00:00:59");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[2],itemType[2],itemShoe1,sellerShoeID[i],quantityShoe[i],SellType.BOTH,Condition.NEW,startingBidsShoe[i],buyoutShoe[i],startTime,endTime);
         System.out.println("*********************************************************************************************");         
        }
       if(i == 1)
        {
         startTime = new DateTime("1-31-2013,10:30:00");
         endTime = new DateTime("2-3-2013,10:30:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[0],itemType[0],itemCamera2,sellerCameraID[i],quantityCamera[i],SellType.AUCTION,Condition.USED,startingBidsCamera[i],buyoutCamera[i],startTime,endTime);
         System.out.println("*********************************************************************************************");
         startTime = new DateTime("10-30-2013,19:30:00");
         endTime = new DateTime("11-3-2013,19:30:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[i],itemType[i],itemShoe2,sellerWatchID[i],quantityWatch[i],SellType.AUCTION,Condition.NEW,startingBidsWatch[i],buyoutWatch[i],startTime,endTime);
         System.out.println("*********************************************************************************************");
         startTime = new DateTime("3-12-2012,12:00:00");
         endTime = new DateTime("3-15-2012,12:00:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[2],itemType[2],itemShoe2,sellerShoeID[i],quantityShoe[i],SellType.AUCTION,Condition.NEW,startingBidsShoe[i],buyoutShoe[i],startTime,endTime);
         System.out.println("*********************************************************************************************");   
        }
       if(i == 2)
       {
         startTime = new DateTime("10-3-2013,10:00:00");
         endTime = new DateTime("10-8-2013,10:00:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[0],itemType[0],itemCamera3,sellerCameraID[i],quantityCamera[i],SellType.BOTH,Condition.NEW,startingBidsCamera[i],buyoutCamera[i],startTime,endTime);
         System.out.println("*********************************************************************************************");
         startTime = new DateTime("2-9-2012,23:00:00");
         endTime = new DateTime("2-11-2012,23:00:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[1],itemType[1],itemWatch3,sellerWatchID[i],quantityWatch[i],SellType.BOTH,Condition.NEW,startingBidsWatch[i],buyoutWatch[i],startTime,endTime);
         System.out.println("*********************************************************************************************");
         startTime = new DateTime("5-17-2013,12:00:00");
         endTime = new DateTime("5-19-2013,12:00:00");
         System.out.printf("6%s 6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[i],itemType[i],itemCamera3,sellerShoeID[i],quantityShoe[i],SellType.FIX_PRICE,Condition.USED,startingBidsShoe[i],buyoutShoe[i],startTime,endTime);
         System.out.println("*********************************************************************************************");  
       }
      }
      System.out.println("=================================================================================================================");
    }
      
    /**
       * searches for a particular item based on that item's ID
       * 
       * 
       */
      
       public void searchIem(int id)
       {
         int i;
         for(i=0;i<=category.length;i++)
         {
          if(id == sellerCameraID[i])
          {
            startTime = new DateTime("1-31-2013,10:30:00");
            endTime = new DateTime("2-3-2013,10:30:00");
            System.out.printf("6%s 6%s 6%d 6%d 6%s 6%s 6%s 6%s 6%s /n",category[0],itemType[0],sellerCameraID[i],quantityCamera[i],SellType.AUCTION,Condition.USED,startingBidsCamera[i],buyoutCamera[i],startTime,endTime);
            System.out.println("*********************************************************************************************");            
          }
          if(id == sellerWatchID[i])
          {
              
          }
          if(id == sellerShoeID[i])
          {
              
          }          
         }
       }
   }
