 
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import java.util.Random;
public class FightZone
{
    static int MAX_INT,damage,charHp,charMp,enemyHp,enemyStr,enemyDamage,in;
    static boolean escape,moveMade;
    public static boolean run() throws IOException{
        Scanner sc = new Scanner(System.in);
        Random r = new Random();
        int HPboost  = r.nextInt(15);
        int DamageBoost = r.nextInt(5);
        enemyHp = 10+HPboost;
        enemyStr = 1+DamageBoost;
        escape = false;
        moveMade = false;
        boolean isAlive = true;
        while (escape == false)
        {
            CharacterStats();
            EnemyStats();
            FightMenuBuilder();
            in = FightMenu();
            moveMade = false;
            if(in == 1)
            {
                System.out.println("You did "+PhysicalDamage()+" Damage to the enemy");
                moveMade = true;
            }
            if(in == 2)
            {
                if (charMp>3)
                {
                    System.out.println("You did "+MagicalDamage()+" Damage to the enemy");
                    moveMade = true;
                }
                else
                {
                    System.out.println("You don't have enough mp");
                }
            }
            if(in == 3)
            {
                System.out.println("You healed by "+Heal());
                moveMade = true;
            }
            if(in == 4)
            {
                if(EscapeAttempt()== true)
                {
                    System.out.println("You've escaped!");
                    escape = true;
                }
                else
                {
                    System.out.println("You've failed to escape.");
                }
                moveMade = true;
            }
            if((escape == false)&&(enemyHp>0)&&(moveMade == true))
            {
                System.out.println("The enemy did "+EnemyDamage()+" Damage to you");
            }
            if (charHp<1)
            {
                escape = true;
            }
            if (enemyHp<1)
            {
                escape = true;
            }
            Break();
        }
        if(enemyHp<1)
        {
            System.out.println("Great Success");
            isAlive = true;
        }
        if(charHp<1)
        {
            System.out.println("You've failed miserably");
            isAlive = false;
        }
        return isAlive;
    }

    public static void Break()
    {
        int i;
        for (i=0;i<25;i++)
        {
            System.out.print("-");
        }
        System.out.println("-");
    }

    public static void CharacterStats()
    {
        System.out.println("Your Stats| Charisma = "+Main.ttats.Charclicks+" | Strength = "+Main.ttats.Strclicks+" | HP =  "+Main.ttats.HPclicks+"/"+Main.ttats.maxHP+ " | MP = "+Main.ttats.MPclicks+"/"+Main.ttats.maxMP+" | Intelligence = "+Main.ttats.Intclicks+" | Agility = "+Main.ttats.Agiclicks+" | Gold = "+Main.ttats.Gold);
    }

    public static void EnemyStats()
    {
        System.out.println("Enemy Stats| HP = "+enemyHp+" | Strength = "+enemyStr+" |");
    }

    public static void FightMenuBuilder()
    {
        System.out.println("--------------------------------------------\n|                     |                    |\n|  1.Physical Attack  |  2.Magical Attack  |\n|                     |                    |\n--------------------------------------------\n|                     |                    |\n|       3.Heal        |  4.Attempt to Run  |\n|                     |                    |\n--------------------------------------------");
    }

    public static int FightMenu()
    {
        Scanner sc = new Scanner(System.in);
        int i = 0,in = 0,choice = 0;
        while( i == 0){
            System.out.print("What do you choose?");
            if (sc.hasNextInt()){
                in = sc.nextInt();
                if (0<in && 5>in){
                    choice = in;
                    break;
                }                         
            }else{
                sc.nextLine();
            }
        }
        return choice;
    }

    public static int Heal()
    {
        charHp = charHp + (Main.ttats.Intclicks/3);
        return (Main.ttats.Intclicks/3);
    }

    public static int EnemyDamage()
    {
        enemyDamage = 1+(enemyStr/2);
        Random r = new Random();
        int a  = r.nextInt(8);
        if (a==1)
        {
            enemyDamage = (int)(enemyDamage*1.25);
        }
        Main.ttats.HPclicks = Main.ttats.HPclicks - enemyDamage;
        return enemyDamage;
    }

    public static int PhysicalDamage()
    {
        damage = 1+(Main.ttats.Strclicks/2);
        Random r = new Random();
        int a  = r.nextInt(8);
        if (a==1)
        {
            damage = (int)(damage*1.25);
        }
        enemyHp = enemyHp - damage;
        return damage;
    }

    public static int MagicalDamage()
    {
        damage = 1+(Main.ttats.Intclicks)/2);
        Random r = new Random();
        int a  = r.nextInt(8);
        if (a==1)
        {
            damage = (int)(damage*1.5);
        }
        Main.ttats.MPclicks = Main.ttats.MPclicks - 4;
        enemyHp = enemyHp - damage;
        return damage;
    }

    public static boolean EscapeAttempt()
    {
        Random r = new Random();
        int e =r.nextInt(15);
        if (e <= (1+(Main.ttats.Agiclicks/2)))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}