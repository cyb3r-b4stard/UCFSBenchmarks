/* ###### ## ###### # ######## ###-#.
 * ######## ########: ###### ######### ### #### ######## ###.
 */
package cz.vse.ut1800.vyro00_vyravsky;



import org.junit.After;
import org.junit.Before;
import org.junit.Test;


import static org.junit.Assert.*;



import cz.pecinovsky.canvasmanager.*;
import cz.pecinovsky.vehicle.*;
import cz.pecinovsky.util.*;

/*******************************************************************************
 * ######### ##### {@#### #############} ###### ## ########### ##########
 * ##### {@#### #############}.
 *
 * @######  ##### ######
 * @####### #.##.#### — ####-##-##
 */
public class Test4Vehicles implements IVehicleTest
{
    
    


        /***************************************************************************
     * Vrátí přepravku s vozidly obsaženými v přípravku dané testovací třídy.
     *
     * @return Přepravku s vozidly v přípravku
     */
   @Override
 public VehicleCrate getFixtureVehicles()
  {
    VehicleCrate přepravka = this.;
    return přepravka;  
  }
    

    




    private BuginaE buginaEast;
    private BuginaS buginaSouth;
    private BuginaN buginaNorth;
    private BuginaW buginaWest;
    private CanvasManager CM;


    /***************************************************************************
     * Inicializace předcházející spuštění každého testu a připravující tzv.
     * přípravek (fixture), což je sada objektů, s nimiž budou testy pracovat.
     */
    @Before
    public void setUp()
    {
        buginaEast = new BuginaE(0, 5);
        buginaSouth = new BuginaS(0,0);
        buginaNorth = new BuginaN(5,5);
        buginaWest = new BuginaW(5,0);
        
        CM = CanvasManager.getInstance();
        CM.add(buginaEast, buginaSouth, buginaNorth, buginaWest);
        IO.inform("Vozidla vyro00_vyravsky vytvořena");
    }


    /***************************************************************************
     * Úklid po testu - tato metoda se spustí po vykonání každého testu.
     */
    @After
    public void tearDown()
    {
    }



   
 
    


    

    

    

    







    
    @Test
    public void testForward()
    {
        buginaEast.goForward();
        buginaNorth.goForward();
        buginaWest.goForward();
        buginaSouth.goForward();
    }
    
    @Test
    public void testToLeft()
    { 
        CM.removeAll();
        
        
    }
    
        @Test
    public void testToRight()
    {
        CM.removeAll(); 
        
    }
}