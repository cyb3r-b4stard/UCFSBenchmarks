import kareltherobot.*; 
/**
 * @###### : 
 * ####### : #######
 * ### ####:
 */
public class EveryOtherKarel extends Robot
{

    public EveryOtherKarel(int st, int av, Direction dir, int numBeepers) 
    {
        super(st,av,dir,numBeepers);
    }
    /******************************************
    *  public void doStupidRobotTricks()
    *******************************************/
    public void doStupidRobotTricks()
    {  
        while(frontIsClear())
        {
            evenRow();
        }
    }
    public void turnRight()
    {
        turnLeft();
        turnLeft();
        turnLeft();
    }
    public void turnAround()
    {
        turnLeft();
        turnLeft();
    }
    public void evenRow()
    {
        if(wallNotPresent())
        {
            placeBeepersEven();
        }
        else if (wallIsPresent())
        {
            turnAround();
            while(frontIsClear())
            {
                move();
                }
            turnRight();
            move();
            turnRight();
            move();
            putBeeper();
            while(frontIsClear())
            {
                oddRow();
                }
        }
    }
    public void oddRow()
    {
        if(wallNotPresent())
        {
            placeBeepersOdd();
        }
        else if (wallIsPresent())
        {
            turnAround();
            while(frontIsClear())
            {
                move();
                }
            turnRight();
            move();
            turnRight();
            putBeeper();
            while(frontIsClear())
            {
                evenRow();
                }
        }
    }
    public boolean wallNotPresent()
    {
        boolean ifNoWall = true;
        move();
        ifNoWall = frontIsClear();
        turnAround();
        move();
        turnAround();
        return ifNoWall;
    }
    public boolean wallIsPresent()
    {
        if(wallNotPresent())
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    public boolean frontNotClear()
    {
        if(frontIsClear())
        {
            return false;
        }
        else
        {
            return true;
        }
    }
    public void placeBeepersEven()
    {   
        if(wallNotPresent())
        {
            move();
            move();
            putBeeper();
        }
        else if(wallIsPresent())
        {
            turnAround();
            while(frontIsClear())
            {
                move();
            }
            turnRight();
            move();
            turnRight();
                }
    }
    public void placeBeepersOdd()
    {   
        if(wallNotPresent())
        {
            move();
            move();
            putBeeper();
        }
        else if(wallIsPresent())
        {
            turnAround();
            while(frontIsClear())
            {
                move();
            }
            turnRight();
            move();
            turnRight();
                }
    }
        }
    public void checkInFront()
    {
        if(wallNotPresent())
        {
            move();
            move();
            }
        else if(wallIsPresent())
        {
            turnAround();
            while(frontIsClear())
            {
                move();
                }
                turnRight();
                move();
                turnRight();
                }
            

    }
    }
    

    
    
