/*****************************************************************
 * ####### ####
 * ######### #### 
 * #### ####### #### #### ### ##### ##### ## #########
 ****************************************************************/
 public class Execution
 {
     public static void main (String [] args)
     {
         int statementExecutions = 10000;
         double instructionsPerStatement = 20.0;
         double clockRate = 2000.0 *1000000000;
         double instructionsPerCycle = 1.0;
         double totalIdealExecutionTime;
         double firstCacheSwapTime = 0.0010;
         double secondCacheHitTime = 0.0050;
         double mainMemoryHitFraction = 0.9999;
         int pageSize = 4096;
         double diskSpeed = 500.0;
         int diskTrackLength = 400000;
         double totalTime;
         double firstLevel;
         double secondLevel;
         double memoryLevel;
         
         totalIdealExecutionTime = statementExecutions * instructionsPerStatement / (instrusctionsPerCycle * clockRate);
         firstLevel = (1 - firstCacheGitFraction) * firstCacheSwapTime;
         secondLevel = (1 - firstCacheHitFraction) * (1 - secondCacheHitFraction)* secondCacheSwapTime;
         memoryLevel = (1 - firstCacheHitFraction) * (1 - secondCacheFraction) * secondCacheSwapTime *(1 - firstCacheHitFraction) * (1 - secondCacheHitFraction) * (1 - mainMemoryHitFraction) * (0.5/diskSpeed + pageSize/ (diskTrackLength * diskSpeed);
         
         totalTime = totalIdealExecutionTime + firstlevel + secondLevel + memoryTime
         
         System.ou.println("Ideal time = ")
         Sysyem.out.println("ToTal time = ")
        }
    }
         
         