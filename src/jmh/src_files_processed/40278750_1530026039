
/**
 * ###### ####### ### ######### #### #
 * 
 * @###### ###### ###### 
 * @####### #.#
 */
public class Iteration
{
    /**
     * For Loops
     */
    public void forTwoTimesTable()
    {
        for(int i = 1; i <= 12; i++) {
            int sum = 2 * i;
            System.out.println("2 x " + i + " = " + sum);
        }
    }
    
    public void forTimesTables() {
        for(int j = 1; j <= 12; j++) {
            for(int i = 1; i <= 12; i++) {
                int sum = j * i;
                System.out.println( j + "x " + i + " = " + sum);
            }
        }
    }
    
    public void evenNumbers() {
        for(int i=1; i<=100; i++) {
            int sum = i % 2 ;
            if (sum == 0){
                System.out.println(i);
            }
            
        
            
        }
        
    }
    
    /**
     * While Loops
     */
    public void whileTwoTimesTable()
    {
        int i = 1;
        
        while(i <= 12) {
            int sum = 2 * i;
            System.out.println("2 x " + i + " = " + sum);
            i = i + 1; 
        }
    }
    
    public void whileTimesTables() {
        
        int i = 1;
        while (i <= 12){
            int j = 1;
            while (j <= 12){
                int sum = i * j;
                System.out.println( i + "x" + j + "=" + sum);
                j++;
            }
            i++;
        }
        
    }
    
    public void oddNumbers() {
        int i = 1;
        while(i <= 100) {
            int sum = i % 2 ;
            if (sum == 1){
                System.out.println(i);
            }
            i++;
        
            
        }
        
        
    }
    
    /**
     * Mind Bending Loop Problems
     */
    public int cityPopulation()
    {
        double gonbust = 100000;
        double nuplace = 30000;
        int years = 0;
        
        while(gonbust > nuplace) {
            gonbust = gonbust - (gonbust * 0.09);
            nuplace = nuplace + (nuplace * 0.07);
            
            years++;
        }
        
        return years;
    }
    
    public void repeatedSubtraction(int a, int b) {
        int c
        int i = 1
        while (c > 0) {
            
        
        
        }
        
    
        
        
    }
    
    public void farmersFences() {
        
        
    }
    
    public void maximisingProfits() {
        
        
    }
}