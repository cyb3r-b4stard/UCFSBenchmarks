
/**
 * ### ########## ####### ######### #### ### #### ##### ### ####### ### ####### ## ### ########
 * ####### ### ########## ### ### ##### ## ##### ### ####### #### #### ######## ###### ##.
 * 
 * @###### ####### #####
 * @####### #/##/####
 */
public class NumberList
{
    private double[] list = new double[8];
    private double[] positive = new double[5];
    private int index;
    private double num;
    private double sum = 0.0;
    private double average = 0.0;
    private int count = 0;
    public double distance;

    /**
     * Constructor Overloaded
     */
    public NumberList()
    {
    }
    
    /**
     * Constructor for objects of class NumberList
     */
    public NumberList(double n, int i)
    {
        index = i;
        num = n;
    }

    /**
     * setList method
     */
    public void setList(double n, int i)
    {
        index = i;
        list[index] = n;
    }

    /**
     * getAverage method
     */
    public double getAveragePositive()
    {
        for(int j = 0; j < positive.length; j++)
        {
            if(list[j] > 0.0)
            {
                positive[count] = list[j];
                sum += positive[count];
                count += 1;
                
                
            }
        }
        average = (sum/double (count));
        return average;
    }
    
   
    
    public void getDistance()
    {
        for(int i = 0; i < positive.length; i++)
        {
            if(average > positive[i])
            {
                distance = average - positive[i];
            }
            else if(average < positive[i])
            {
                distance = positive[i] - average;
            }
            else if(average == positive[i])
            {
                distance = 0.0;
            }
            System.out.println("The number " + positive[i]+ "is " + distance + "units away from the average.");
        }
    }


}