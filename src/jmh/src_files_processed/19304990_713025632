
/**
 * ##### # ########### ## ##### ########### ####.
 * 
 * @###### (##### #####) 
 * @####### (# ####### ###### ## # ####)
 */
public class BankAccount
{
    private int accountNumber;
    private String accountHolderName;
    private String PIN;
    private boolean accountType;
    private double fees;
    private double balance;
    public int numberOfUsage;
    public static final int BANK_HIGH_CHARGE = 20;
    public static final int BANK_LOW_BALANCE_CHARGE = 15;
    private static final int DEBIT_ACCOUNT_LIMIT = 10000000;
    public BankAccount()
    {

    }

    /**
     * @return accountNumber
     */
    public int getAccountNumber()
    {
        return this.accountNumber;
    }

    /**
     * @return numberOfUsage
     */
    public int getNumberOfUsage()
    {
        return this.numberOfUsage;
    }

    /**
     * @return accountHolderName
     */
    public String getAccountHolderName()
    {
        return this.accountHolderName;
    }

    /**
     * @return PIN
     */
    public String getPIN()
    {
        return this.PIN;
    }

    /**
     * @return account type
     */
    public boolean getAccountType()
    {
        return this.accountType;
    }

    /**
     * @return fees
     */
    public double getFees()
    {
        return this.fees;
    }

    /**
     * @return balances
     */
    public double getBalance()
    {
        return this.balance;
    }

    /**
     * @param bankAccount
     */
    public void setAccountNumber(int accountNumber)
    {
        if (accountNumber >= 0)
        {
            this.accountNumber = accountNumber;   
        }
    }

    /**
     * @param bankAccount
     */
    public void setNumberOfUsage(int numberOfUsage)
    {
        if (numberOfUsage >= 0)
        {
            this.numberOfUsage = numberOfUsage;   
        }
    }

    /**
     * @param accountHolderName
     */
    public void setAccountHolderName(String accountHolderName)
    {
        if (accountHolderName != null && accountHolderName.length() >= 2)
        {
            this.accountHolderName = accountHolderName;
        }
    }

    /**
     * @param PIN
     */
    public void setPIN(String PIN)
    {
        if (PIN != null && PIN.length() >= 5)
        {
            this.PIN = PIN;
        }
    }

    /**
     * @param accont type
     */
    public void setAccountType(boolean accountType)
    {
        if (accountType == true)
        {
            System.out.println("Chequing accont");
        }else if (accountType == false)
        {
            System.out.println( "Savings Account");
        }else 
        {
            this.accountType = accountType;
        }
    }

    /**
     * @param fees
     */
    public void setFees(double fees)
    {
        if(fees == 0)
        {
            System.out.println("You have free banking with us");
        }else
        {
            this.fees = fees;
        }
    }

    /**
     * @param balances
     */
    public void setBalance(double balance)
    {
        if(balance == 0)
        {
            System.out.println("You have no money");
        }else
        {
            this.balance = balance;
        }
    }

    public void accountFeeCalculation(int accountUsed)
    {
        if(numberOfUsage > 0 && numberOfUsage < 20)
        {
            accountUsed* BANK_LOW_BALANCE_CHARGE;
        }else if(numberOfUsage > 20 && numberOfUsage < 50)
        {
            return accountUsed * BANK_HIGH_CHARGE;
        }else 
        {
            System.out.println("You have gone over your number of usage");
        }
    }
}