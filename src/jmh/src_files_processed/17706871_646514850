import javax.swing.JFrame;
import java.awt.event.*; 
import java.awt.*;
import java.swing.*;
/**
 * ##### # ########### ## ##### ### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Gui extends JFrame
{
   private static final int WIDTH = 400;
   private static final int HIGHT = 300;
   private JLabel startL, resetL, helpL;
   private JTextField startTF, resetTF, helpTF;
   private JButton startB, resetB, helpB;
   static JFrame frame1;
   static Container pane;
  
   public public static void main(String args[])
   
   {
   
      frame1 = new JFrame ("Sample GUI Application");

      frame1.setSize (800,200);

      pane = frame1.getContentPane();

      insets = pane.getInsets();

      pane.setLayout (null);
       
       startL = new JLabel("Enter the length: ", SwingConstants.RIGHT);
       resetL = new JLabel("Enter the width: ", SwingConstants.RIGHT);
       helpL = new JLabel("Area: ", SwingConstants.RIGHT);
       
       startTF = new JTextField(10);
       resetTF = new JTextField(10);
       helpTF = new JTextField(10);
       
       startB = new JButton("Start Game");
       sbHandler = new StartButtonHandler();
       startB.addActionListener(sbHandler);
       
       
       resetB = new JButton("Restarts the game");
       rbHandler = new ResetButtonHandler();
       resetB.addActionListener(rbHandler);
       
       helpB = new JButton("The aim of the game is to connect four of your peices in a row");
       hbHandler = new HelpButtonHandler();
       helpB.addActionListener(hbHandler);
       
       
       setTitle("Welcome to ConnectFour")
       Container pane = getContentPane();
       pane.setLayout(new GridLayout(4, 2));
       
       pane.add(startL)
       pane.add(resetL)
       pane.add(helpL)
       pane.add(startTF)
       pane.add(resetTF)
       pane.add(helpTF)
       pane.add(startB)
       pane.add(resetB)
       pane.add(helpB)
       
       setSize(WIDTH, HEIGHT);
       setVisible(true);
       setDefaultCloseOperation(EXIT_ON_CLOSE);
      }
   private class StartButtonHandler implements ActionListener{
      public void actionPerformed(ActionEvent e)
      {
            ConnectFour
      }
   }
   public class ExitButtonHandler implements ActionListener
   {
      public void actionPerformed(ActionEvent e)
      {

            System.exit(0);

      }
   }     
}