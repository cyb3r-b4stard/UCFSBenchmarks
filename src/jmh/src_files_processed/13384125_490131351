/**
 * ######### ###### ###### ########### ####### ####,
 * ###### ### ##### ############## ## ############.
 *
 * @###### #### ####
 * @###### #### ###########
 * @####### ##. ######## ####
 */
class Dompteur
{
    /**
     * 'SE1' auf die Zeichenflaeche zeichnen.
     */
    public void start()
    {
        Turtle turtle = new Turtle(50, 100);

        turtle.geheVor(30);
        turtle.drehe(-90);
        turtle.geheVor(30);
        turtle.drehe(-90);
        turtle.geheVor(30);
        turtle.drehe(90);
        turtle.geheVor(30);
        turtle.drehe(90);
        turtle.geheVor(30);

        turtle.hinterlasseKeineSpur();
        turtle.geheZu(130, 100);

        turtle.hinterlasseSpur();
        turtle.drehe(-180);
        turtle.geheVor(30);
        turtle.drehe(90);
        turtle.geheVor(30);
        turtle.drehe(90);
        turtle.geheVor(30);
        turtle.drehe(-180);
        turtle.geheVor(30);
        turtle.drehe(90);
        turtle.geheVor(30);
        turtle.drehe(90);
        turtle.geheVor(30);

        turtle.hinterlasseKeineSpur();
        turtle.geheZu(180, 100);

        turtle.hinterlasseSpur();
        turtle.setzeFarbe("rot");
        turtle.drehe(-90);
        turtle.geheVor(60);
        turtle.drehe(-120);
        turtle.geheVor(20);
    }

    /**
     * 'n-Eck' auf die Zeichenflaeche zeichnen.
     */
    public void nEck (int n, String farbe, int posX, int posY)
    {

        Turtle turtle = new Turtle(posX, posY);

        for (int i=0; i <n ; ++i)
        {
            turtle.hinterlasseSpur();
            turtle.setzeFarbe(farbe);
            turtle.drehe(360.00/n);
            turtle.geheVor(10);
        }
    }

    public void nEckDing (int n, int posX, int posY, int kantenlänge, int verkleinerung)
    {

        for (int j=0; j<((kantenlänge*n/3)/schrittGröße) ; ++j)
        {
            kleinereKantenlänge = kantenlänge-(j*verkleinerung)
            kleinerradius = n*verkleinerung/3.141
            Turtle turtle = new Turtle(posX + kleinerradius,posY+kleinerradius);
            if(kantenlänge>(j*schrittGröße))
            {
                for (int i=0; i <n ; ++i)
                {
                    turtle.hinterlasseSpur();
                    turtle.geheVor(kleinereKantenlänge);
                    turtle.drehe(360/n);

                }
            }
        }         
    }

}
