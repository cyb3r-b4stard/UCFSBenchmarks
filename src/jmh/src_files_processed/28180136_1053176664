/**
 * ############# ###### # ##### ###### ####### #### ######
 * ####-#### #######.
 * ### ##### ## # ###### ## ######### ### ### ###########.
 * ## ## # ##### ####### ## ### ##### #### ## ###### ### #####
 * ## ###### ###### ##### ###### ###### ## ##### # ######.
 * ## #### ####### #### ##### ##### ######## #######.
 *
 * @###### ##### #. ###### ### ####### #######
 * @####### ####.##.##
 */
public class TicketMachine
{
    private int price;
    private int balance;
    private int total;

    /**
     * Create a machine that issues tickets of the given price.
     * Note that the price must be greater than zero, and there
     * are no checks to ensure this.
     */
    public TicketMachine(int ticketCost)
    {
        price = ticketCost;
        balance = 0;
        total = 0;
    }

    /**
     * Return the price of a ticket.
     */
    public int getPrice()
    {
        return price;
    }

    /**
     * Return the amount of money already inserted for the
     * next ticket.
     */
    public int getBalance()
    {
        return balance;
    }

    /**
     * Receive an amount of money in cents from a customer.
     */
    public void insertMoney(int amount)
    {
        balance += amount;
    }

    /**
     * Print a ticket.
     * Update the total collected and
     * reduce the balance to zero.
     */
    public void printTicket()
    {
        System.out.println("##################");
        System.out.println("# The BlueJ Line");
        System.out.println("# Ticket");
        System.out.println("# " + price + " cents.");
        System.out.println("##################");
        System.out.println();

        total += balance;
        balance = 0;
    }
}

public getTotal (int) ()
{
    return total;
}