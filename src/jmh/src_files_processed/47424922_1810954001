
/* #### ### ####### - ######
 * ####:
 * ########:
 * ##:
 */


import ecs100.*;
import java.awt.Color;
import javax.swing.JColorChooser;

/** ###################: ##### # ###### ## ######### ##### */
public class TricolourFlagDrawer{

    public static final double width = 200;
    public static final double height = 133;

    /** Constructor: set up user interface */
    public TricolourFlagDrawer(){
        UI.initialise();
        UI.addButton("Clear", UI::clearPanes );
        UI.addButton("Core", this::doCore );
        UI.addButton("Completion", this::doCompletion );
        /*UI.addButton("Completion", this::doCompletion );*/
        UI.addButton("Quit", UI::quit );
    }

    /**
     * asks user for a position and three colours, then calls the 
     * drawThreeColourFlagCore method, passing the appropriate arguments
     *
     * CORE
     */
    public void doCore(){
        double left = UI.askDouble("left of flag");
        double top = UI.askDouble("top of flag");
        UI.println("Now choose the colours");
        Color stripe1 = JColorChooser.showDialog(null, "First Stripe", Color.white);
        Color stripe2 = JColorChooser.showDialog(null, "Second Stripe", Color.white);
        Color stripe3 = JColorChooser.showDialog(null, "Third Stripe", Color.white);
        this.drawThreeColourFlagCore(left, top, stripe1, stripe2, stripe3 );
    }

    /**
     * draws a three colour flag consisting of three vertical equal-width stripes
     * at the given position
     *
     * CORE
     */
    public void drawThreeColourFlagCore(double left, double top, Color first_stripe, Color second_stripe, Color third_stripe){
        int width = 150;
        int height = 270;
         
        UI.setColor(first_stripe);
        UI.fillRect(left, top, width, height);
        UI.setColor(second_stripe);
        UI.fillRect(left + width, top, width, height);
        UI.setColor(third_stripe);
        UI.fillRect(left + (width*2), top, width, height);
        
    }

    /**
     * draws multiple flag made up of three equal size stripes by calling the
     * drawThreeColourFlagCompletion method, passing the appropriate arguments
     *
     * COMPLETION
     */
    public void doCompletion(){
        this.drawThreeColourFlagCompletion(true, 20, 50, Color.black, Color.yellow, Color.red);               
        this.drawThreeColourFlagCompletion(false, 60, 15, Color.black, Color.red, Color.yellow);            
        this.drawThreeColourFlagCompletion(true, 20, 50, Color.blue, Color.white, Color.red);               
        this.drawThreeColourFlagCompletion(true, 20, 50, Color.red, Color.yellow, Color.green.darker());    
        this.drawThreeColourFlagCompletion(false, 60, 15,  Color.red, Color.white, Color.blue);               
        this.drawThreeColourFlagCompletion(false, 60, 15, Color.white, Color.blue, Color.red);          
    }

    /**
     * draws a three colour flag consisting of three equal-size stripes
     * at the given position
     * The stripes can be either vertical or horizontal
     *
     * COMPLETION
    */
    public void drawThreeColourFlagCompletion(boolean i, int width, int height, Color first, Color second, Color third){
        double left=100;
        double top=20;
        
        if(i == true){
            verttop = top + 100;
            UI.setColor(first);
            UI.fillRect(verttop, top, width, height);
            UI.setColor(second);
            UI.fillRect(verttop + width, top, width, height);
            UI.setColor(third);
            UI.fillRect(verttop + (width*2), top, width, height);
            
            
        } else if (i == false) {
            UI.setColor(first);
            UI.fillRect(left, top, width, height);
            UI.setColor(second);
            UI.fillRect(left, top + height, width, height);
            UI.setColor(third);
            UI.fillRect(left, top + (height*2), width, height);
            
            lefthorizonal += 200;
        }
    }

}