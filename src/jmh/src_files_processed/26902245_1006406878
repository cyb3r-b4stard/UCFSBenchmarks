import java.util.ArrayList;
/**
 * #### ## # ####### ##### ## ###### #####. #### ##### #### #### ## ######## ## ## ### #### ####.
 * #### ###### ###### ### ##### ### #### ### ### ####### #### #### # #### ## ##.
 * ######: ### #### ## ##### ### ##### #####.
 * 
 * @######: (##### ##)
 * @####### ##: ########
 * @#######: (#, ###)
 * @####: ##/##/##
 */
public class Diary
{
    /**
     * instances variables to be used.
     */
    private ArrayList<Jobs> tasks;
    /**
     * Constructor for objects of class Diary
     */
    public Diary()
    {
        tasks = new ArrayList<Jobs>();
    }
    
    /**
     * Adding the jobs to the collection.
     */
    public void addJobs(String jobName, int priority, String day)
    {
        tasks.add(new Jobs(jobName, priority, day));
    }
    
    /**
     * Accessor method - Returns the quantity of jobs available.
     */
    public int getnumberOfJobs()
    {
        return tasks.size();
    }
    
    /**
     * Accessor method - Returns all the jobs when requested.
     */
    public int getallJobs()
    {
        return tasks.size();
    }
           
    /**
     * Looping around the arraylist of Jobs to find all the jobs available in the collection.
     */
    public void findallJobs ()
    {
        System.out.println("Here are all the jobs stored.");
        for (Jobs allJobs : tasks)
        {
            System.out.println(allJobs.toString());
        }
    }
    
    /**
     * Prints out all the urgent jobs that have the priority value of greater than or equal to 8
     */
    public void printallUrgent()
    {
        System.out.println();
        System.out.println("Here are all the urgent jobs.");
        for (Jobs allUrgent : tasks)
        {
            System.out.println();
            System.out.println(allUrgent.isUrgent());
        }
    }
    
    /**
     * Prints out the details of first urgent job when requested.
     * this should take the index as a parameter.
     * The if statement should accept the priority values greater than or equal to 8
     * to print out the first jobs.
     */
    public void printfirstUrgentJob(int priority)
    {
        if (priority >= 8)
        {
            System.out.println();
            System.out.println("Here is the 1st urgent job.");
            for (Jobs firstUrgentJob : tasks)
            {
                System.out.println();
                System.out.println(firstUrgentJob.toString());
            }
        }
        else
        {
            System.out.println();
            System.out.println("Error: Job requested does not exist.");
        }
    }
    
    /**
     * A method that prints details of all the jobs with some string in their descriptions.
     * the string is supplied as a parameter.
     */
    public void printallJobs (String data)
    {
        this.data = data;
        {
            for (Jobs allJobs : task)
            {
                System.out.println();
                System.out.println("Here are all the jobs found with the word " + information);
                System.out.println(allJobs.toString);
            }
        }
        else
        {
            System.out.println();
            System.out.println("Error: " + information + " doesnt exist in the job collection");
        }
    }
        
}