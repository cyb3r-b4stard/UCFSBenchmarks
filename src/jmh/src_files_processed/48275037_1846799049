
public class Car
{
    private Person driver;
    private Person[] passengers;
    public Car (){
        passengers = new Person[4];
        driver = null;
    }
    public Car(int aCapacity){
        if(aCapacity >= 4 && aCapacity <= 8){
            passengers = new Person[aCapacity];
        }
        else if(aCapacity > 8){
            passengers = new Person[8];
        }
        else if(aCapacity < 4){
            passengers = new Person[4];
        }
    }
    public int getCapacity(){
        return passengers.length;
    }
    public int getOccupancy(){
        int count = 0;
        if(passengers == null){
            return count;
        }
        for(int i = 0; i < passengers.length; i++){
            if(passengers[i] != null){
                count++;
            }
        }
        return count; 
    }
    public boolean hasRoom(){
        if(getCapacity() == getOccupancy()){
            return false;
        }
        else{
            return true;
        }
    }
    public Person getDriver(){
        if(driver == null){
            return null;
        }
        else{
            return driver;
        }
    }
    public boolean hasPassenger(Person person){
        if(passengers.contains(person){
            return true
        }
        else{
            return false;
        }
    }
    
}
   }    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
