
/* #### ### ####### - ######, ########## #
 * ####:
 * ########:
 * ##:
 */

import ecs100.*;
import java.awt.Color;

/** #########
 * ########## # ###### ######### #### ### #### ###### ## ### #####
 * 
 * # ######### #### #### ###### ## ##### ##### #####:
 *  - # ######## (# ### #)
 *  - # ######## ## ###### (## #####, ########## ## #######, ## ####### -####.## ### ####.##
 *  - ##### ######### ####
 *  - ##### #####
 *
 * # ######### #####
 *  - # ###########,
 *  - # ###### ## #### ## #### ### ####
 *  - ####### ## #### ### ### ## ### #### ### ### #####
 *    # ###### ###### ####### ### ######### ## ### ### ########.
 *    # ###### ###### ### # "######## #####": ####### ### ### ######## ##### ###
 *    ######## #####, ### ### ######## ##### ##### ### ######### ###### # ######
 *    ### ## #### ####.
 *  - # ###### ## #### ### ### ## ### ######## ####
 *  - ####### ## ##### ### ##########, ###### #### ### #### ### ########, ## #### ####### ###
 *    ##### ####### ###### ###### ### ##### ## ### ### ## ##### ## # #########
 *  - # ###### ## ###### ### ######### #### ## ### ###.
 *
 * ####### # ######### ###### #### ### ######## ### ######### ## ### ###.
 *   ## ### ###### #### # ######## #####, #### ### ####### ######### ## ###
 *   ######## ###### #### ## #####.
 *   
 * # ######### ### ####### #### # ####, ### ########, ## ####### #########.
 * - ######### #### # #### ##### # ###### ### ## ######
 * - ######### #### ### ######## ###### #### # ### ## ######
 * - ######### #### ### ##### ### ### #### # ###### ######, ###
 *   ###### #### ###### ## ####### ####, ### ### ########## ## ### #### ##### #######
 *  
 *   ### # ###### #### ######, ### ### ### #### #### #### #### 
 *   ##### ###### ###### ## ### ######## ########## ## ### #### -
 *   ##### ###### ## ### #### ###### #### # ######### ###### ####
 *   ##### ###### ## ### ##### ## ### ####.
 *   
 */
public class DodgemCar{
    int radius = 10;
    double initialX;
    double initialY;
    double direction;
    /*# YOUR CODE HERE */

    /*# YOUR CODE HERE */

    /** 
     * The parameters specify the initial position and direction
     */
    public DodgemCar(double x, double y, double dir)  {
        initialX = x;
        initialY = y;
        direction = dir;
        /*# YOUR CODE HERE */
        
    }


    /**
     * Turn the steering wheel one step more to the left (negative angle)
     * This governs how much the car turns on each move
     * Steering wheel can't turn more than 45 degrees to left or right
     */
    public void turnLeft(){
        direction = direction - 1;
        /*# YOUR CODE HERE */
        
    }

    /**
     * Turn the steering wheel one step more to the right (positive angle)
     * This governs how much the car turns on each move
     * Steering wheel can't turn more than 45 degrees to left or right
     */
    public void turnRight(){
        direction = direction + 1;
        /*# YOUR CODE HERE */
        
    }

    /**
     * Moves the car 1 unit forward
     * First changes the current direction according to the position of the
     * steering wheel (takes 20 moves to turn the car by the angle of the steering wheel)
     * Then moves forward by 1 unit
     */
    public void move() {
        while(true){
            UI.sleep(10);
            UI.eraseOval(initialX, initialY, radius, radius);
            draw();
        /*# YOUR CODE HERE */
        
    }

    /** draw the car */
    public void draw() {
        UI.drawOval(initialX, initialY, radius, radius);
        /*# YOUR CODE HERE */
        
    }

    /**
     * Check whether the car has collided with a wall. (Core)
     * if so, move it back so it isn't overlapping the wall, and 
     * reduce its life by the appropriate amount.
     */
    public void checkCollideWall(){
        /*# YOUR CODE HERE */
        
    }        

    /**
     * Check whether the car has collided with the obstacle. (Completion)
     * if so, move it back so it isn't overlapping the obstacle, and
     * reduce its life by the appropriate amount.
     */
    public void checkCollideObstacle(){
        /*# YOUR CODE HERE */
        
    }

    /** @return whether this car is touching the other car */
    public boolean checkCollideCar(DodgemCar other){
        /*# YOUR CODE HERE */
        
    }

    /**
     * Returns the amount of life left of this car (needed for Completion)
     */
    public double life(){
        /*# YOUR CODE HERE */
        
    }

    /**
     * Useful method for debugging: 
     * Returns a String rendering of the DodgemCar Object
     * which can be printed out for debugging.
     * Assumes that you called the fields x, y, and direction; you could change it.
     */
    public String toString(){
        return String.format("Car@(%.0f,%.0f)->%s", this.initialX, this.initialY, this.direction);
    }

}
