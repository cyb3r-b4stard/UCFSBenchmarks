import java.util.Random;
public class Last_First_Sorting
{
    int swaps;
    public static void main(String[] args){
        Random rand = new Random();
        int[] unsortedArray = new int[10000];
        for(int i=0; i<unsortedArray.length;i++)
        {
            unsortedArray[i] = rand.nextInt(10000);
        }
        
        final long START_TIME = System.currentTimeMillis();
        int [] bArray = bubbleSort(unsortedArray);
        final long END_TIME = System.currentTimeMillis();
        final long HOW_LONG = END_TIME - START_TIME;
        System.out.println("Bubble took: " + HOW_LONG);

        for(int i=0; i<unsortedArray.length;i++)
        unsortedArray[i] = rand.nextInt(10000);

        final long S_TIME = System.currentTimeMillis();
        int [] sArray = selectionSort(unsortedArray);
        final long E_TIME = System.currentTimeMillis();
        final long H_LONG = E_TIME - S_TIME;
        System.out.println("Selection took: " + H_LONG);

        for(int i=0; i<unsortedArray.length;i++)
        unsortedArray[i] = rand.nextInt(10000);

        final long SO_TIME = System.currentTimeMillis();
        int [] IArray = insertionSort(unsortedArray);
        final long EO_TIME = System.currentTimeMillis();
        final long HO_LONG = EO_TIME - SO_TIME;
        System.out.println("Insertion took: " + HO_LONG);
    }

    public static int[] selectionSort(int[] array){
        int swaps = 0;
        for (int i=0; i<array.length-1; i++) {
            for (int j=i+1; j<array.length; j++) {
                if (array[i] > array[j]) {
                    int temp = array[i];
                    array[i] = array[j];
                    array[j] = temp;
                    swaps++;
                }
            }
        }
        System.out.println("number of swaps: " + swaps);
        return array;
    }

    public static int[] bubbleSort(int[] array){
        int t;
        int swaps = 0;
        for(int i = 0; i < array.length - 1; i++){
            for( int j = 0; j<array.length - 1; j++){
                if(array[j] > array[j+1]){
                    t = array[j];
                    array[j] = array[j+1];
                    array[j + 1] = t;
                    swaps++;
                }
            }
        }
        System.out.println("number of swaps: " + swaps);
        return array;
    }

    public static int[] insertionSort(int[] array){
        int swaps = 0;
        for(int i = 0; i<array.length; i++){
            int temp;
            for(int j = i; j>0 && array[j] <array[j-1]; j--){
                temp = array[j];
                array[j] = array[j-1];
                array[j-1] = temp;
                swaps++;
            }
        }
        System.out.println("number of swaps: " + swaps);
        return array;
    }
    
    public static boolean verify(int [] array){
        for(int i = 0; i<array.length; i++){
            if(array[i]<array[i + 1]){
                verify == false;
            }
        }
    }
}