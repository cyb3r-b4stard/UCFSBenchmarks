
/**
 * ########### ### #### ### ###### ##########.
 * 
 * @###### 
 * @#######
 */
public class Bubblesort
{
    private int[] zahlen;
    

    /**
     * Konstruktor f√ºr Objekte der Klasse jh
     */
    public void jh()
    {
        zahlen = new int[] {(int)((Math.random()) * 100+ 1)};
        drucke (zahlen);
    }
    
    private void drucke (int[] Feld)
    {
    for (int i = 0; i < Feld.length; i++) {
            System.out.print(Feld[i] + ", ");
        }
    System.out.println();
    }
    
    
    public void sortiere() {
        
        zahlen = bubbleSort(zahlen);
        drucke (zahlen);
        
    }
    
   /* public void sortiere() {
        zahlen = selectionsort(zahlen);
        drucke (zahlen);
    } /*

    /*
     private int[] selectionsort(int[] sortieren) {
        for (int i = 0; i < sortieren.length - 1; i++) { 
            for (int j = i + 1; j < sortieren.length; j++) {
                if (sortieren[i] > sortieren[j]) {
                    int temp = sortieren[i]; 
                    sortieren[i] = sortieren[j];
                    sortieren[j] = temp; 
                }
            }
        }

        return sortieren;
    }
    }
    */
       
       
       
   private int[] bubbleSort1 (int [] sortieren){
   for (n=A.length; n>1; n=n-1){
    for (i=0; i<n-1; i=i+1){
      if (A[i] > A[i+1]){
        int temp = sortieren[i]; 
                    sortieren[i] = sortieren[j];
                    sortieren[j] = temp; 
      } 
    } 
  } 
  
  
}

/*private int[] bubbleSort1 (int [] sortieren){
   for (n=A.size; n>1; n=n-1){
    for (i=0; i<n-1; i=i+1){
      if (A[i] > A[i+1]){
        A.sortiere(i, i+1)
      } 
    } 
  } 
  
  */


 
 
 private int[]bubbleSort2 (int[] sortieren){
  n = A.size;
  do{
    sortieren = false;
    for (i=0; i<n-1; ++i){
      if (A[i] > A[i+1]){
        int temp = sortieren(i, i+1);
        sortieren = true;
      } 
    } 
    n = n-1;
  } while (sortieren == true);
}


private int[] bubbleSort3 (int[] sortieren){
  n = A.size;
  do{
    newn = 1;
    for (i=0; i<n-1; ++i){
      if (A[i] > A[i+1]){
        A.swap(i, i+1)
        newn = i+1
      } 
    } 
    n = newn
  } while (n > 1)

}
}
}