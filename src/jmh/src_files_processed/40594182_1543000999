
/**
 * ##### # ########### ## ##### ############ ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class TrafficLight
{
    private Circle red;
    private Circle yellow;
    private Circle green;
    private Rectangle black;
    private Boolean stop;
    private Circle redP;
    private Circle greenP;
    private Rectangle blackP;
    private Rectangle chassis;
    private Circle wheel1;
    private Rectangle window;
    private Rectangle road;
    private Rectangle sky;
    private Triangle cloud1;
    private Triangle cloud2;
   
    private Circle wheel2; 
    


    /**
     * Constructor for objects of class TrafficLight
     */
    public TrafficLight()
    {
        stop = true;
        

        
               sky = new Rectangle();
       sky.changeColor("cyan");
       sky.moveHorizontal(1);
       sky.moveVertical(1);
       sky.changeSize(9999999, 9999999);
       sky.makeVisible();
       
       road = new Rectangle();
       road.changeColor("green");
       road.moveHorizontal(1);
       road.moveVertical(600);
       road.changeSize(9999999, 9999999);
       road.makeVisible();
       
       cloud1 = new Triangle();
       cloud1.changeColor("white");
       cloud1.moveHorizontal(500);
       cloud1.moveVertical(350);
       cloud1.changeSize(50, 200);
       cloud1.makeVisible();

       
       cloud2 = new Triangle();
       cloud2.changeColor("white");
       cloud2.moveHorizontal(200);
       cloud2.moveVertical(250);
       cloud2.changeSize(50, 200);
       cloud2.makeVisible();
       
       chassis = new Rectangle();
       chassis.changeColor("blue");
       chassis.moveHorizontal(500);
       chassis.moveVertical(500);
       chassis.changeSize(200, 100);
       chassis.makeVisible();
       
       wheel1 = new Circle();
       wheel1.changeColor("black");
       wheel1.moveHorizontal(550);
       wheel1.moveVertical(600);
       wheel1.changeSize(60);
       wheel1.makeVisible();
       
       wheel2 = new Circle();
       wheel2.changeColor("black");
       wheel2.moveHorizontal(650);
       wheel2.moveVertical(600);
       wheel2.changeSize(60);
       wheel2.makeVisible();
       
       window = new Rectangle();
       window.changeColor("red");
       window.moveHorizontal(515);
       window.moveVertical(515);
       window.changeSize(80, 30);
       window.makeVisible();
       
               black = new Rectangle();
        black.changeColor("black");
        black.moveHorizontal(100);
        black.moveVertical(100);
        black.changeSize(100, 250);
        black.makeVisible();
        
        red = new Circle();
        red.changeColor("red");
        red.moveHorizontal(150);
        red.moveVertical(150);
        red.changeSize(50);
        red.makeVisible();
        
        yellow = new Circle();
        yellow.changeColor("yellow");
        yellow.moveHorizontal(150);
        yellow.moveVertical(210);
        yellow.changeSize(50);
        yellow.makeInvisible();
        
        green = new Circle();
        green.changeColor("green");
        green.moveHorizontal(150);
        green.moveVertical(270);
        green.changeSize(50);
        green.makeInvisible();
        
        blackP = new Rectangle();
        blackP.changeColor("black");
        blackP.moveHorizontal(300);
        blackP.moveVertical(100);
        blackP.changeSize(100, 250);
        blackP.makeVisible();
        
        redP = new Circle();
        redP.changeColor("red");
        redP.moveHorizontal(350);
        redP.moveVertical(150);
        redP.changeSize(50);
        redP.makeInvisible();
        

        
        greenP = new Circle();
        greenP.changeColor("green");
        greenP.moveHorizontal(350);
        greenP.moveVertical(270);
        greenP.changeSize(50);
        greenP.makeVisible();
    }
    
    

    /**
     * If the traffic light shows STOP, it changes to GO.
     * If the traffic light shows GO, it changes to STOP.
     */
    public void change() {
        
        if(stop == true){
            yellow.makeVisible();
            greenP.makeInvisible();
            pause();
            yellow.makeInvisible();
            red.makeInvisible();
            green.makeVisible();
            redP.makeVisible();
            moveLeft();
            stop = false;
            void change()
            
        }
        else if(stop == false){
            stop = true;
            green.makeInvisible();
            redP.makeInvisible();
            yellow.makeVisible();
            pause();
            yellow.makeInvisible();
            
            greenP.makeVisible();
            red.makeVisible();
            void change()
            
            
           
        }
        
    }
    
    public void moveLeft()
    {
       long t= System.currentTimeMillis();
       long end = t+3000;
       while(System.currentTimeMillis() < end) {
       chassis.slowMoveHorizontal(-1);
       wheel2.slowMoveHorizontal(-1);
       wheel1.slowMoveHorizontal(-1);
       window.slowMoveHorizontal(-1);

      }
    
          
    }
    
    public void moveRight()
    {
               long t= System.currentTimeMillis();
                long end = t+3000;
                while(System.currentTimeMillis() < end) {
       chassis.slowMoveHorizontal(1);
       wheel2.slowMoveHorizontal(1);
       wheel1.slowMoveHorizontal(1);
       window.slowMoveHorizontal(1);

    }

      
    }
    /*
     * Do not change anything in the pause method
     */
    private void pause() {
        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
        }
    }
}