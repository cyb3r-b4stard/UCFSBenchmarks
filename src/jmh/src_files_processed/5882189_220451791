import java.awt.Color;
public class EPicture extends Picture
{
    public EPicture()
    {
        super();
    }
    public EPicture(String fileName)
    {
        super(fileName);
    }
    public void negative()
    {
        Pixel [] lop = this.getPixels();,
        for (Pixel pixel : lop)
    {
        int red = pixel.getRed();
        int green = pixel.getGreen();
        int blue = pixel.getBlue();
        Color negColor = new Color(255-red, 255-green, 255-blue);
        pixel.setColor(negColor);
    }
}
public void greyscale()
{
    Pixel [] lop = this.getPixels();
    for (Pixel pixel : lop)
    {
      int red = pixel.getRed();
      int green = pixel.getGreen();
      int blue = pixel.getBlue();
      Color greyColor = new Color ((red+green+blue)/3);
      pixel.setColor(greyColor);
    }
}
public void forGreyScale()
{
    int width=this.getWidth();
    for (int x=0;x<width;x++)
    {
        int height=this.getHeight;
        for (int y=0;y<height;y++)
        {
            Pixel pixel=this.getPixelAt(x,y);
            int red = pixel.getRed();
            int green = pixel.getGreen();
            int blue = pixel.getBlue();
            Color greyColor = new Color ((red+green+blue)/3);
            pixel.setColor(greyColor);
        }
        
    }
}
public void blend(EPicture sourcePic, int sourceStartX, int sourceStartY, int sourceEndX, int sourceEndY, EPicture sourcePic, int startX, int startY)
{
    
}
 public void copyRegionFromSource(int sourceStartX, int sourceStartY, int sourceEndX, int sourceEndY, EPicture sourcePic, int startX, int startY)
    {
      int sourceX=sourceStartX;
      int targetX=startX;
      while (sourceX<=sourceEndX)
      {
        int sourceY=sourceStartY;
        int targetY= startY;
        while (sourceY<=sourceEndY)
        {
            Pixel sourcePixel=this.getPixel(sourceX,sourceY);
            Pixel targetPixel= sourcePic.getPixel(targetX,targetY);
            targetPixel.setColor(sourcePixel.getColor());
            sourceY++;
            targetY++;
        }
        sourceX++;
        targetX++;
      }
    }

}    
    
