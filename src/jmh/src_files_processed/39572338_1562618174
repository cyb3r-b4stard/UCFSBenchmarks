package assignments;
import java.util.Scanner;

/**
 * #### ##### #### ###### ## # # # ############, ########### ## # ######.
 * 
 * @###### #. ####
 * @####### ## ######## ####
 * @### ######## ##, #### ###
 */
public class Checkerboard
{
    private int numRC;
    
    /**
     * Construct a Checkerboard object rows and columns set equally by an 
     * integer parameter.  If n is less than 2, then set n to 2. 
     * @param n - the number of rows AND columns
     */
    public Checkerboard(int n)
    {
        if (n < 2)
        {
            n = 2;
        }
        else
        {
            n = numRC;
        }
    }
    
    /**
     * @return a String representation of the Checkerboard object
     */
    public String toString()
    {
        return createCheckerboard();
    }
    
    /**
     * Create a String that represents a checkerboard using the # and O 
     * symbols.  Note that a checkerboard alternates between # and o 
     * across both rows and columns AND contains an EQUAL number or 
     * rows and columns.  See page 204 for an example of a 7 x 7 board.
     * 
     * Hint: You will have to concatenate a String object.  Add \n to 
     * the String to create a new row.
     * 
     * @return a String representation of a checkerboard object
     */
    private String createCheckerboard()
    {
        String s1 = " ";
        for (int c = 0; c <= numRC; c++)
        {
          if (c % 2 == 0)
          {
              s1 = "#o";
          }
          else
          {
              s1 = "o#";
          }
          
          for (int r = 0; r <= numRC; r++)
          {
              System.out.println(s1);
          }
        }
        return Checkerboard(int numRC) + '\n';
    }
    
    public static void main(String[] args)
    {
        int numRowsCols;
        Scanner input = new Scanner(System.in);
        
        System.out.print("Enter a positive number of rows / cols: ");
        numRowsCols = input.nextInt();
        input.close();
        
        Checkerboard c1 = new Checkerboard(numRowsCols);
        System.out.println(c1);
    }
}