import java.util.Set;
import java.util.HashMap;

/**
 * ##### #### - # #### ## ## ######### ####.
 *
 * #### ##### ## #### ## ### "#######'# #####" ###########. 
 * # "####" ########## ### ######## ## ### ####### ## ### ####.  
 * ## ## ######### ## ##### ##### ### #####.  
 * ### #### ######## ####, ### #### 
 * ###### # ######### ## ### ########### ####.
 * 
 * @######  # #####
 * ######## #### ####### ####### ### ##### #. ######
 * @####### ### ####, ######## ####.##.##
 */

public class Room 
{
    private String description;
    private HashMap<String, Room> exits; 
	private String image;
	private HashMap<String, Item> item;

    /**
     * Create a room described "description". Initially, it has
     * no exits. "description" is something like "a kitchen" or
     * "an open court yard".
     * @param description The room's description.
     * @param imageFile An image file for the room.
     */
    public Room(String description, String imageFile) 
    {
        this.description = description;
        this.image = imageFile;
        exits = new HashMap<>();
        items = new HashMap<>();
    }

    /**
     * Define an exit from this room.
     * @param direction The direction of the exit.
     * @param neighbor  The room to which the exit leads.
     */
    public void setExit(String direction, Room neighbor) 
    {
        exits.put(direction, neighbor);
    }
    public void addItem(String itemDescription, Item item)
    {
        items.put(itemDescription, item);   
    }
    public void removeItem();
    
    public Boolean notEmpty();
    {
        return true;
    }
    else return false;

    /**
     * @return The short description of the room
     * (the one that was defined in the constructor).
     */
    public String getShortDescription()
    {
        return description;
    }

    /**
     * Return a description of the room in the form:
     *     You are in the kitchen.
     *     Exits: north west
     * @return A long description of this room
     */
    public String getLongDescription()
    {
        return "  You are " + description + ".\n  " + getExitString() + getItemString();
    }

    /**
     * Return a string describing the room's exits, for example
     * "Exits: north west".
     * @return Details of the room's exits.
     */
    private String getExitString()
    {
        String returnString = "  Exits:";
        Set<String> keys = exits.keySet();
        for(String exit : keys) {
            returnString += " " + exit;
        }
        return returnString;
    }
    private String getItemString()
    {
        String returnString = "  Items:";
        Set<String> keys = exits.keySet();
        for(String item : keys) {
            returnString += " " + items;
        }
        return returnString;
    }

    /**
     * Return the room that is reached if we go from this room in direction
     * "direction". If there is no room in that direction, return null.
     * @param direction The exit's direction.
     * @return The room in the given direction.
     */
    public Room getExit(String direction) 
    {
        return exits.get(direction);
    }

	/**
     * Return the name of a file containing the room's image.
     * @return An image file name.
     */
	public String getImage()
	{
		return image;
	}
}
