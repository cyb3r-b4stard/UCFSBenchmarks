import java.awt.*;
import javax.swing.*;
import java.util.*;
import java.awt.geom.*;

/**
 * ###### #### ### ######## ######### ### ### #######, 
 * ######### ## ## ####-######### ### ####### ######.
 * @####### #.#
 * @###### ####### ####
 */
public class Schildpad {
  private String kleur;
  private boolean verberg;
  private boolean penNeer;
  private ArrayList< Lijn > tekening;

  private final double RAD = Math.PI / 180.0;
  private double xEcht, yEcht,  
                 richting;      
  private final double xDefault = 1, yDefault = 599, richtingDefault = 90;
  private static SchildpadVenster venster = null;
  
  /**
   * Constructor voor een schildpad;
   * maakt een schildpad op positie (1, 599) die naar boven kijkt.
   */
  public Schildpad() {
    xEcht = xDefault;
    yEcht = yDefault;
    richting = richtingDefault;
    verberg = false;
    penNeer = false;
    tekening = new ArrayList< Lijn >();
    kleur = "red";
  }

 
 /**
 * MyPicture class has as attributes a number of shapes
 * and uses them to create pictures
 *
 * Name
 * Date
 */
public class MyPicture

{

    
   
   
    /**
     * Instantiates a new MyPicture object. This is a default constructor
     * that only gives values to one of the object's attributes - a circle
     * which is given the colour yellow and made visible.
     * The other attributes are set to NULL.
     */
   
   
    public MyPicture()
    {
     
    }
 
   
    }
   
     /**
     * A varied version of the one windowed house is created, which creates a new square located
     * to the right of the first square in order to create a two windowed house. 
     */public void createTwoWindowHouse(){
       
    }

    /**
     * This allows the user to select the colour of the porch. 
     */public void changePorchColour(String colour){
   
     
    
    }
    
    /**
     * Depending on which value that users input, a one or two windowed house is created. 
     */public void chooseAHouse(int choice){
       
        
       
        }

   
    /**
     * This changes the colour of the roof by selecting valid colours (e.g. "blue", "red", "green").
     */public void changeRoofColour(String colour){
   
  
}
 
    /**
     * This changes the colour of the roof by entering a valid number from 1-6.
     * (e.g. 1 = black, 6= white)
     * If the input is an invalid number, an error message is displayed. 
     */public void changeRoofColour2(int choice){
     
    
   
    
    
}
  public void tekenHuisvoorHuis()
{
  penNeer();
 
 
  slaap(400);
 
  
  vooruit (100);
  slaap(400);
  draaiRechts(90);
  slaap(400);
  vooruit (100);
  slaap(400);
  draaiRechts(180);
  vooruit(100);
  slaap(400);
  draaiRechts(135);
  vooruit (70.71);
  draaiRechts (45);
  vooruit(100);
  vooruit(-100);
  draaiRechts(45);
  vooruit (70.71);
  draaiRechts(45);
  vooruit(100);
  draaiRechts(90);
  vooruit(60);
  draaiRechts(90);
  vooruit(40);
  draaiLinks(90);
  vooruit(20);
  draaiLinks(90);
  vooruit(40);
  draaiRechts(90);
  vooruit(20);
 
  draaiRechts(90);
  
  

  
  draaiLinks(270);
  vooruit(100);
  
  draaiLinks(90);
  
  slaap(400);
 
  
    penOmhoog();
    draaiLinks(90);
    vooruit(95);
    draaiRechts(90);
    vooruit(50);
    penNeer();
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    draaiRechts(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    penOmhoog ();
    vooruit(-50);
    draaiRechts(90);
    penNeer();
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    draaiRechts(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    penOmhoog();
    draaiLinks(90);
    vooruit(5);
    draaiLinks(90);
    penNeer = true ;
    vooruit(40);
    penOmhoog ();
    vooruit(5);

    draaiRechts(90);
    vooruit(45);
    draaiRechts(180);
 

  

}
public void tekenHuisvoorFlat (){
  penNeer();
 
 
  slaap(400);
 
  
  vooruit (100);
  slaap(400);
  draaiRechts(90);
  slaap(400);
  vooruit (100);
  slaap(400);
  draaiRechts(180);
  vooruit(100);
  slaap(400);
  draaiRechts(135);
  vooruit (70.71);
  draaiRechts (45);
  vooruit(50);
  vooruit(-50);
  draaiRechts(45);
  vooruit (70.71);
  draaiRechts(45);
  vooruit(100);
  draaiRechts(90);
  vooruit(60);
  draaiRechts(90);
  vooruit(40);
  draaiLinks(90);
  vooruit(20);
  draaiLinks(90);
  vooruit(40);
  draaiRechts(90);
  vooruit(20);
 
  draaiRechts(90);
  
  

  
  draaiLinks(270);
  vooruit(100);
  
  draaiLinks(90);
  
  slaap(400);
 
    penOmhoog();
    draaiLinks(90);
    vooruit(95);
    draaiRechts(90);
    vooruit(50);
    penNeer();
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    draaiRechts(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    penOmhoog ();
    vooruit(-50);
    draaiRechts(90);
    penNeer();
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    draaiRechts(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    penOmhoog();
    draaiLinks(90);
    vooruit(5);
    draaiLinks(90);
    penNeer=true ;
    vooruit(40);
    penOmhoog ();
    vooruit(5);

    draaiRechts(90);
    vooruit(45);
    draaiRechts(180);
  
 

  

}
public void tekenFlatvoorHuis ()
{
    penNeer();
    
    
    draaiRechts(90);
    vooruit(100);
    vooruit(-100);
    draaiLinks(90);
    vooruit(200);
    draaiRechts(90);
    vooruit(150);
    draaiRechts(90);
    vooruit(50);
    draaiRechts(45);
    vooruit(70.71);
    draaiLinks(45);
    vooruit(100);
    vooruit(-200);
    vooruit(200);
    draaiRechts(90);
    vooruit(50);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
    vooruit(20);
    draaiLinks(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(30);
    vooruit(-100);
    draaiRechts(90); 
    
    penOmhoog();
    draaiLinks(90);
    vooruit(95);
    draaiRechts(90);
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
    draaiRechts(90);
    vooruit(5);
    draaiLinks(90);


}
public void tekenStad ()
{
      penNeer();
 
 
  slaap(400);
 
  
  vooruit (100);
  slaap(400);
  draaiRechts(90);
  slaap(400);
  vooruit (100);
  slaap(400);
  draaiRechts(180);
  vooruit(100);
  slaap(400);
  draaiRechts(90);
  vooruit (70.71);
  draaiRechts (45);
  vooruit(20);
  draaiRechts(45);
  vooruit(98.99);
  draaiRechts(45);
  vooruit(98.99);
  draaiRechts(45);
  vooruit(70.71);
  draaiRechts(180);
  vooruit (98.99);
  draaiRechts(45);
  vooruit(100);
  draaiRechts(90);
  vooruit(60);
  draaiRechts(90);
  vooruit(40);
  draaiLinks(90);
  vooruit(20);
  draaiLinks(90);
  vooruit(40);
  draaiRechts(90);
  vooruit(20);
  vooruit(1);
  draaiRechts(90);
  vooruit(1);
  

  
  draaiLinks(270);
  vooruit(100);
  
  draaiLinks(180);
  draaiRechts(90);
  vooruit(200);
  draaiRechts(90);
  vooruit(40);
  achteruit(20);
  draaiLinks(90);
  vooruit(10);
  draaiRechts(90);
  vooruit(6);
  draaiRechts(90);
  vooruit(10);
  draaiLinks(90);
  vooruit(14);
  draaiRechts(90);
  vooruit(200);
  draaiLinks(180);
}

public void tekenHorizon ()
{
    reset();
    vooruit(200);
    draaiRechts(90);
    penNeer();
    vooruit(599);
    vooruit(-599);
    draaiRechts(90);

}
public void tekenFlatvoorFlat(){
    penNeer();
    
    
    draaiRechts(90);
    vooruit(100);
    vooruit(-100);
    draaiLinks(90);
    vooruit(200);
    draaiRechts(90);
    vooruit(150);
    vooruit(-50);
    draaiRechts(90);
    vooruit(200);
    draaiRechts(90);
    vooruit(50);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
    vooruit(20);
    draaiLinks(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(-80);
    draaiRechts(90);
    penOmhoog();
    draaiLinks(90);
    vooruit(105);
    draaiRechts(90);
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
    draaiRechts(90);
    vooruit(5);
    draaiLinks(90);
    
}
public void tekenWolkBegin () { 
    reset();
    
    vooruit(400);
    draaiRechts(90);
    vooruit(60);
    draaiLinks(90);
    penNeer();
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    
    draaiRechts(90);
    
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
   
    draaiRechts(90);
    
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    
    draaiRechts(90);
    
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
} 
public void tekenWolkCasual (){
    penOmhoog();
    draaiRechts(180);
    vooruit(70);
    penNeer();
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    
    draaiRechts(90);
    
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
   
    draaiRechts(90);
    
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    
    draaiRechts(90);
    
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);
    draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
    vooruit(10);draaiLinks(90);
    vooruit(10);
    draaiRechts(90);
}
public void tekenRaampjesinflatjesvoorhuisjes () {
    penOmhoog();
    draaiLinks(90);
    vooruit(95);
    draaiRechts(90);
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
    draaiRechts(90);
    vooruit(5);
    draaiLinks(90);
    
    
    
    
}
public void tekenRaampjesinflatjesvoorflatjes (){
penOmhoog();
    draaiLinks(90);
    vooruit(105);
    draaiRechts(90);
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
     vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(40);
    penNeer();
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    vooruit(20);
    draaiRechts(90);
    penOmhoog();
    vooruit(-160);
    draaiRechts(90);
    vooruit(30);
    draaiLinks(90);
    draaiRechts(90);
    vooruit(5);
    draaiLinks(90); }

public void tekenRaampjesinHuisjes () {
    penOmhoog();
    draaiLinks(90);
    vooruit(95);
    draaiRechts(90);
    vooruit(50);
    penNeer();
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    draaiRechts(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    penOmhoog ();
    vooruit(-50);
    draaiRechts(90);
    penNeer();
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    draaiRechts(90);
    vooruit(30);
    draaiRechts(90);
    vooruit(40);
    penOmhoog();
    draaiLinks(90);
    vooruit(5);
    draaiLinks(90);
    penNeer();
    vooruit(40);
    penOmhoog ();
    vooruit(5);

    draaiRechts(90);
    vooruit(45);
    draaiRechts(180);
    
}
 public void tekenCirkel (double stap) {
 penNeer=true;
 for (int i=1;i<=360;i++) {
 vooruit (stap);
 draaiRechts(1);
 }
}
 

 
 public void tekenSpiraal (double stap )
 {draaiRechts(90);
 vooruit(200);
 penNeer = true;
 for ( int i = 1; i <= 2000; i++ ) {
 vooruit( stap);
 stap=stap-0.005;
 draaiRechts( 1 );}
 }
 public void tekenJuistehorizon () {
     vooruit(300);
     draaiLinks(90);
     vooruit(50);
     draaiRechts(90);
     draaiRechts(90);
     penNeer();
     vooruit(700);
     vooruit(-700);
     draaiLinks(90);
     
    }
    public void tekenWeg () {

        reset();
        
penOmhoog();
vooruit(150);
draaiRechts(90);
penNeer();
vooruit(600);
vooruit(-600);
draaiLinks(90);
penOmhoog();
vooruit(80);
draaiRechts(90);
penNeer();
vooruit(600);
vooruit(-600);
draaiRechts(90);
penOmhoog();
vooruit(40);
draaiLinks(90);

vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();
vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();vooruit(20);
penNeer(); 
vooruit(35);
penOmhoog ();
reset();
        
    }
public void tekenAlles () {
   vooruit(-50);
    reset();
  
    tekenJuistehorizon ();
tekenFlatvoorFlat ();
tekenFlatvoorHuis ();
tekenHuisvoorHuis ();
tekenHuisvoorFlat ();
tekenFlatvoorHuis ();
tekenHuisvoorHuis ();
tekenHuisvoorFlat ();

tekenWeg ();



}
public void tekenHumvee () {
    reset();
    vooruit(30);
    draaiRechts(90); vooruit(40);
    draaiLinks(90);
    penNeer();
    vooruit(30);
    draaiRechts(45);
    vooruit(20);
    draaiRechts(135);
    vooruit(60);
    draaiRechts(90);
    vooruit(33.21);
    draaiRechts(90);
    vooruit(63.21);
    
    
}
public void tekenZon (){
    vooruit(610));
    draaiLinks(90);
    vooruit(50);
    draaiRechts(90);
    setKleur(  "geel") ;
    penNeer();
    for ( int i = 1; i <= 2000; i++ ) {
 vooruit( 2);
 
 draaiRechts( 1 );}
}


 
public void achteruit( double x ) {
    vooruit( -x );
  }

  /** 
   * Doe de pen naar beneden, zodat vanaf nu de schildpad tekent als 
   * vooruit of achteruit gaat.
   */
  public void penNeer() {
    penNeer = true;
  }

  /** 
   * Doe de pen omhoog, zodat vanaf nu de schildpad niet tekent.
   */
  public void penOmhoog() {
    penNeer = false;
  }

  /** 
   * Levert de waarde true als de pen van de schilpad naar beneden is 
   * zodat hij kan tekenen.
   * Levert false als dat niet zo is.
   * @return de waarde van het attribuut penNeer
   */

  public boolean isPenNeer() {
    return penNeer;
  }

  /**
   * De schildpad loopt een aantal pixels vooruit. 
   * @param x het aantal pixels dat de schildpad vooruit loopt; mag ook negatief zijn
   */
  public void vooruit( double x ) {
    Point2D.Double a = null, b = null;
    if( penNeer ) {
      a = new Point2D.Double( xEcht, yEcht );
    }
    xEcht += x * Math.cos ( richting * RAD );
    yEcht -= x * Math.sin ( richting * RAD );
    if( penNeer ) {
      b = new Point2D.Double( xEcht, yEcht );
      Line2D.Double line = new Line2D.Double( a, b );
      tekening.add( new Lijn( line, kleur ) );
    }
    teken();
  }

  /**
   * Wis de tekening van deze schildpad.
   */
  public void wisTekening() {
    tekening.clear();
    teken();
  }


  /**
   * De schildpad draait naar links.
   * @param hoek het aantal graden dat de schildpad naar links draait; mag negatief zijn
   */
  public void draaiLinks( double hoek ) {
    richting += hoek;
    while( richting > 360.0 )
      richting -= 360.0;
    while( richting < 0.0 )
      richting += 360.0;
    teken();
  }

  /**
   * De schildpad draait naar rechts over de opgegeven hoek.
   * @param hoek het aantal graden dat de schildpad naar rechts draait; mag negatief zijn
   */
  public void draaiRechts( double hoek ) {
    draaiLinks( -hoek );
  }


  /**
   * Levert de x-coordinaat van de positie van de schildpad.
   * @return de waarde van de x-coordinaat van deze schildpad
   */
  public int getX() {
    return round( xEcht );
  }
  
  /**
   * Levert de y-coordinaat van de positie van de schildpad.
   * @return de waarde van de y-coordinaat van deze schildpad
   */
  public int getY() {
    return round( yEcht );
  }
  
  /**
   * Levert de richting waarin de schildpad kijkt in graden. 
   * Een paar voorbeelden:
   * 0 graden is naar rechts,
   * 90 graden is naar boven,
   * 180 graden is naar links,
   * 270 graden is naar beneden.
   * @return de waarde van het attribuut richting
   */
   public int getRichting() {
    return round( richting );
  }

  /**
   * Toont deze schildpad in het venster.
   */
  public void toon() {
    verberg = false;
    teken();
  }

  /**
   * Verbergt deze schildpad in het venster.
   */
  public void verberg() {
    verberg = true;
    teken();
  }

  /**
   * Levert true als deze schildpad verborgen is.
   * Anders false
   * @return de waarde van het attribuut verberg
   */
  public boolean isVerborgen() {
    return verberg;
  }

  /**
   * Levert de kleur van de schildpad (en daarmee van de pen).
   * @return de waarde van het attribuut kleur
   */
   public String getKleur() {
    return kleur;
  }
  
  /**
   * Zet deze schildpad terug op zijn uitgangspositie.
   */
  public void reset(){
    xEcht = xDefault;
    yEcht = yDefault;
    richting = richtingDefault;
    verberg = false;
    penNeer = false;
    kleur = "blauw";
    teken();    
  }
  
  /**
   * Verandert de kleur van de schildpad. 
   * Toegestane invoer: "blauw", "geel", "groen"
   * "rood" of "zwart". 
   * Bij een niet geldige kleur wordt de schildpad in zwart getekend.
   * @param kleur de kleur die de schildpad en de pen moeten aannemen
   */
  public void setKleur( String kleur ) {
    this.kleur = kleur;
    teken();
  }

  /**
  * Zet de schildpad op positie (x,y).
  * @param x de nieuwe x-coordinaat van de schildpad
  * @param y de nieuwe y-coordinaat van de schildpad
  */
  public void gaNaar( double x, double y ) {
    xEcht = x;
    yEcht = y;
    teken();
  } 

  /**
   * Verander de richting van de schilpad.
   * Een paar voorbeelden:
   * 0 graden is naar rechts,
   * 90 graden is naar boven,
   * 180 graden is naar links,
   * 270 graden is naar beneden.
   * @param richting de nieuwe richting van de schildpad
   */
  public void setRichting( double richting ) {
    this.richting = richting;
    teken();
  }

  /**
    Laat de schildpad slapen
    @param ms het aantal milliseconden dat de schildpad slaapt
  */  
  public void slaap( int ms ) {
    try { Thread.sleep( ms ); }
    catch( InterruptedException e ) { }
  }
 

  private void teken() {
    if( venster == null )
      venster = new SchildpadVenster( "Venster voor schildpadden" );
    if( !venster.isZichtbaar() )
      venster.maakZichtbaar( true );
    venster.teken( this );
  }
  
  private int round( double x ) {
    return (int) Math.round( x );
  }
  
  private ArrayList< Lijn > getTekening() {
    return tekening;
  }
  
  
  
  
  private class Lijn {
    private Line2D.Double line;
    private String kleur;
    
    public Lijn( Line2D.Double line, String kleur ) {
      this.line = line;
      this.kleur = kleur;
    }
    
    Line2D.Double getLine() {
      return line;
    }
    
    String getKleur() {
      return kleur;
    }
  }
        
  private class SchildpadVenster {
    private final double RAD = Math.PI / 180.0;  
    private JFrame frame;
    private TekenPaneel paneel;
    private Graphics gB;
    private Image buffer;
    
    private HashSet<Schildpad> database;
    private HashMap<String,Color> kleurMap;
   
    public SchildpadVenster( String titel ) {
      frame = new JFrame( titel );
      paneel = new TekenPaneel();
      frame.setContentPane( paneel );
      paneel.setPreferredSize( new Dimension( 600, 600 ) );
      frame.pack();
      database = new HashSet< Schildpad >();
      kleurMap = new HashMap< String,Color >();
      kleurMap.put( "blauw", Color.blue   );
      kleurMap.put( "geel",  Color.yellow );
      kleurMap.put( "groen", new Color( 58, 165, 5 ) );
      kleurMap.put( "rood",  Color.red    );
      kleurMap.put( "zwart", Color.black  );
      maakZichtbaar( true );
    }  
    
    
    public void maakZichtbaar( boolean zichtbaar ) {
      if( gB == null ) {
        Dimension dim = paneel.getSize();
        buffer = frame.createImage( dim.width, dim.height );
        gB = buffer.getGraphics();
      }
      frame.setVisible( zichtbaar );
    }
    
    public void teken( Schildpad s ) {
      database.add( s );
      herschilder();
    }
      
    public void verwijder( Schildpad s ) {
      database.remove( s );
      herschilder();
    }
  
    public boolean isZichtbaar() {
      return frame.isVisible();
    }
    
    private void herschilder() {
      maakBufferSchoon();
      for( Schildpad sp : database ) {
        ArrayList< Lijn > tekening = sp.getTekening();
        for( Lijn lijn : tekening ) {
          Color color = kleurMap.get( lijn.getKleur() );
          gB.setColor( color != null? color : Color.black );
          tekenLijn( lijn.getLine() );
        }
        if( !sp.isVerborgen() )
          tekenSchildpad( sp );
        paneel.repaint();
      }
    }
    
    private void maakBufferSchoon() {
      gB.setColor( Color.white );
      Dimension dim = paneel.getSize();
      gB.fillRect( 0, 0, dim.width, dim.height );
    }
    
    private void tekenLijn( Line2D.Double lijn ) {
      gB.drawLine( round( lijn.getX1() ), round( lijn.getY1() ), round( lijn.getX2() ), round( lijn.getY2() ) );
    }
      
    private void tekenSchildpad( Schildpad sp ) {
      Color color = kleurMap.get( sp.getKleur() );
      gB.setColor( color != null? color : Color.black );
      double x = sp.getX();
      double y = sp.getY();
      double richting = sp.getRichting();
      
      tekenCirkel( x, y, 6 );
      
      int dx =  -18;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      tekenCirkel( x, y, 12 );
      
      dx = 10;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      richting += 90;
      dx = 10;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      tekenCirkel( x, y, 4 );
  
      dx = -20;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      tekenCirkel( x, y, 4 );
      
      richting += 90;
      dx = 20;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      richting += 90;
      dx = 2;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      tekenCirkel( x, y, 4 );
  
      dx = -24;
      x += dx * Math.cos ( richting * RAD );
      y -= dx * Math.sin ( richting * RAD );
      tekenCirkel( x, y, 4 );
    }
    
    private void tekenCirkel( double xMpt, double yMpt, int r ) {
      gB.fillOval( round( xMpt - r ), round( yMpt - r ), r+r, r+r );
    }
  
    private int round( double x ) {
      return (int) Math.round( x );
    }
     
    private class TekenPaneel extends JPanel {
      public void paint( Graphics g ) {
        g.drawImage( buffer, 0, 0, null );
      }
    }
  }
}