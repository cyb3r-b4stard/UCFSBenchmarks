
/**
 * ### ###### ##### ####### # ###### #### # ###### (######## ######) ### # ####
 * (###### ######) #### ### ####### ### ########## ####### ## ### ###### ## ### ######.
 * ##### ## ## ######### ###### ## ##### ### ###### ### #### ## #### #### #### #### ##### ## ########
 * ##########, ### ## ##### ### ###### ### ### ## ###### ## ### ####### ###### #### ########
 * #### ### ######.
 * 
 * @###### ######## ####### ########## 
 * @####### ###### ####
 */
public class Artist
{
    private Canvas myCanvas;
    private Circle ball;
    private Triangle rocket;

    /**
     * The constructor for the Artist class labels the canvas, creates
     * circle and triangle objects, places their orientation points near 
     * the center of the canvas and makes both objects' graphical 
     * representations visible.
     */
    public Artist()
    {
        myCanvas = new Canvas("Lab 2");
        ball = new Circle(myCanvas);
        ball.moveTo(myCanvas.getWidth()/2,myCanvas.getHeight()/2);      
        ball.makeVisible();
        
        rocket = new Triangle(myCanvas);    
        rocket.moveTo(myCanvas.getWidth()/2,myCanvas.getHeight()/2);      
        rocket.makeVisible();

    }
    
    /**
     * moveAway( ) causes the ball and rocket to move in opposite directions -
     * ball moves southwest, and rocket moves northeast.
     * 
     * Observe where the new ball and rocket are placed in the graphics window
     * by their constructors.
     * 
     * Use moveDirection() once to move the ball to the lower-left (southwest).
     * Use moveDirection() once to move the rocket to the upper-right (northeast).
     * You are free to choose the distances each object will move.
     * Don't forget that you should use negative distances,  where appropriate.
     */
    
    public void moveAway()
    {
        if(xPosition rocket == xPosition ball)
            xPosition rocket = xPosition + 10;
            xPostion ball = xPostion - 10;
    }
    
    /**
     * "Exit the game" and clear the canvas, so that ball and rocket
     * disappear.
     * 
     */
    public void exit()
    {
        myCanvas.eraseAll();
        myCanvas.setVisible(false);
    }

    /**
     * "Restart" the ball and rocket, so that they return to their
     * original positions in the center of the canvas and become visible.
     * 
     */
    public void restart()
    {   
        ball.moveTo(myCanvas.getWidth()/2,myCanvas.getHeight()/2);      
        ball.makeVisible();
        
        rocket.moveTo(myCanvas.getWidth()/2,myCanvas.getHeight()/2);      
        rocket.makeVisible();

    }
}