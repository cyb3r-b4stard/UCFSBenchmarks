/**
 * ##### ######## ### ######### # #### ######
 * ######## ###### #### #### ### #### ### (###), ####### ## #### ##, ####.
 * 
 * @###### ####.#
 * @####### #.#
 * @#### ##.##.####
 */

public class Tank
{
    private Fish myFish;
    private boolean full;
    private Feeder feeder;
    private boolean hasFeeder;

    /**
     * Constructor for objects of class Tank
     */
    public Tank(boolean newfeeder)
    {
        full = false;
        myFish = null;
        feeder = null;
        hasFeeder = false;
    }

    /**
     *  Add a fish to the Tank.
     *  @param fish, the fish to the tank
     */    
    public void addFish(Fish fish)
    {
        if(!full)
        {
            myFish = fish; 
            full = true;
        }
        else
        {
            System.out.println("Sorry there is no room in the tank. It is already occupied and the resident fish will not share. ");
        }  
    }

    /**
     * Remove the fish - e.g. if it has died.
     */        
    public void removeFish()
    {
        if(full)
        {
            myFish = null;
            full = false;
        }
    }

    /**
     * Returns the tank's fish (which may be null).
     * @return The fish that lives in the tank
     */        
    public Fish getFish()
    {
        return myFish;
    }

    /**
     * Returns True if a fish is living in the tank. False if the tank is empty.
     * @return the emptiness of the tank. 
     */        
    public boolean hasFish()
    {
        return full;
    }

    /**
     * Prints information about this tank and any fish living in it.
     */
    public void printTank()
    {
        System.out.println("************************");
        System.out.println("Welcome to my Tank");
        if(full)
        {
            System.out.println("There is a fish living in it.");
            System.out.println(myFish.toString());
        }
        else
        {
            System.out.println("The tank is currently empty");
        }
        System.out.println("The tank is currently empty");
    }


    /**
     *  Add a feeder to the Tank.
     *  @param fish, the fish to the tank
     */    
    public void addFeeder(Feeder feeder)
    {
        if(!hasFeeder)
        {
            feeder = Feeder
            hasFeeder = true;
        }
        else
        {
            System.out.println("There is a feeder connected to the tank.");
        }  
    }
}