import java.io.*;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;

/**
 * ### ########## ##### #### #### ##### #### ### ###### ##### ### ######## ### #######(####)
 * ###########.  #### ##### ###### ### #### ######.
 * 
 * @###### #### ######
 * @####### #.#
 */
public class Dictionary
{   
    public static void main(String[] args) throws FileNotFoundException 
    {
        Dictionary dictionary = new Dictionary();
        Read input = new Read();
        ArrayList<String> words = new ArrayList<>();
        try {
            words =input.read();
        }
        catch(FileNotFoundException e) {
            System.out.println ("The File Can not be Found");
        }
        PrintWriter outFile = new PrintWriter("results.txt");
        ArrayList<String> singlesList = dictionary.format(words, outFile);
        for(String single : singlesList) {
            print.write(single + " "  +"\n");
        }
        
        outFile.close();
    }

    /**
     * remove duplication if
     * the word had been previously duplicated.
     * 
     * @param ArrayList<String>, PrintWriter print.
     */
    public ArrayList<String> format(ArrayList<String> s, PrintWriter print)
    {
        ArrayList<String> singlesList = new ArrayList<>();
        for(String word: s) {
            if(!singlesList.contains(word)) {
                singlesList.add(word);
            }
        }
        Collections.sort(singlesList);
        return singlesList;
    }
    
    /**
     * Add a wordcount for everyword, if the word has been duplicated
     * the wordcount will be however many times the words was duplicated
     * 
     * @pram ArrayList<String>
     * @return ArrayList<int>
     */
    public ArrayList<int> wordCount(ArrayList<String> s)
    {
        ArrayList<int> count = new ArrayList<>();
        return count;
    }
}