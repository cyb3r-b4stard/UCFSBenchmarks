
/**
 * ######### ############### ## ###### ## # ######### ###### ### ########## ### ### #### ##### ## # ### ## #########.
 * 
 * @###### ####### ##### 
 * @####### #.#
 */
public class Model

{
    private String firstName;
    private String lastName;
    private int heightInches;
    private double weightPounds;
    private boolean isWillingToTravel;
    private boolean isSmoker;
    public static final int IN_PER_FOOT = 12;
    public static final int BASE_RATE = 60;
    public static final int TALL_INCHES = 67;
    public static final double THIN_POUNDS = 140.0;
    public static final int TALL_THIN_BONUS = 5; 
    public static final int TRAVEL_BONUS = 4;
    public static final int SMOKER_DEDUCTION = 10; 

    /**
     * Constructor for objects of class Model
     */
    public Model()
    {

    }

    /**
     * Constructor of objects of class Model
     * @param modelFirstName
     * @param modelLastName
     * @param modelHeightInches
     * @param modelWeightPounds
     * @param modelIsWillingToTravel
     * @param modelIsSmoker
     */
    public Model(String modelFirstName, String modelLastName, int modelHeightInches, double modelWeightPounds, boolean modelIsWillingToTravel, boolean modelIsSmoker)
    {
        setFirstName(modelFirstName);
        setLastName(modelLastName);

        setHeightInches(modelHeightInches);
        setWeightPounds(modelWeightPounds);

        setIsWillingToTravel(modelIsWillingToTravel);
        setIsSmoker(modelIsSmoker);
    }

    /**
     * Get model first name
     *  @return firstName
     */
    public String getFirstName()
    {
        return firstName;
    }

    /**
     * Get model last name
     *  @return lastName
     */
    public String getLastName()
    {
        return lastName;
    }  

    /**
     * Get model height in inches
     *  @return heightInches
     */
    public int getHeightInches()
    {
        return heightInches;
    }  

    /**
     * Get model weight in pounds
     *  @return weightPounds
     */
    public double getWeightPounds()
    {
        return weightPounds;
    }  

    /**
     * Get model's travel availability 
     *  @return isWillingToTravel
     */
    public boolean isWillingToTravel()
    {
        return isWillingToTravel;
    }  

    /**
     * Get model's smoking habits
     *  @return isSmoker
     */
    public boolean getisSmoker()
    {
        return isSmoker;
    }

    /**
     * @param firstName the first name to set 
     */
    public void setFirstName(String modelFirstName) 
    {
        firstName = modelFirstName;
    }

    /**
     * @param lastName the last name to set 
     */
    public void setLastName(String modelLastName) 
    {
        lastName = modelLastName;
    } 

    /**
     * @param height the new height to set 
     */
    public void setHeightInches(int modelHeightInches) 
    {
        if (modelHeightInches >0)
        {
            heightInches = modelHeightInches;
        }
        else {
            System.out.println("Invalid value. Use a positive amount") ;
        }

    }

    /**
     * @param weight the new weight to set 
     */
    public void setWeightPounds(double modelWeightPounds) 
    {
        if (modelWeightPounds>0)
        {
            weightPounds = modelWeightPounds;
        }

        else {
            System.out.println("Invalid value. Use a positive amount");
        }
    } 

    /**
     * @param modelIsWillingToTravel 
     */
    public void setIsWillingToTravel(boolean modelIsWillingToTravel) 
    {
        isWillingToTravel = modelIsWillingToTravel;
    } 

    /**
     * @param isSmoker 
     */
    public void setIsSmoker(boolean modelIsSmoker)

    {
        isSmoker = modelIsSmoker;
    } 

    /** Converts height to feet and inches and returns value as a String.
     * @return heightFeet
     *  
     */
    public String convertHeighttoFeetInches()
    { 
        int heightFeet = heightInches/IN_PER_FOOT; 
        int remainder = heightInches % IN_PER_FOOT;

        return heightFeet + "Feet" + remainder + "inches";                                                    
    }

    /**
     * Calculates the model per-hour pay rate and returns the amount based on model features and bonus.
     * @return the hourly pay of the model 
     * 
     */
    public int calculatePayPerHour () {

        maximumPay = BASE_RATE + TALL_THIN_BONUS_ + TRAVEL_BONUS;
        minimumPay = BASE_RATE; 
        if (heightInches > TALL_INCHES && weightPounds < THIN_POUNDS && isWillingToTravel == true && isSmoker == false){
            return maximumPay;             
        }

        if (isSmoker == true){
            return calculatePayPerHour()- SMOKER_DEDUCTION;                    
            }

        if (isWillingToTravel ==
        }
     
    
    /**
     * Display the information for this model object
     * 
     */

    public void displayModelDetails(){

        System.out.println("Name: " + firstName + lastName);
        System.out.println("Height: " + convertHeighttoFeetInches());
        System.out.println("Weight: " + weightPounds + "pounds");
        System.out.println("Travels: " + isWillingToTravel);
        System.out.println("Smokes: " + isSmoker);
        System.out.println ("Hourly Rate:"+ "test"); 
    }
}
