
/**
 * ##### # ########### ## ##### # ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
import java.util.*;
public class p

{public int partition(int[] a ) {
    int pivot = a[lesser];
    int result;
     int [] lesser=new int[a]; int[] greater;
    while(lesser <= greater) {
        while(a[lesser]<pivot)
            lesser++;
        while(a[greater]>pivot)
            greater--;
         
        if(lesser <= greater) {
            int tmp = a[lesser];
            a[lesser] = a[greater];
            a[greater] = tmp;
             
            lesser++;
            greater--;
        }
    }  
    result=lesser;
    return result;
  }
 


public static double[] partitionInPlace(double[]a)
{  
    double pivotValue=a[0];
    int j=0;  
    a[0]=a[a.length-1];
    a[a.length-1] = pivotValue; 
    for (int i=0; i<a.length-1; i++)
      {
          if(a[i]<pivotValue){
          double temp=a[i];
          a[i]=a[j];
          a[j]=temp;
          j++;
        }
    }
    double temp=a[j];
    a[j]=a[a.length-1];
    a[a.length-1]=temp;
    return a;
          
} 



public static void main(String[] args)
    {
      int[]randNum=new int[100000];
      int [] num=new int[1000];
      double time;
     for(int i=0;i<num.length-1; i++){
       for(int k=0; k<randNum.length-1; k++)
        randNum[k]=(int)(Math.random()*99000);
      }
       long startTime = System.currentTimeMillis();
           time1 =partition(100000);
       long endTime = System.currentTimeMillis();
       long totalTime = endTime - startTime;
            System.out.println("time: "+time+" milliseconds");
    }
     
    { 
       long startTime = System.currentTimeMillis();
            time2= partitionInPlace(100000);
       long endTime = System.currentTimeMillis();
       long totalTime = endTime - startTime;
            System.out.println("Time: "+ time +" milliseconds");
    }
    
    
  }
    
 }
       
