import java.io.*;
class Game
{
    public void Hangman()throws IOException
    {     
        String word,clue;   
        int option;
        PrintWriter p = new PrintWriter(System.out,true);   

        public void Hang1() throws IOException
        {
            p.println("      _______   ");
            p.println("     |       |");
            p.println("     |");
            p.println("     |");
            p.println("     |");
            p.println("     |");
            p.println("     |");
            p.println("_____|_____ ");
        }

        public void Hang2() throws IOException
        {
            p.println("      _______ ");
            p.println("     |       |");
            p.println("     |      ( )");
            p.println("     |       ");
            p.println("     |");
            p.println("     |");
            p.println("     |");
            p.println("_____|_____ ");
        }

        public void Hang3() throws IOException
        {
            p.println("      _______ ");
            p.println("     |       |");
            p.println("     |      ( )");
            p.println("     |       |");
            p.println("     |       |");
            p.println("     |       |");
            p.println("     |");
            p.println("_____|_____ ");
        }

        public void Hang4() throws IOException
        {
            p.println("      _______ ");
            p.println("     |       |");
            p.println("     |      ( )");
            p.println("     |       |");
            p.println("     |       |");
            p.println("     |       |");
            p.println("     |      /");
            p.println("_____|_____ ");
        }

        public void Hang5() throws IOException
        {
            p.println("      _______ ");
            p.println("     |       |");
            p.println("     |      ( )");
            p.println("     |       |");
            p.println("     |       |");
            p.println("     |       |");
            p.println("     |      / \\");
            p.println("_____|_____ ");
        }

        public void Hang6() throws IOException
        {
            p.println("      _______ ");
            p.println("     |       |");
            p.println("     |      ( )");
            p.println("     |       |");
            p.println("     |      /|");
            p.println("     |       |");
            p.println("     |      / \\");
            p.println("_____|_____ ");
        }

        public void Hang7() throws IOException
        {
            p.println("      _______ ");
            p.println("     |       |");
            p.println("     |      ( )");
            p.println("     |       |");
            p.println("     |      /|\\");
            p.println("     |       |");
            p.println("     |      / \\");
            p.println("_____|_____ ");
        }

        public String[] Sports() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "He is a Portuguese professional footballer who plays for Spanish club Real Madrid and the Portugal national team.";
                    word = "C R I S T I A N O | R O N A L D O | D O S | S A N T O S | A V E I R O";
                }
                break;
                case 1:
                {
                    clue = "First Indian person to score 6 sixes.";
                    word = "R A V I | S H A S T R I";
                }
                break;
                case 2:
                {
                    clue = "It is a South Asian team sport.";
                    word = "K A B A D D I";
                }
                break;
                case 3:
                {
                    clue = "It is a two-player board game.";
                    word = "B A C K G A M M O N";
                }
                break;
                case 4:
                {
                    clue = "It is a team sport in which two teams of six players are separated by a net.";
                    word = "V O L L E Y B A L L";
                }
                break;
                case 5:
                {
                    clue = "World Chess Champion.";
                    word = "S V E N | M A G N U S | O E N | C A R L S E N";
                }
                break;
                case 6:
                {
                    clue = "World Table Tennis Champion.";
                    word = "M A | L O N G";
                }
                break;
                case 7:
                {
                    clue = "The national sport of India.";
                    word = "F O O T B A L L";
                }
                break;
                case 8:
                {
                    clue = "Played on a hard board divided by a net.";
                    word = "T A B L E | T E N N I S";
                }
                break;
                case 9:
                {
                    clue = "Known as 'The wall'.";
                    word = "R A H U L | D R A V I D";
                }
                break;
            }
            return new String[] {word,clue};
        }

        public String[] Movies() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "The film details the unlikely partnership between a rabbit police officer and a red fox as they uncover a conspiracy that involves the disappearance of predator civilians within a mammalian metropolis.";
                    word = "Z O O T O P I A";
                }
                break;
                case 1:
                {
                    clue = "It is a 2012 Indian satirical comedy film that satires organized religion directed by Umesh Shukla.";
                    word = "O H | M Y | G O D";
                }
                break;
                case 2:
                {
                    clue = "It is a 2016 American fantasy adventure film, produced by Walt Disney Pictures, where an orphaned human boy who, guided by his animal guardians, sets out on a journey of self-discovery while evading the threatening Shere Khan.";
                    word = "J U N G L E | B O O K";
                }
                break;
                case 3:
                {
                    clue = "It is a movie about 2 kids who becomes spies.";
                    word = "S P Y | K I D S";
                }
                break;
                case 4:
                {
                    clue = "It is a 2013 American supernatural horror film directed by James Wan and written by Chad Hayes and Carey Hayes. ";
                    word = "T H E | C O N J U R I N G";
                }
                break;
                case 5:
                {
                    clue = "This film tells the story of Jamal Malik,a young man from the Juhu slums of Mumbai who appears on the Indian version of 'Who Wants to Be a Millionaire?'.";
                    word = "S L U M D O G | M I L L I O N A R E";
                }
                break;
                case 6:
                {
                    clue = "It is a 2016 Finnish-American 3D computer-animated action-adventure comedy film based on the video game series of the same name.";
                    word = "T H E | A N G R Y | B I R D S | M O V I E";
                }
                break;
                case 7:
                {
                    clue = "This film stars Macaulay Culkin as Kevin McCallister, an eight-year-old boy, who is mistakenly left behind when his family flies to Paris for their Christmas vacation.";
                    word = "H O M E | A L O N E";
                }
                break;
                case 8:
                {
                    clue = "It is a 2016 Indian comedy film co-written and directed by Sajid-Farhad. It was released on 3rd june,2016.";
                    word = "H O U S E F U L L | T H R E E";
                }
                break;
                case 9:
                {
                    clue = "This film consists of many superheroes.";
                    word = "A V E N G E R S | A G E | O F | U L T R O N";
                }
                break;
            }
            return new String[] {word,clue};        
        }

        public String[] Computers() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "It is a programming paradigm based on the concept of 'objects', which may contain data, in the form of fields, often known as attributes; and code, in the form of procedures, often known as methods.";
                    word = "O B J E C T | O R I E N T E D | P R O G R A M M I N G";
                }
                break;
                case 1:
                {
                    clue = "It is a type of user interface that allows users to interact with electronic devices through graphical icons and visual indicators.";
                    word = "G R A P H I C A L | U S E R | I N T E R F A C E";
                }
                break;
                case 2:
                {
                    clue = "A screen that displays output from a computer.";
                    word = "M O N I T O R";
                }
                break;
                case 3:
                {
                    clue = "It is a global computer network providing a variety of information and communication facilities, consisting of interconnected networks using standardized communication protocols.";
                    word = "I N T E R N E T";
                }
                break;
                case 4:
                {
                    clue = "It is temporary storage for files that have been deleted in a file manager by the user, but not yet permanently erased from the file system.";
                    word = "R E C Y C L E | B I N";
                }
                break;
                case 5:
                {
                    clue = "It is an IDE for Java.";
                    word = "B L U E J";
                }
                break;
                case 6:
                {
                    clue = "It is an application developed by Microsoft that is used for playing audio, video and viewing images.";
                    word = "W I N D O W S | M E D I A | P L A Y E R";
                }
                break;
                case 7:
                {
                    clue = "It is a software application that provides comprehensive facilities to computer programmers for software development.";
                    word = "I N T E G R A T E D | D E V E L O P M E N T | E N V I R O N M E N T";
                }
                break;
                case 8:
                {
                    clue = "It is a temporary form of computer data storage.";
                    word = "R A N D O M | A C C E S S | M E M O R Y";
                }
                break;
                case 9:
                {
                    clue = "It is a personal computer operating system that was produced by Microsoft as part of the Windows NT family of operating systems.";
                    word = "W I N D O W S | X P";
                }
                break;
            }
            return new String[] {word,clue};        
        }

        public String[] Food() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "It is an Indian food cited as top ten tasty foods of the world.";
                    word = "M A S A L A | D O S A";
                }
                break;
                case 1:
                {
                    clue = "A fruit which has the same name as its colour.";
                    word = "O R A N G E";
                }
                break;
                case 2:
                {
                    clue = "It is an oven-baked, flat, round bread typically topped with a tomato sauce, cheese and various toppings.";
                    word = "P I Z Z A";
                }
                break;
                case 3:
                {
                    clue = "It is a type of staple food made from some type of unleavened dough which is rolled flat and cut into long thin strips.";
                    word = "N O O D L E S";
                }
                break;
                case 4:
                {
                    clue = "This is a famous food restaurant founded by Harland Sanders.";
                    word = "K E N T U C K Y | F R I E D | C H I C K E N";
                }
                break;
                case 5:
                {
                    clue = "A bun between which a patty is kept.";
                    word = "B U R G E R";
                }
                break;
                case 6:
                {
                    clue = "It is a chat.";
                    word = "P A N I | P U R I";
                }
                break;
                case 7:
                {
                    clue = "Is perfect for completing the idiom - As cool as a ______________.";
                    word = "C U C U M B E R";
                }
                break;
                case 8:
                {
                    clue = "Consists of two or more slices of bread with fillings between them.";
                    word = "S A N D W I C H";
                }
                break;
                case 9:
                {
                    clue = "Staple food of traditional Italian cuisine.";
                    word = "P A S T A";
                }
                break;
            }
            return new String[] {word,clue};        
        }

        public String[] Chocolates() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "Made full of coffeeeeeeeeeeeeeeeeee.";
                    word = "K O P I K O";
                }
                break;
                case 1:
                {
                    clue = "The name of this chocolate is even there in the game 'NFS Most Wanted'.";
                    word = "B O U N T Y";
                }
                break;
                case 2:
                {
                    clue = "It is well known for its distinctive triangular prism shape.";
                    word = "T O B L E R O N E";
                }
                break;
                case 3:
                {
                    clue = "Ramesh and Suresh go mad behind this.";
                    word = "F I V E | S T A R";
                }
                break;
                case 4:
                {
                    clue = "Have a break, have a __________.";
                    word = "K I T | K A T";
                }
                break;
                case 5:
                {
                    clue = "If you are hungry, you should grab this.";
                    word = "S N I C K E R S";
                }
                break;
                case 6:
                {
                    clue = "Kahne ke baad kuch meetha hona chaiya.";
                    word = "D A I R Y | M I L K | S I L K";
                }
                break;
                case 7:
                {
                    clue = "This chocolate has a plastic egg-shaped packaging that splits into two, one half contains layers of cocoa and milk cream and the other half contains a toy.";
                    word = "K I N D E R | J O Y";
                }
                break;
                case 8:
                {
                    clue = "This chocolate is a Cadbury product.";
                    word = "P E R K";
                }
                break;
                case 9:
                {
                    clue = "This Chocolate is a brand of dark chocolate produced by Cadbury.";
                    word = "B O U R N V I L L E";
                }
                break;
            }
            return new String[] {word,clue};        
        }

        public String[] AnimalsandBirds() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "They are rodents with a coat of sharp spines, or quills, that protect against predators.";
                    word = "P O R C U P I N E";
                }
                break;
                case 1:
                {
                    clue = "They are large-sized working dog and they are useful in Police and Military Forces.";
                    word = "G E R M A N | S H E P H E R D";
                }
                break;
                case 2:
                {
                    clue = "The Smallest Mammal.";
                    word = "E T R U S C A N | S H R E W";
                }
                break;
                case 3:
                {
                    clue = "The bird which lays the biggest egg.";
                    word = "O S T R I C H";
                }
                break;
                case 4:
                {
                    clue = "A flightless bird.";
                    word = "K I W I";
                }
                break;
                case 5:
                {
                    clue = "The national animal of Australia.";
                    word = "K A N G A R O O";
                }
                break;
                case 6:
                {
                    clue = "The smallest bird.";
                    word = "B E E | H U M M I N G | B I R D";
                }
                break;
                case 7:
                {
                    clue = "This animal is very lazy.";
                    word = "S L O T H";
                }
                break;
                case 8:
                {
                    clue = "They are a diverse group of animals that first appeared during the Triassic period.";
                    word = "D I N O S A U R S";
                }
                break;
                case 9:
                {
                    clue = "The national bird of USA.";
                    word = "B A L D | E A G L E";
                }
                break;
            }
            return new String[] {word,clue};
        }

        public String[] Countries() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "Means 'Rich Coast' in Spanish.";
                    word = "C O S T A | R I C A";
                }
                break;
                case 1:
                {
                    clue = "Desh not Videsh.";
                    word = "I N D I A";
                }
                break;
                case 2:
                {
                    clue = "T&T";
                    word = "T R I N I D A D | A N D | T O B A G O";
                }
                break;
                case 3:
                {
                    clue = "Consists of nearly one thousand islands.";
                    word = "S O L O M O N | I S L A N D S";
                }
                break;
                case 4:
                {
                    clue = "Smallest Country.";
                    word = "V A T I C A N | C I T Y";
                }
                break;
                case 5:
                {
                    clue = "This country is having a leaf in its flag.";
                    word = "C A N A D A";
                }
                break;
                case 6:
                {
                    clue = "The fastest man on Earth is from this country.";
                    word = "J A M A I C A";
                }
                break;
                case 7:
                {
                    clue = "3 movies have been filmed using this country's name.";
                    word = "M A D A G A S C A R";
                }
                break;
                case 8:
                {
                    clue = "Greatest world power.";
                    word = "U N I T E D | S T A T E S | O F | A M E R I C A";
                }
                break;
                case 9:
                {
                    clue = "The worlds largest museum is located over here.";
                    word = "F R A N C E";
                }
                break;
            }
            return new String[] {word,clue};
        }

        public String[] Space() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "Stone like objects.";
                    word = "M E T E O R I T E S";
                }
                break;
                case 1:
                {
                    clue = "The biggest planet in the solar system.";
                    word = "J U P I T E R";
                }
                break;
                case 2:
                {
                    clue = "The first animal in space.";
                    word = "R H E S U S | M O N K E Y";
                }
                break;
                case 3:
                {
                    clue = "The first animal to land on moon.";
                    word = "D O G | L A I K A";
                }
                break;
                case 4:
                {
                    clue = "Explosion of a star.";
                    word = "S U P E R | N O V A";
                }
                break;
                case 5:
                {
                    clue = "The first man-made satellite.";
                    word = "S P U T N I K | O N E";
                }
                break;
                case 6:
                {
                    clue = "An independent agency of the executive branch of the United States federal government responsible for the civilian space program as well as aeronautics and aerospace research.";
                    word = "N A S A";
                }
                break;
                case 7:
                {
                    clue = "A rocky body that fell on earth and killed dinosaurs.";
                    word = "A S T E R O I D S";
                }
                break;
                case 8:
                {
                    clue = "An instrument used for looking into space.";
                    word = "T E L E S C O P E";
                }
                break;
                case 9:
                {
                    clue = "A dwarf planet that was in the solar system.";
                    word = "P L U T O";
                }
                break;
            }
            return new String[] {word,clue};
        }

        public String[] CallofDuty() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "He held the rank of Captain and led a SAS squad, designated 'Bravo Team'.";
                    word = "C A P T A I N | J O H N | P R I C E";
                }
                break;
                case 1:
                {
                    clue = "He is a sergeant and special forces soldier, serving as the 22nd SAS Regiment's sniper and demolitions expert.";
                    word = "J O H N | S O A P | M A C T A V I S H";
                }
                break;
                case 2:
                {
                    clue = "The main protagonist in COD: MW2.";
                    word = "G A R Y | R O A C H | S A N D E R S O N";
                }
                break;
                case 3:
                {
                    clue = "He is a member of the Ghosts squadron.";
                    word = "R I L E Y";
                }
                break;
                case 4:
                {
                    clue = "Call of Duty 10.";
                    word = "C A L L | O F | D U T Y | G H O S T S";
                }
                break;
                case 5:
                {
                    clue = "The two Brothers of COD Ghosts.";
                    word = "H E S H | W A L K E R | A N D | L O G A N | W A L K E R";
                }
                break;
                case 6:
                {
                    clue = "He was a Russian Loyalist and an Ex-Spetsnaz operative who served in Nikolai's Loyalist Army, and was considered to be his best man.";
                    word = "Y U R I";
                }
                break;
                case 7:
                {
                    clue = "The main protagonist in COD:Advanced Warfare.";
                    word = "J A C K | M I T C H E L L";
                }
                break;
                case 8:
                {
                    clue = "The main antagonist in COD:Ghosts who was actually a comrade but then was captured and tortured by the Federation, who eventually brainwashed him to their cause.";
                    word = "G A B R I E L | T | R O R K E";
                }
                break;
                case 9:
                {
                    clue = "The leader of an Ultranationalist terrorist cell and Imran Zakhaev's protege.";
                    word = "V L A D I M I R | M A K A R O V";
                }
                break;
            }
            return new String[] {word,clue};
        }

        public String[] Gaming() throws IOException
        {
            option = (int)(Math.random()*10);
            switch(option)
            {
                case 0:
                {
                    clue = "It is a vehicular combat racing video game developed and published by Electronic Arts, originally in 1991.";
                    word = "R O A D | R A S H";
                }
                break;
                case 1:
                {
                    clue = "It is an upcoming first-person shooter video game developed by Infinity Ward and published by Activision. ";
                    word = "C A L L | O F | D U T Y | I N F I N I T E | W A R F A R E";
                }
                break;
                case 2:
                {
                    clue = "It is a racing video game franchise published by Electronic Arts and developed by several studios including EA Black Box, Criterion Games and Ghost Games.";
                    word = "N E E D | F O R | S P E E D";
                }
                break;
                case 3:
                {
                    clue = "It is a series of multiplayer first-person shooter video game, in which teams of terrorists and counter-terrorists battle to perpetrate an act of terror (bombing, hostage-taking) and prevent it (bomb defusal, hostage rescue).";
                    word = "C O U N T E R | S T R I K E | G L O B A L | O F F E N S I V E";
                }
                break;
                case 4:
                {
                    clue = "The online multiplayer android game in which we build a community and fight against other community.";
                    word = "C L A S H | O F | C L A N S";
                }
                break;
                case 5:
                {
                    clue = "Popular android game.";
                    word = "S U B W A Y | S U R F E R S";
                }
                break;
                case 6:
                {
                    clue = "It is a 2012 first-person shooter developed and published by Gameloft Montreal for iOS and Android.";
                    word = "M O D E R N | C O M B A T | F O U R | Z E R O | H O U R";
                }
                break;
                case 7:
                {
                    clue = "It is a racing video game, developed and published by Gameloft.";
                    word = "A S P H A L T | E I G H T | A I R B O R N E";
                }
                break;
                case 8:
                {
                    clue = "It is a fighting video game developed by NetherRealm Studios and published by Warner Bros. Interactive Entertainment.\nIt is a fighting game in which two players fight against each other using a variety of attacks, including special character-specific moves, Brutalities, and gruesome Fatalities.";
                    word = "M O R T A L | K O M B A T | X";
                }
                break;
                case 9:
                {
                    clue = "Brain Game !!!!\n\n If you dont guess this game then you are a fool.";
                    word = "H A N G M A N";
                }
                break;
            }
            return new String[] {word,clue};
        }

        public void Quitter()throws IOException
        {
            BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
            Hangman obj=new Hangman();
            PrintWriter p = new PrintWriter(System.out,true);
            for(;;)
            {
                try
                {
                    p.print('\f');
                    p.println("\t\t\t\t\t\t\tQUIT");
                    p.println("Are you sure you want to quit?");
                    p.println("1:Yes\t2:No");
                    int ch=Integer.parseInt(br.readLine());
                    if(ch<1||ch>2)
                    {
                        continue;
                    }
                    if(ch==1)
                    {
                        p.print('\f');
                        p.println("\n\n\n\n\n\n\n\n\n\t\t\t\t\t\tThank You For Playing :) :) :) :)");
                        System.exit(0);
                    }
                    else if(ch==2)
                    {
                        p.print('\f');
                        break;
                    }
                }
                catch(NumberFormatException e1)
                {
                    p.print('\f');
                    continue;
                }
                catch(IOException e2)
                {
                    p.print('\f');
                    continue;
                }
            }
            main();
        }                       

        public void menu()throws IOException
        {
            Hangman obj = new Hangman();
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            PrintWriter p = new PrintWriter(System.out,true);
            for(;;)
            {
                try
                {  
                    p.print('\f');
                    p.println("\t\t\t\t\t                  LETS PLAY HANGMAN");
                    p.println("\n\t\t\t\t\tChoose your desired choice according to the topics given below.\n\t\t\t\t\t NOTE: Words are related to the topics given below.\n\n\t\t\t\t\t\t\t 1. Sports\n\n\t\t\t\t\t\t\t 2. Movies\n\n\t\t\t\t\t\t\t 3. Computer\n\n\t\t\t\t\t\t\t 4. Food\n\n\t\t\t\t\t\t\t 5. Chocolates\n\n\t\t\t\t\t\t\t 6. Animals and Birds\n\n\t\t\t\t\t\t\t 7. Countries\n\n\t\t\t\t\t\t\t 8. Space\n\n\t\t\t\t\t\t\t 9. CallofDuty\n\n\t\t\t\t\t\t\t10. Gaming");
                    p.println();
                    int choice = Integer.parseInt(br.readLine());
                    p.print('\f');
                    String wordandclue[] = new String[2];
                    if(choice == 1)
                        wordandclue = obj.Sports();
                    else if(choice == 2)
                        wordandclue = obj.Movies();
                    else if(choice == 3)
                        wordandclue = obj.Computers();
                    else if(choice == 4)
                        wordandclue = obj.Food();
                    else if(choice == 5)
                        wordandclue = obj.Chocolates();
                    else if(choice == 6)
                        wordandclue = obj.AnimalsandBirds();
                    else if(choice == 7)
                        wordandclue = obj.Countries();
                    else if(choice == 8)
                        wordandclue = obj.Space();
                    else if(choice == 9)
                        wordandclue = obj.CallofDuty();
                    else if(choice == 10)
                        wordandclue = obj.Gaming();
                    int chances = 6; 
                    String guessword = wordandclue[0];
                    String wordclue = wordandclue[1];
                    int lengthofword = (int)(Math.round(((double)guessword.length()/2)));
                    int checkguess = 0;
                    String a;                
                    StringBuffer guessit = new StringBuffer();
                    for (int i = 0;i<lengthofword;i++)
                        guessit = guessit.append("_ ");
                    guessit.delete((2 * lengthofword)-1,(2 * lengthofword));
                    int index = guessword.indexOf("|");
                    while(index >= 0)
                    {
                        guessit.setCharAt(index, '|');
                        index = guessword.indexOf("|", index+1);
                    }
                    p.println(guessit + "\nThe letters you have entered so far");
                    do
                    {
                        p.println();
                        if(chances == 6)
                            obj.Hang1();
                        else if(chances == 5)
                            obj.Hang2();
                        else if(chances == 4)
                            obj.Hang3();
                        else if(chances == 3)
                            obj.Hang4();
                        else if(chances == 2)
                            obj.Hang5();
                        else if(chances == 1)
                            obj.Hang6();
                        p.println();
                        p.println("Enter your guess letter");
                        String guessletter2 = br.readLine();
                        String guessletter = guessletter2.toUpperCase();
                        p.print('\f');
                        for(int i = 0;i<lengthofword;i++)
                        {
                            if(guessletter.charAt(0) == guessword.charAt(2*i))
                            {
                                guessit.setCharAt(2*i,guessletter.charAt(0));
                                checkguess=1;
                            }                
                        }
                        if(checkguess == 1)
                        {
                            p.println("Correct Guess. You have " + chances + " incorrect guesses left \nThe letters you have entered so far");
                            p.println(guessit);
                        }
                        else
                        {
                            chances--;
                            if(chances == 0)
                            {
                                p.println("Wrong guess. You hanged the man :(");
                                p.println("\nThe clue is: \n" + wordclue);
                                p.println(guessit);
                                obj.Hang7();
                            }
                            else
                            {
                                p.println("Wrong guess. You have " + chances + " incorrect guesses left\nThe letters you have entered so far");
                                p.println("\nThe clue is: \n" + wordclue);
                                p.println(guessit);
                            }
                        }
                        checkguess = 0;
                        if(chances == 0)
                            p.println("\nSorry you lost the game\n\nThe correct word is " + guessword);
                        a = guessit.toString();
                        if(a.equals(guessword))
                        {
                            p.println("You guessed the word!!!!!");
                            chances=0;
                        }        
                    }while(chances>0);
                }          
                catch(NumberFormatException R)
                {
                    p.print('\f');
                    continue;
                }
                catch(IOException A)
                {
                    p.print('\f');
                    continue;
                }
                catch(NullPointerException V)
                {
                    p.print('\f');
                    continue;
                }    
                for(;;) 
                {
                    try
                    {                  
                        p.println("\n\nDo you want to play again?\n1:Yes\n2:No");
                        int des=Integer.parseInt(br.readLine());
                        if(des<1||des>2)
                        {
                            p.print('\f');
                            continue;
                        }
                        if(des==1)
                        {
                            p.print('\f');
                            main();
                        }
                        else if(des==2)
                        {    
                            p.print('\f');
                            obj.Quitter();
                        }
                    }
                    catch(NumberFormatException e1)
                    {
                        p.print('\f');
                        continue;
                    }
                    catch(IOException e2)
                    {
                        p.print('\f');
                        continue;
                    }
                }
            }
        }

        public static void main()throws IOException
        {
            Hangman obj = new Hangman();
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            PrintWriter p = new PrintWriter(System.out,true);
            for(;;)
            {
                try
                {
                    p.print('\f');
                    p.println("\n\n\n\t\t\t\t\t\t   HANGMAN THE OFFICIAL GAME"); 
                    p.println("\n\n\n\t\t\t\t\t\t\t1. PLAY");
                    p.println("\n\t\t\t\t\t\t\t2. INSTRUCTIONS");
                    p.println("\n\t\t\t\t\t\t\t3. ABOUT");
                    p.println("\n\t\t\t\t\t\t\t4. EXIT");  
                    int k = Integer.parseInt(br.readLine());
                    if(k==1)
                    {
                        p.print('\f');                   
                        obj.menu();
                    }
                    else if(k==2)
                    {
                        p.print('\f');
                        p.println("\t\t\t\t INSTRUCTIONS");
                        p.println("Hangman is a guessing game.");
                        p.println("\nThe computer thinks of a word, phrase or sentence and you have try to guess it\nby suggesting letters or numbers, within a certain number of guesses.");
                        p.println("\nYour main aim is to guess the right word or phrase or sentence.");
                        p.println("\nClues will be given to you when you make a mistake.");
                        p.println("\n\nHave fun playing the game !!!!!\n :) :) :) :)");
                        p.println("");
                        p.println("\nAnd by the way this game is only for adults not for kids.\nPEGI 18 !!!!");
                        p.println("\n\nJust kidding!!! :P :P :P\n\nIts a game for all.\n :) :) :) :)");
                        p.println("\n\n\nPress any key to go to menu");
                        String ez=br.readLine();
                        p.print('\f');
                        obj.main();
                    }
                    else if(k==3)
                    {
                        p.print('\f');
                        p.println("\t\t\t\t ABOUT THE GAME");
                        p.println("\nTitle - 'HANGMAN'");
                        p.println("\nCreator - RAV ™");
                        p.println("\nVersion - 3.1");
                        p.println("\n\n\nPress any key to go to menu");
                        String ad=br.readLine();
                        p.print('\f');
                        obj.main();
                    }
                    else if(k==4)
                    {
                        p.print('\f');
                        obj.Quitter();   
                    }    
                }
                catch(NumberFormatException e1)
                {
                    p.print('\f');
                    continue;
                }
                catch(IOException e2)
                {
                    p.print('\f');
                    continue;
                }
            }
        }
    }
}