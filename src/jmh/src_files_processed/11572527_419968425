
/**
 * #### ##### ### ## #### ## ###### # ############# ###### #### ####### ### ##### ### #
 * ##########, ####### ### ####### ###### ## ####### ### ### ######## #########.
 * 
 * # ####### ###### ###### ## ####### ## ######### ## ### ##### ### ##### ### # #####
 * ########.  # ###### ###### ###### ## ####### ## ###### ### #### ## ### 
 * ############# (## ########).
 * 
 * #### ######
 * ##/##/##
 */
public class RightTriangle
{
    private double side1;
    private double side2;
    private double hypotenuse;
    
    public RightTriangle()
    {
        side1 = 3;
        side2 = 4;
        hypotenuse = 5;
    }
    
    public RightTriangle(double s1, double s2, double h)
    {
        side1 = s1;
        side2 = s2;
        hypotenuse = h;
    }
    
    public double getSide1()
    {
        return side1;
    }
    
    public void setSide1(double s1)
    {
        side1 = s1;
    }
    
    public double getSide2()
    {
        return side2;
    }
    
    public void setSide2(double s2)
    {
        side2 = s2;
    }
    
    public double getHypotenuse()
    {
        return hypotenuse;
    }
    
    public void setHypotenuse(double h)
    {
        hypotenuse = h;
    }
    
    private boolean isRightTriangle()
    {
        boolean result;
        if(Math.pow(side1, 2) + Math.pow(side2, 2) == Math.pow(hypotenuse, 2))
            result = true;
        else
            result = false;
        return result;
    }
    
    public double getArea()
    {
        double area;
        if(isRightTriangle()) 
            area = 0.5 * side1 * side2;
        else
            area = -1;
        return area;
    }
    
    public String toString()
    {
        return "The current length of side 1 is: " + side1 +
               "\nThe current length of side 2 is: " + side2 +
               "\nThe current length of the hypotenuse is: " + hypotenuse +
    }
}
}