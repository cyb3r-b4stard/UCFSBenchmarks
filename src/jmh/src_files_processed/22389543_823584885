/* 
 * ##(#) ######## ####### ######### #### #####:
 * #########(#) ####-#### ### #. ######### (####:
 *
 * #### #### ## #### ########; ### ### ############ ## ###/## ######
 * ## ##### ### ##### ## ### ### ####### ###### ####### ## ######### ##
 * ### #### ######## ##########.
 *
 * #### #### ## ########### ## ### #### #### ## #### ## ######,
 * ### ####### ### ########; ####### #### ### ####### ######## ##
 * ############### ## ####### ### # ########## #######.  ### ###
 * ### ####### ###### ####### ### #### #######.
 * 
 * @###### ### #########
 * @###### ##### #######
 * @###### ####### ##### #####
 * @###### ##### ####    ######## ############# ## #### ##########
 * @####### ###### ##, ####
 */

import info.gridworld.actor.ActorWorld;
import info.gridworld.grid.Location;
import info.gridworld.grid.*;
import info.gridworld.actor.*;
import java.awt.Color;

/**
 * #### ##### #### # ##### #### ######## ### ####. <## />
 * #### ##### ## ### ###### ## ### ## ## # ### ## #####.
 * 
 * @###### ### #########
 * @###### ##### #######
 * @###### ####### ##### #####
 * @###### ##### ####       ######## #############
 * @####### ### ##, #### 
 */
public class DancingBugRunner
{
    /**
     * Creates a world and populates the world with DancingBug objects.
     * 
     * @param args  information from the commond line
     */
    public static void main(String[] args)
    {
        ActorWorld world = new ActorWorld(new BoundedGrid<Actor>(12,12));
        int [] bobRoutine = (3,5,7,11,13,17,19,23,29,31};
        DancingBug bob = new DancingBug(4,bobRoutine);
        world.add(new Location(5,5), bob);
        world.show();
    }
}