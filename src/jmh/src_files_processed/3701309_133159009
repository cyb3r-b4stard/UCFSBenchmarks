/* ###### ## ###### # ######## ###-#.
 * ######## ########: ###### ######### ### #### ######## ###. */


/*******************************************************************************
 *  ##### ########### ############ ### ### ###### "### ##".
 *  #### ##### ## ######## ########## ####### ###.
 *
 * @######    ####### #######
 * @#######   #.#
 */
public class PrikazKdeJe implements IPrikaz
{
    private static final String NAZEV = "kde je";
    
    /**
     * Provádí příkaz "kde je".
     * 
     * @return Zpráva, která se vypíše hráči.
     */
    @Override
    public String proved(String... parametry) {
       if (parametry.length == 0) {
            
            return "Na co se mám zeptat? Chybí název věci.";
       }

        String veci = parametry[0];
        
        HerniPlan herniPlan = HerniPlan.getInstance();
        Prostor aktualniProstor = herniPlan.getAktualniProstor();
        Postavy osoba = aktualniProstor.vyberPostava("prodavačka");
        
        if (aktualniProstor.getNazev().endsWith("zelenina") && postavy.get(osoba).isOchotna = true){
            if (veci.endsWith("vegepizza")){
                Vec Vegepizza = new Vec("vegepizza", true);
                aktualniProstor.setVec(Vegepizza);
                osoba.setOchotna(false);
                
                return "пицца здесь!";
            }
            else{
                return "я не понимаю.";
            }
        }
        else{
            return "Nikdo Ti neodpovídá";
        }
        
    }
    
    /**
     *  Metoda vrací název příkazu (to, co hráč používá pro jeho vyvolání).
     *  
     *  @return Nazev prikazu.
     */
    @Override
    public String getNazev() {
        return NAZEV;
    }

}