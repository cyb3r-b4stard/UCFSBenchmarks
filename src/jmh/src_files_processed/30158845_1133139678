import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Ellipse;
import javafx.stage.Stage;
import java.util.Random;
/**
 * ####### # ### ## ####.
 * 
 * @###### (######) 
 * @####### (#/#/####)
 */
public class RandomCircles extends Application
{
    /**
 * Code launches all other javafx files
 * @param args Command line arguments (unused)
 */
    public static void main(String[] args)
    {
        launch(args);
    }
        /**
     * Creates 30 random circles using for loops
     * @param primaryStage main app window
     */
    public void start(Stage primaryStage)
    {
        Pane pane = new Pane();
        
        int numOne = 1;
        
        for (numOne = 1; numOne <= 30; numOne++)
        {
            int pointX = (int)(Math.random() * 461) + 70;
            int pointY = (int)(Math.random() * 261) + 70;
            int radius = (int)(Math.random() * 61) + 10;
            
            int red = (int)(Math.random()*256);
            int green = (int)(Math.random()*256);
            int blue = (int)(Math.random()*256);
            
            Circle circle = new Circle(pointX, pointY, radius);
            circle.setFill(null);
            
            circle.setStrokeWidth(3);
            circle.setStroke(Color.rgb(red, green, blue));
            
            Circle circleColored = new Circle (0, 0, 0);
            circleColored.setFill(null);
            circleColored.setStrokeWidth(3);
            circle.setStroke(Color.rgb(red, green, blue));
            
            if (radius = 1)
            {
                System.out.println(circle.getRadius());
                circleColored.setFill(Color.rgb(213, 90, 88, 0.3));
            }
            
            pane.getChildren().addAll(circle, circleColored);
        }
       
        
        Scene scene = new Scene(pane, 600, 400);
        
        primaryStage.setTitle("Random Circles");
        primaryStage.setScene(scene);
        primaryStage.show();
        
        primaryStage.setOnCloseRequest(e -> System.exit(0));
     
    }
}