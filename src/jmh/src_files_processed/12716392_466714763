
/**
 * ##### # ########### ## ##### ############## ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class MidtermMethods
{
    public static String dupe(String s)
    {
        String t = s + s;
        return t;
    }
    
    public static boolean areTriangular(double a, double b, double c)
    {
        boolean tri = true;
        if (a >= b + c)
        {
            tri = false;
        }
        else if (b >= a + c)
        {
            tri = false;
        }
        else if (c >= a + b)
        {
            tri = false;
        }
        return tri;
    }
    
    public static boolean majority (boolean a, boolean b, boolean c)
    {
        boolean majority = false;
        if (a && b || a && c || b  && c)
        {
            majority = true;
        }
        return majority;
    }
    
    public static int [] merge(int [] A, int [] B)
    {
        int [] M = new int (A.length + B.length);
        for (int i = 0; i < A.length; i++)
        {
            if (A[i] < B[i])
            {
                M[i] = A[i];
                M[i+1] = B[i];
            }
            else 
            {
                M[i] = B[i];
                M[i+1] = A[i];
            }
        }
        return M;
    }
        
}