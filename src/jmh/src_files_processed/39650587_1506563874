public class Robot
{
    private int[] hall;
    private int pos;
    private boolean facingRight;
    public Robot(int[] array,int position, boolean isRight)
    {
        int[]hall=new int[]{4};
        pos=position;
        facingRight=isRight;
    }
    private boolean forwardMoveBlocked()
    {
        boolean wall=false;
        if(facingRight=true&&pos==3)
        {
            wall=true;
             
        }
        else if(facingRight==false&&pos==0)
        {
            wall=true;
        }
        return wall;
    }
    public void move()
    {

        if (hall[pos]>0)
        {
            hall[pos]=hall[pos]-1;
            
        }
          if(forwardMoveBlocked()==true)
        {
            facingRight=false;
        }  
        if(hall[pos]==0&&forwardMoveBlocked()==false&&pos<3&&facingRight==true)
        {
            pos=pos+1;
        }
        if(hall[pos]==0&&forwardMoveBlocked()==false&&pos<3&&facingRight==false)
        {
            pos=pos-1;
        }

    }
    public int clearHall()
    {

        int moveCount=0;
        int hall[]={1,1,2,2};
        while(hall[pos]>0)
        {
            move();
            moveCount++;
        }
        return moveCount;
    }
    public boolean hallIsClear()
    {
        clear=false;
        if()
        {
            
        }
        
    }
}