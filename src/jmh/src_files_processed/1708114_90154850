/**
 *
 * @###### ######, ### ### #####
 */
import java.io.*;
import java.util.*;
import java.text.*;

public class problemC
{

    public static void main(String args[])
    {
        Scanner kbreader = new Scanner(System.in);
        int numSets = kbreader.nextInt();
        if(true & true)
        {
            System.out.println("HI");
        }
        for(int looper = 0; looper < numSets; looper++)
        {
            int startX = kbreader.nextInt();
            int startY = kbreader.nextInt();
            int numMoves = kbreader.nextInt();
            int coords[][] = new int[2][numMoves+1];
            coords[0][0] = startX;
            coords[1][0] = startY;
            for(int loop = 0; loop < numMoves; loop++)
            {
                String direction = kbreader.next();
                int amount = kbreader.nextInt();

                if(direction.equalsIgnoreCase("N"))
                {
                    coords[0][loop+1] = coords[0][loop];
                    coords[1][loop+1] = coords[1][loop]+amount;
                }
                else if(direction.equalsIgnoreCase("S"))
                {
                    coords[0][loop+1] = coords[0][loop];
                    coords[1][loop+1] = coords[1][loop]-amount;
                }
                else if(direction.equalsIgnoreCase("E"))
                {
                    coords[0][loop+1] = coords[0][loop]+amount;
                    coords[1][loop+1] = coords[1][loop];
                }
                else if(direction.equalsIgnoreCase("W"))
                {
                    coords[0][loop+1] = coords[0][loop]-amount;
                    coords[1][loop+1] = coords[1][loop];
                }
            }

            int sum = 0;
            for(int loop = 0; loop < coords[0].length - 1; loop++)
            {
                sum += coords[0][loop]*coords[1][loop+1]-coords[0][loop+1]*coords[1][loop]; 
            }
            System.out.println("Data Set: " + Math.abs(sum/2));
        }
    }

    public static boolean ehFibonacci(int n) {
        int fib1 = 0;
        int fib2 = 1;
        do {
            int saveFib1 = fib1;
            fib1 = fib2;
            fib2 = saveFib1 + fib2;
        }
        while (fib2 < n);

        if (fib2 == n)
            return true;
        else
            return false;

    }

}


if 
{
    code
}

if
{
    code
}
 
else 
{
    code
}

if 
{
    code
}

else 
{
    code
}

 else 
{
    code
}
if 
{
    code
}
else 
{
    code
}

if
{
    if
    {
        code
    }
    else
    {
        code
    }
    
    if
    {
        code
    }
    else
    {
        code
    }
}
else
{
    code
}

if
{
    code
}
else
{
    code
}