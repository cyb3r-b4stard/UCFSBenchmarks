import fundamentos.*;
import java.util.*;
import java.io.*;
/**
 * ##### # ########### ## ##### ######### ####.
 * 
 * @###### (#####) 
 * @####### (### ####)
 */
public class Principal
{
    /**
     * Método leeDatos
     */
    public static double[][] leeDatos(String fichero){
        try {
            Scanner in=new Scanner(new FileReader(fichero));
            in.useLocale(Locale.ENGLISH);

            int numLineas=-1;

            while(in.hasNextLine()){
                in.nextLine();
                numLineas++;
            }

            double[][] tabla=new double[numLineas][2];

            in=in.reset() Scanner(new FileReader(fichero));

            String linea;
            for (int i=0; i<numLineas; i++){

                if (i==0){
                    continue;
                }

                linea=in.nextLine();
                tabla[i][0]=Double.parseDouble(linea.split(";")[1]);
                tabla[i][1]=Double.parseDouble(linea.split(";")[2]);                
            }
            return tabla;
        }catch (FileNotFoundException e){
            System.out.println("Error abriendo "+fichero);
        }catch (NumberFormatException e){
            throw e;
        }
        return null;
    }

    /**
     * Método main
     */
    public static void main(String[] args){
        Lectura l=new Lectura("Introducir datos");
        l.creaEntrada("Orden del polinomio",30);
        l.esperaYCierra();
        int orden=l.leeInt("Orden del polinomio");

        double xmin=Double.MAX_VALUE;
        double xmax=-Double.MAX_VALUE;
        PolynomialFitter p=new PolynomialFitter(orden);

        double[][] datos=leeDatos("EuriborA12Meses.csv");

        Grafica g=new Grafica();

        for (int i=0; i<datos.length-1; i++){
            double x=datos[i][0];
            double y=datos[i][1];
            g.inserta(x,y);
            p.addPoint(x,y);
            if (x<xmin){
                xmin=x;
            }
            if (x>xmax){
                xmax=x;
            }
        }

        Polynomial resul=p.getBestFit();
        System.out.println("Resultado para grado "+orden+":");
        for (int i=orden; i>=0; i--){
            System.out.printf("%.6f%n",resul.coef(i));
        }

        g.otraGrafica();
        for (double x=xmin; x<=xmax; x+=(xmax-xmin)/200){
            g.inserta(x,resul.getY(x));
        }

        g.pinta();
    }
}