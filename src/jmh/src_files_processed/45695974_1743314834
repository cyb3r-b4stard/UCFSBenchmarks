
/**
 * ##### # ########### ## ##### #### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Room
{
    private String number;
    private String name;
    private int capacity;
    private char setup;
    private boolean isReconfigurable;
    private String configureOptions;
    private Room canBeCombinedWith;
    private static int numberOfRooms=0;
    private static int totalCapacity=0;

    /**
     * Constructor for objects of class Room
     */
    public Room(String theNumber, String theName, int theCapacity, char theSetup, boolean itIsReconfigurable, String theConfigureOptions){
    
        number= theNumber;
        name= theName;
        capacity= theCapacity;
        setup= theSetup;
        isReconfigurable= itIsReconfigurable;
        configureOptions= theConfigureOptions;
        canBeCombinedWith= null;
        
        
       
    }

    public void updateCanBeCombinedWith(Room r){
        canBeCombinedWith=r;
    }
    
    public String getRoomNumber(){
        return number;
    }

    public int getRoomCapacity(){
        return capacity;
    }
    public char getSetup(){
        return setup;
    }
    
    public String getOptions(){
        return configureOptions;
    }
    public void reconfigure(char option){
        if (isReconfigurable==true){
            if (configureOptions.indexOf(option)>=0){
                setup= option;
            }
            
            
                
                
                
            
        }
        
        
    
    }
    
    public boolean isCompatibleWith(Room other){
        if (this.capacity== other.capacity){
            if (this.isReconfigurable==false && other.isReconfigurable== false){
                updateCanBeCombinedWith(other);
                return true;
            }
            
            else if (this.isReconfigurable==true && other.isReconfigurable== true){
                if (this.configureOptions.equalsIgnoreCase(other.configureOptions)){
                    updateCanBeCombinedWith(other);
                    return true;
                }
                else {
                    return false;
                }
            }
            else{
                return false;
            }
        }
        else 
            return false;
        }
    
    
    public String[] makeString(Room x){
        String[] details= new String[4];
        details[0]= "Room number: " + getRoomNumber();
        details[1]= "capacity: " + getRoomCapacity();
        details[2]= "setUp: " + getSetup();
 
        if (isReconfigurable==true){
            details[3]= "reconfigure options: " + configureOptions;
        }
        else{
            details[3]= " ";
        }
        
        return Room x.details[];
         

            
        
        
        
    }
    
    public static int getNumberOfRooms(){
        return numberOfRooms;
    }
    
    public static int getTotalCapacity(){
        return totalCapacity;
    }
}

                  
        
