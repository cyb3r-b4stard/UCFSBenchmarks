import java.util.Scanner;
public class AirlineSeats
{
    public static void main(String[] args)
    {
            char[] []seats = new char[15][6];
            char response;
        
            initializeSeatChart(seats);
            displaySeatCharts(seats);
            
            Scanner keyboard =new Scanner(System.in);
        
            while(response == "Y")
            {
                assignSeatType(seats);
                int seatNumber = seatSelection(seats);
            
                System.out.print("Do You want to reserve another seat? Y for yes N for no " );
                response = keyboard.nextLine.charAt(0);
                System.out.println();
                
                
            }
        }
        
        public static void initializeSeatChart(boolean[][] seatPlan)
        {
                for(int i = 0; i<seatPlan.length; i++)
                    for(int j = 0; j<seatPlan[0].length; j++)
                        seatPlan[i][j] = '-';
                        
                        
        }
        
        public static void DisplaySeatChart(boolean[][] seatPlan)
        {
            int i, j;
            
            System.out.println("\t A B C\t D E F");
            
            
            for(i = 0; i <seatPlan.length-1; i++)
            {
                if(i <= 15)
                    System.out.println("Row " + (i+1) + " ");
                else
                    System.out.print("Row " + (i+j) + " ");
                        
                for(j = 0; j< seatPlan[0].length; j++)
                {
                
                    System.out.print(seatPlan[i][j] + " ");
                    
                }
            }
                
        System.out.println("- -- available seat");  
        System.out.println("X -- occupied seat");  
        System.out.println();  
  
        }
        
        public static boolean avalableSeat(boolean [][] seatPlan)
        {
            int i;
            int j;
            
            for(i = 0;  i <seatPlan.length-1; i++)
            if(i <= 15) {
    
            
            return true;
        }
        }
        
        public static void assignSeatType(boolean [] [] seatPlan)
        {
            char ticketType;
            char response;  
                
                
            System.out.println("Enter ticket type please type 1 for buisness class, or type 2 for economy class");
            ticketType = console.next().charAt(0);
            
            
                switch(ticketType)
                {
                    case '1':
                            if(!isBusinessClassFull(seatPlan))
                                assignBusinessClassSeat(seatPlan); 
                            else
                                     System.out.println("No buisness class seats are available");  
                                     System.out.print("Press Y to continue: ");  
                                     response = keyboard.next().charAt(0);  
                                     System.out.println();  
                                  

                            break;
                
                
                    case '2':
                            if(!isEconomyClassFull(char[][] AirlineSeats.seatPlan)
                                assignBuisnessClassSeat(seatPlan);
                            else 
                                System.out.println("No economy class seats are available");  
                                System.out.print("Press Y to continue: ");  
                                response = console.next().charAt(0);  
                            System.out.println();  

                            break;
                }
                
            }
            
            public static boolean isBusinessClassFull(char [][] seatPlan)
            {
                int i;
                int j;
                int assignedSeats= 0;
                
                for(i = 0; i < 2; i++)  
                {

             for(j = 0; j < seatPlan[0].length; j++)  
                    {
                 if(seatPlan[i][j] == 'X')  
                   assignedSeats++;  
                    }
                }
            }
    
            public static boolean isEconomyClassFull(char [][] seatPlan)
            {
                int i;
                int j;
                int assignedSeats= 0;
                
                for(i = 0; i < 2; i++)  
                {

             for(j = 0; j < seatPlan[0].length; j++)  
                    {
                 if(seatPlan[i][j] == 'X')  
                   assignedSeats++;  
                    }
                }
            }

          public static void assignBuisnessClassSeat(char[][] seatPlan)
           {  
          IntClass rowNum = new IntClass();  

           CharClass columnPos = new CharClass();  

    

           if(!isBuisnessClassFull(seatPlan))  
           {  
                 selectSeatNumber(1, 2, rowNum, columnPos);  

    
                while(seatPlan[rowNum.getNum() - 1][(int)columnPos.getChar() - 65] != '-')  

                {  
                  System.out.println(" This seat is occupied ");  
                  System.out.println("Make another selection");  
                  showSeatAssignments(sPlan);  
                  selectSeatNumber(1, 2, rowNum, columnPos);  
                 }  
                seatPlan[rowNum.getNum() - 1][(int)columnPos.getChar() - 65] = 'X';  
                System.out.println("This seat is reserved for you");  
           }  
                    else 

               System.out.println("Sorry but the buisness class is full.");  
     }  

        
            public static int seatSelection(int startRows, int endRows, int)
            {
        
                Scanner sc = new Scanner(System.in);
   System.out.println("Press 'O' to choose your seat number or 'Q' to quit");
   String input = sc.nextLine();
   if(input.equalsIgnoreCase("O")){
                System.out.println("What is your seat number (1-20)");
                int row = sc.nextInt();
             
                else if(input.equalsIgnoreCase("Q")){
System.exit(0);
}
}
}
}
         
            
       