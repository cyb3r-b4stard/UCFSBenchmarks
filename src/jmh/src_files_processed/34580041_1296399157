
/**
 * #### # ######: ############ ### ## ######### #########:
 * #. ##### ## ######## = #### ## ##### ##### ## ########;
 * #. ########## ## ######## = #### ## ##### ###### #######.
 */
public class ListaReserva
{
    private Reserva [] listaReserva;
    private int qtdeReservas;

    /**
     * Construtor que receba como parâmetro o tamanho do array de reservas. Este parâmetro deve ser do tipo inteiro e deve ser utilizado na instanciação do array de lista de reservas.
     */
    public ListaReserva(int tam)
    {
        listaReserva = new Reserva[tam];
    }

    /**
     * Método: adicionaReserva(Reserva res) que receberá por parâmetro um objeto Reserva e adicionará no array de lista de reservas. Regras que devem ser implementadas:
     * i. Não será permitido adicionar reservas com a mesma data/horário para o mesmo carro e usuário. Importante: para este método funcionar corretamente será necessário realizar 
     * ajustes na classe Reserva (criação de métodos GET). Verifique o que é necessário e faça as implementações na classe Reserva.
     */
    public void cadastraReserva(Reserva res)
    {
        if(qtdeReservas < listaReserva.length){
            listaReserva[qtdeReservas++] = res;  
        } 
        
        else {
            System.out.println("Não é possível reservas com a mesma data/horário");
        }
        
        /**
         * Método: visualizaReservas() que apresentará 1) a lista com os dados das reservas na tela para o usuário. 
         */
        
    public void visualizaReservas()
    {
        for(int i=0; i < qtdeReservas; i++)
        {
            listaReserva[i].exibeDados();
            System.out.println("");
        }
    }
    
    /**
     * Método: pesquisaReservaPorUsuario(int cod) que receberá o código do usuário por parâmetro, realizará a pesquisa pelo código do usuário no array de reservas e retornará 
     * um novo array com as reservas localizadas. Caso nenhuma reserva seja localizado na pesquisa, o método deverá retornar NULL. 
     * i. Importante: para este método funcionar corretamente será necessário realizar ajustes na classe Usuario (criação de método GET). Verifique o que é necessário
     * e faça as implementações na classe Usuario. 
     */
    
    public void pesquisaReservaPorUsuario(int codigo) 
    {
        boolean localizouReserva = false; 
        
        for(int i=0; i < qtdeCandidato; i++)
        {
            if(listaReserva[i].getCodigo()==codigo){
                listaReserva[i].exibeDados();
                
                localizouReserva = true;
                
                break;
            }
        }
        
        if(!localizouReserva) 
            System.out.println("Reserva não localizada: " + codigo);
        
    }
}