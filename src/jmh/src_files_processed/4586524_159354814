/* 
 * ##(#) ######## ####### ######### #### #####:
 * #########(#) ####-#### ### #. ######### (####:
 *
 * #### #### ## #### ########; ### ### ############ ## ###/## ######
 * ## ##### ### ##### ## ### ### ####### ###### ####### ## ######### ##
 * ### #### ######## ##########.
 *
 * #### #### ## ########### ## ### #### #### ## #### ## ######,
 * ### ####### ### ########; ####### #### ### ####### ######## ##
 * ############### ## ####### ### # ########## #######.  ### ###
 * ### ####### ###### ####### ### #### #######.
 * 
 * @###### ### #########
 * @###### ##### #######
 * @###### ####### ##### #####
 */

import info.gridworld.actor.Bug;

/**
 * # <####>######</####> ###### ### # ###### "###" ## # ##### ####. <## />
 * ### ############## ## #### ##### ## ######## ## ### ## ## # ### ## #####.
 */
public class ZBug extends Bug
{
    private int steps;
    private int sideLength;

    /**
     * Constructs a box bug that traces a square of a given side length
     * @param length the side length
     */
    public ZBug(int length)
    {
        steps = 0;
        sideLength = length;
    }

    /**
     * Moves to the next location of the square.
     */
    public void act()
    {
       if (canMove() && steps < sideLength)
        {
            move();
            steps++;
        }
        else if (canMove() && steps > sideLength)
        {
            turn();
            turn();
            turn();
            steps = 0;
        else
        {
            turn();
            turn();
            steps = 0;
        }
    }
}
