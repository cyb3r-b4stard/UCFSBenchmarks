import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class Board extends JPanel implements KeyListener, MouseListener, MouseMotionListener
{
    int WIDTH = 700;
    int HEIGHT = 500, x, y;
    int count = 0, number;
    ImageIcon image, pic;
    JLabel label, labelPicture, randomPic;
    Spot spot;
    private Point mouseLocation;

    public Board()
    {
        
        setPreferredSize( new Dimension( WIDTH, HEIGHT ) );
        setBackground( new Color( Tools.beRandom(80,180), Tools.beRandom(80,180), Tools.beRandom(80,180) ) );

        image = new ImageIcon("perfect.jpg");
        
  

        spot = new Spot( WIDTH, HEIGHT );

        label = new JLabel( "You're doomed!" );
        label.setFont( new Font("Arial", Font.BOLD, 36 ) );
        label.setBounds( 20, 20, 600, 30 );
        labelPicture = new JLabel();
        labelPicture.setIcon(image);
        labelPicture.setBounds( 300, 50, 800, 800 );
        randomPic = new JLabel();

        this.add(label);
        this.add(labelPicture);
        label.setVisible(false);
        labelPicture.setVisible(false);
        this.add(randomPic);
        randomPic.setVisible(false);

        this.addMouseListener(this);
        this.addKeyListener(this);
        this.addMouseMotionListener(this);
    }

    public void keyTyped( KeyEvent event )
    {}

    public void keyReleased( KeyEvent event )
    {}

    public void keyPressed( KeyEvent event )
    {
        if( event.getKeyCode() == KeyEvent.VK_LEFT )
        {
            spot.setX(-25);
            this.repaint();
        }
        if( event.getKeyCode() == KeyEvent.VK_RIGHT )
        {
            spot.setX(25);
            this.repaint();
        }
        if( event.getKeyCode() == KeyEvent.VK_UP )
        {
            spot.setY(-25);
            this.repaint();
        }
        if( event.getKeyCode() == KeyEvent.VK_DOWN )
        {
            spot.setY(25);
            this.repaint();
        }

        if( event.getKeyCode() == KeyEvent.VK_P )
        {
            number = Tools.beRandom(1,5);
            x = Tools.beRandom(10, 500);
            y = Tools.beRandom(10,400);
            randomPic.setLocation(x, y);
            switch(number)
            {
                case: pic = new ImageIcon("fireball.png");
                randomPic.setIcon(pic);
                randomPic.setVisible(true);
            }
        }
    }

    public void mousePressed( MouseEvent event )
    {}

    public void mouseExited( MouseEvent event )
    {
        label.setVisible(true);
        labelPicture.setVisible(true);
    }

    public void mouseEntered( MouseEvent event )
    {
        label.setVisible(false);
        labelPicture.setVisible(false);
        setBackground( new Color( Tools.beRandom(80,180), Tools.beRandom(80,180), Tools.beRandom(80,180) ) );
    }

    public void mouseReleased( MouseEvent event )
    {}

    public void mouseClicked( MouseEvent event )
    {
        spot.changeColor();
        this.repaint();
    }

    public Point getMouseLocation()
    {
        return mouseLocation;
    }

    public void mouseDragged( MouseEvent e )
    {
        mouseLocation = e.getPoint();
    }

    public void mouseMoved( MouseEvent e )
    {
        mouseLocation = e.getPoint();
        while( mouseLocation.getX() != spot.getX() || mouseLocation.getY() != spot.getY() )
        {
            if( mouseLocation.getX() > spot.getX() )
            {
                spot.setX(1);
            }
            else if( mouseLocation.getX() < spot.getX() )
            {
                spot.setX(-1);
            }
            if( mouseLocation.getY() > spot.getY() )
            {
                spot.setY(1);
            }
            else if( mouseLocation.getY() < spot.getY() )
            {
                spot.setY(-1);
            }
            this.repaint();
        }
    }

    public void paintComponent (Graphics page)
    {
        super.paintComponent( page );
        spot.draw( page );
        this.setFocusable(true);
    }

}
