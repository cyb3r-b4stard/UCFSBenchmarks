
/**
 * ##### # ########### ## ##### ##### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Stack
{
     private ListNode head;
    String Entry;
    String[] code = new String[100];
    int Length;
    int n;
    
   public void initialiseStack()
   {
        System.out.println("please enter the calculation i.e. 6,7,+");
        Entry = Genio.getString();
        Length = Entry.length();
         String[] parts = Entry.split(",");
        for (int i = 0; i<Length;i++)
        {
            code[i]= parts[i];
            n=i;
            push(code[n])
        }

   }
   
   public void push()
   {
       ListNode newNode;
       newNode = new ListNode(code[n]);
       newNode.setNext(head);
       head = newNode;
   }
   
   public void pop()
   {
       ListNode nodeToDelete = null;
       
       if(isStackEmpty())
       {
           System.out.println("Stack is empty");
       }
       else
       {
           nodeToDelete = head;
           
           head = head.getNext();
           
           System.out.println("Node has been deleted");
       }
   }
   
   
   public boolean isStackEmpty()
   {
       if(head == null)
       {
           return true;
        }
       else
       {
           return false;
       }

   }
}