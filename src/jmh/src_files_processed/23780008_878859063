/** # ######## ### ######### ## # #####
 */
public class CharacterSearcher
{
    private String text;
    /**
     * Searches for characters
     * @param aText initializes a text for the methods
     */
    public CharacterSearcher(String aText)
    {
        text = aText;

    }

    /** Searcher for characters in a string
     * @return the text for this CharacterSearcher
     */
    public String getText()
    {
        return text;
    }

    /**
     * Determines if the string consists of a single letter
     * @param in the string to check. 
     * @return false if the string is not a single character 
     * of if that character is not a letter otherwise returns 
     * true
     */
    public static boolean isLetter(String in)
    {
        if (in.length() > 1)
        {
            return false;
        }

        return Character.isLetter(in.charAt(0));
    }

    /**
     * returns the number of p's, a's, and q's in upper case or lower case
     * @return 0 mehtod stub
     */
    public int countPAndQs()
    {
        int counter = 0;
        while (i< text.length())
        {
            String letter = text.substring(i,i+1);
            if ("pq".contains(text.length()))
            {
                counter ++;
                i++;
            }
        }
    }

    /**
     * Counts how many characters in the string are not letters
     * @return 0 method stub
     */
    public int countNonLetters()
    {
        String lowerCase = text.toLowerCase();
        String text = "";
        int counting = 0
        for(int i = 0; i< text.length(); i++)
        {
            String letter = text.substring(i, i+1);
            if(!isLetter(letter))
            {
                1 = 1+letter;
                counting++
            }
            return counting;
        }
    }

    /**
     * Counts the number of characters that appear multiple times
     * @return number of duplicates.
     */
    public double countDuplicates()
    {
        int countDuplicates = 0;
        int i = 0;
        String lower = text.toLowerCase();
        boolean duplicates = false;
        while (i< text.length())
        {
            String letter = lower.substring (i,i+1);
            for (int a = i+1 ; a < text.length(); a++)
            {
                String letter2 = lower.substring (a,a+1);
                if (letter.equals(letter2)&& duplicates == false)

                {
                    dup++;
                    duplicates = true;
                }

            }
            i++;
        }
        return dup;
    }

        
}

