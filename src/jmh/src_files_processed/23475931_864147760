
public class Assignment1
{
    public static void main(String[] args)
    {
       System.out.println("Testing Switch Methods\n_________________________________");
        System.out.println("Making a new Switch with the no constructor having no parameters");
        Switch aSwitch= new Switch();
        System.out.println("After construction, Switch is on?: " + aSwitch.state());
        aSwitch.flip();
        System.out.println("After flipping, Switch is on?: " + aSwitch.state());
        System.out.println("Making a new Switch with constructor having its parameter set to true");
        aSwitch= new Switch(true);
        System.out.println("After construction, Switch is on?: " + aSwitch.state());
        aSwitch.flip();
        System.out.println("After flipping, Switch is on?: " + aSwitch.state());
        
        System.out.println("\nTesting Plug Methods\n_________________________________");
        Plug aPlug = aSwitch.wherePlug();
        System.out.println("Switch is on? " + aSwitch.state() +
            " Plug is on? " + aPlug.state());
        aSwitch.flip();
        System.out.println("Switch is on? " + aSwitch.state() +
            " Plug is on? " + aPlug.state());
        
        System.out.println("\nTesting Lamp Methods\n_________________________________");
        Lamp aLamp = new Lamp();
        System.out.println("After construction, Lamp is on?: " + aLamp.state());
        aLamp.attach(aSwitch.wherePlug());
        System.out.println("After plugging, Lamp is on?: " + aLamp.state());

        System.out.println("\nTesting Remote Methods\n_________________________________");
        Remote aRemote = new Remote();
        aRemote.attach(aSwitch);
        System.out.println("Before pressing remote button");
        System.out.println("Switch on? " + aSwitch.state() + 
            " Plug on? " + aPlug.state());
        System.out.println("After pressing remote button");
        aRemote.pressButton();
        System.out.println("Switch on? " + aSwitch.state() + 
            " Plug on? " + aPlug.state());
            /* ... 
             * I bet there is a lot more to test. What happens if you have more than 1 lamp? 
             * What happens if you flip and flip again? What happens if you press the button and flip?
             * Better come up with a set of tests that covers your code's execution under all 
             * the cases you can come up with. Oh, yeah, and explain what you are testing! */
    }
}  
  
class Switch
{
    public Switch() 
    {
        boolean light = new boolean [];
        light = false;
    }
    public Switch(boolean initialState) 
    {
        light = initialState;
    }
    public boolean state()
    {
        return light;
    }
    public void flip() 
    {
        light = lightoff;
    }
    public Plug wherePlug()
    {
        Plug thePlug = new Plug();
        return thePlug;
    }
}
    
class Plug
{
    public Plug()
    {
        plugged = false;
    }
    public boolean state()  
    {
        plugged = Switch.lightSwitch;
        return plugged;
    }
}

class Lamp
{
    public Lamp()  
    {
        lamp = false;
    }
    public boolean state()  
    {
        return lamp;
    }
    public void attach(Plug plug)  
    {
        lamp = plug.state();
    }
}

class Remote
{
    public Remote()  
    {
        remote = false;
    }
    public void attach(Switch aSwitch)  
    {
        aSwitch.lightSwitch = remote;
    }
    public void pressButton()  
    {
        Switch aSwitch = new Switch();
        aSwitch.flip();
        remote = aSwitch.lightSwitch;
    }
}
