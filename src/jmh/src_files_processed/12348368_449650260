
/**
 * ####### ### ###### ####### ############## ### #######, ###
 * ## ### ########### ######## ###### ####. ### ####### 
 * ### #### ######### ########### ### ##### #####.
 * 
 * @###### ##### #######
 * @####### ####-##-##
 */
public class Product
{
    /**
     * Das Attribut identifier enthält die Bezeichnung
     * des Produkts.
     */
    private final String identifier;
    
    /**
     * Dieses Attribut enthält den Preis des Produkts.
     */
    private final float price;
    
    /**
     * Der Konstruktor erzeugt ein neues Produkt und weist
     * dem Objekt die übergebene Bezeichnung und den
     * übergebenen Preis zu.
     * 
     * @param productIdentifier Die Bezeichnung, welche das
     * erzeugte Produkt beschreibt.
     * @param productPrice Der Preis, welchen das erzeugte Produkt 
     * haben soll.
     */
    public Product(final String productIdentifier, float productPrice) {
        identifier = productIdentifier;
        price = productPrice;
    }
    
    /**
     * Diese Methode gibt die Bezeichnung des Produkts zurück.
     * 
     * @return Die Bezeichnung des Produkts.
     */
    public String getIdentifier() {
        return identifier;
    }
    
    /**
     * Diese Methode gibt den Preis des Produkts zurück.
     * 
     * @return Der Preis des Produkts.
     */
    public float getPrice() {
        return price;
    }
    
    /**
     * Diese Methode gibt das Produkt auf der Konsole aus.
     */
    public void print() {
        System.out.println(identifier + "   " + price + "EUR");
    }
    
    /**
     * Diese Methode fügt dem Warenkorb ein Produkt hinzu.
     */
    public void addProduct(){
            
        
    }
    
    /**
     * Diese Methode gib das teuerste Produkt des Warenkorbs zurück.
     */
public void getMostExpensive() {

if (Product[] != null) {
System.out.println("das ist teuer");
 }
else System.out.println("null");
}

/**
 * Diese Methode gibt den Preis des gesamten Warenkorbs.
 */
public void getTotalPrice() {
    gibGesamtePreis = Preis;
    System.out.print(price);
}




}
    
    
    
    