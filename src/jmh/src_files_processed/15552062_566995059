
/**
 * ##### # ########### ## ##### ########## ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class ChessPiece implements Comparable <ChessPiece>
{
    private int chesspiece;

    /**
     * Constructor for objects of class ChessPiece
     */
    public ChessPiece(String piece)
    {
        if(piece.equalIgnorecase("King")){
            chesspiece = 5;
        }else if(piece.equalIgnorecase("Queen")){
            chesspiece = 4;
        }else if(piece.equalIgnorecase("Rook")){
            chesspiece = 3;
        }else if(piece.equalIgnorecase("Knight")){
            chesspiece = 2;
        }else if(piece.equalIgnorecase("Bishop")){
            chesspiece = 2;
        }else if(piece.equalIgnorecase("Pawn")){
            chesspiece = 1;
    }

    /**
     * An example of a method - replace this comment with your own
     * 
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y 
     */
    public int getChesspiece (){
        return chesspiece;
    }
    
    public int compareTo(ChessPiece other)
    {
       if(this.chesspiece < other.getChesspiece)
            return -1;
       else if(this.chesspiece > other.getChesspiece)
            return 1;
       else
            return 0;
    }
}