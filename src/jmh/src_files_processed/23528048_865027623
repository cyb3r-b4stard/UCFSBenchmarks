import java.util.HashMap;
import java.util.Map;
import java.util.Iterator;
import java.util.Set;
/**
 * ##### #### - # #### ## ## ######### ####.
 *
 * #### ##### ## #### ## ### "##### ## ####" ###########. 
 * "##### ## ####" ## # #### ######, #### ##### ######### ####.  
 *
 * # "####" ########## ### ######## ## ### ####### ## ### ####.  ## ## 
 * ######### ## ##### ##### ### #####.  ### ##### ### ######## #####, 
 * ####, #####, ####.  ### #### #########, ### #### ###### # #########
 * ## ### ########### ####, ## #### ## ##### ## ## #### ## #### #########.
 * 
 * @######  ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */
public class Room 
{
    private String description;
    private HashMap<String, Room> exits;
    private Item item;

    /**
     * Create a room described "description". Initially, it has
     * no exits. "description" is something like "a kitchen" or
     * "an open court yard".
     * @param description The room's description.
     */
    public Room(String description) 
    {
        this.description = description;
        exits = new HashMap<String, Room>();
    }

    /**
     * 이 Room의 출구들 중 하나를 정해 준다.
     * @param direction 출구 방향.
     * @param Room 지정된 방향의 출구에 연결된 Room.
     */
    public void setExit(String direction, Room neighbor) 
    {
        exits.put(direction, neighbor);
    }

    /**
     * @return The description of the room.
     */
    public String getDescription()
    {
        return description;
    }

    /**
     * 지정된 방향으로 나가려고 할 때 연결되는 Room을 알려준다.
     * @ parn direction 나가려고 하는 방향 "north", "east", "south", "west"
     * @ return 나가려고 하는 방향으로 연결된 Room, 그 방향으로 출구가 없으면 null.
     */
    public Room getExit(String direction) {
        return exits.get(direction);
    }

    /**
     * 방의 출구들을 알려주는 문자열을 반환한다.
     * 문자열 예: "Exti: nouth west".
     * @ return 출구가 있는 방향들을 알려주는 문자열
     */
    public String getExitString() {
        String returnString = "Exits: ";

        Set<String> keys = exits.keySet();

        Iterator<String> it = keys.iterator();
        while(it.hasNext()) {
            returnString += it.next()+" ";
        }
        return returnString;
    }
    
    /**
     * @return Room의 상세한 정보를 모두 모아 문자열로 반환한다,
     */
    public String getLongDescription()
    {
        return "지금 있는 곳: "+ description +"\n"+getExitString();
    }
    
    
    public void setItem(Item item) {
        this.item = new Item;
    }
    
    public void getItem() {
        
    }
}