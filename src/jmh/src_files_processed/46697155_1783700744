
/**
 * ##### # ########### ## ##### ######## ####.
 * 
 * @###### (####### ########) 
 * @####### (##/##/####)
 */
import java.util.*;
import java.lang.*;
public class MyString
{
    private String original;
    private char[] sequence, sequence2, sequence3, sequence4, sequence5, sequence6, sequence7;
    
    public MyString (String start)
    {
        original = new String(start);
        sequence = start.toCharArray();
    }
    
    public MyString(char[] inCh)
    {
        original = new String(inCh);
       sequence = original.toCharArray();
    }
    
    public char charAt (int index)
    {
        char result;
            if (index < 0 || index > sequence.length-1)
                result = '\u0000';
            else 
                result = sequence [index];
                return result;
    }
   
    public String toString()
    {
        return new String (sequence);
    }
    
    public int lengthOf()
    {
        return sequence.length;
    }
    
    public boolean equals(String anotherString)
    {
        sequence2 = anotherString.toCharArray();
        
        if(sequence[0] == sequence2[0])
        return true;
        else 
        {
         return false;
        }
    }
  
        
         
            
    public boolean startsWith (String thirdString)
    {
        sequence3 = thirdString.toCharArray();

        if(sequence[0] == sequence3[0])
           return true;
        else
        {
            return false;
        }
        
    }
     
    public boolean endsWith (String forthString)
    {
        sequence4 = forthString.toCharArray();
        
        if(sequence.length -1 == sequence4[0])
            return true;
            else
        {
            return false;
        }
   }
    
   public String concat(String str)
   {
        return original + " " + str;
   }
    
   public boolean ignoreEqualsCase(String anotherMyString)
   {
       sequence5 = anotherMyString.toCharArray();
       
       if(sequence.length == sequence5.length )
       
           return true;
        
        else
        {
            return false;
        }
       
       
   }
   
   public int compareTo(String anotherMyString2)
   {
       sequence6 = anotherMyString2.toCharArray();
       if(sequence[0] < sequence6[0])
            return -1;
       else if (sequence[0] > sequence6[0])
            return 1;
       else 
       {
           return 0;
      }
    
    
   }
   
   public int compareToIgnoreCase(String anotherMyString3)
   {
         sequence7 = anotherMyString3.toCharArray();
       if(sequence.length < sequence7.length)
            return -1;
       else if (sequence.length > sequence7.length)
            return 1;
       else 
       {
           return 0;
      }
   }
   
   public String substring(int stringStartsWith)
   {
       String result;
       for (int i = 0; i < stringStartsWith.length; i++)
       if (i = stringStartsWith)
        return 
    }
    
}
       
           
            
    
        

          

        
