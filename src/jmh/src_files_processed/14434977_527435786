
import static org.junit.Assert.*;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class CommunityTest
{
    private String name = "NONE";
    private int popSize = 0;
    private int xLoc = 0;
    private int yLoc = 0;
    private String communityType = "";

    private boolean isHamlet = false;
    private boolean isVillage = false;
    private boolean isTown = false;
    private boolean isCity = false;

    /**
     * Default constructor for test class CommunityTest
     */
    public CommunityTest()
    {
    }

    /**
     * Sets up the test fixture.
     *
     * Called before every test case method.
     */
    @Before
    public void setUp()
    {
    }

    /**
     * Tears down the test fixture.
     *
     * Called after every test case method.
     */
    @After
    public void tearDown()
    {
    }

    @Test
    public void createCommunity ()
    {
        Community community = new Community ();
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
    }

    @Test
    public void createNewCommunity ()
    {
        name = "Smalltown";
        popSize = 100;
        xLoc = 5;
        yLoc = 10;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
    }

    @Test
    public void createHamlet ()
    {
        name = "Lilhammy";
        popSize = 100;
        xLoc = 5;
        yLoc = 10;
        isHamlet = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

    @Test
    public void createMaxHamlet ()
    {
        name = "Maxhammy";
        popSize = 1000;
        xLoc = 5;
        yLoc = 10;
        isHamlet = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

    @Test
    public void createVillage ()
    {
        name = "Seavillage";
        popSize = 1001;
        xLoc = 5;
        yLoc = 10;
        isVillage = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

    @Test
    public void createMaxVillage ()
    {
        name = "Maxvillage";
        popSize = 2000;
        xLoc = 5;
        yLoc = 10;
        isVillage = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

    @Test
    public void createTown ()
    {
        name = "Smalltown";
        popSize = 2001;
        xLoc = 5;
        yLoc = 10;
        isTown = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

    @Test
    public void createMaxTown ()
    {
        name = "Maxtown";
        popSize = 4000;
        xLoc = 5;
        yLoc = 10;
        isTown = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

    @Test
    public void createCity ()
    {
        name = "Bigcity";
        popSize = 4001;
        xLoc = 5;
        yLoc = 10;
        isCity = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        assertEquals (name, community.getName());
        assertEquals (popSize, community.getPopSize());
        assertEquals (xLoc, community.getXLoc());
        assertEquals (yLoc, community.getYLoc());
        assertEquals (isHamlet, community.isHamlet());
        assertEquals (isVillage, community.isVillage());
        assertEquals (isTown, community.isTown());
        assertEquals (isCity, community.isCity());
    }

        @Test
    public void sameLocation ()
    {
        name = "Smalltown";
        popSize = 100;
        xLoc = 5;
        yLoc = 10;
        
        String otherName = "Microtown";
        int otherPopSize = 9382;
        int otherXLoc = 5;
        int otherYLoc = 10;
        
        boolean sameLocation = true;
        
        Community community = new Community ();
        community.newCommunity(name, popSize, xLoc, yLoc);
        
        Community otherCommunity = new Community ();
        community.newCommunity (otherName, otherPopSize, otherXLoc, otherYLoc);
        
        assertEquals (xLoc, otherXLoc);
        assertEuqlas (yLoc, otherYLoc);
        assertEquals (sameLocation, community.atSameLocation(otherCommunity);
    }
}