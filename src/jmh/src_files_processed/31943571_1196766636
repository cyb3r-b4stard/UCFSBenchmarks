
/* #### ### ####### ########## #, 
 * ####:
 * ########:
 * ##:
 */

import ecs100.*;

/** ##############
#### ####### ########. */

public class PatternsDrawer{

    public static final double boardLeft = 50;   
    public static final double boardTop = 50;
    public static final double boardSize = 300;  

    /** Draw a square grid board with white squares.
     *  Asks the user for the number of squares on each side
     *
     * CORE
     */
    public void drawGridBoard(){
        UI.clearGraphics();
        double size = UI.askInt("How big are the squares:");
        double rows = UI.askInt("How many rows:");
        double cols = rows;
        
        int var1 = 0;
        while (var1 < rows) {
            int var2 = 0;
            while ( var2 < cols ) {
                double x = boardLeft + var1*size;
                double y = boardTop +var2*size;
                UI.drawRect(x, y, size, size);
                var2=var2+1;
            }
            var1=var1+1;
        }

    }

    /** Illusion
     * a pattern that makes dark circles appear in the intersections
     * when you look at it. 
     **/
    public void drawIllusion(){
        double size = UI.askInt("How big are the squares:");
        double rows = UI.askInt("How many rows:");
        double cols = rows;
        
        int var1 = 0;
        while (var1 < rows) {
            int var2 = 0;
            while ( var2 < cols ) {
                double x = boardLeft + var1*size;
                double y = boardTop +var2*size;
                UI.setColor(Color.black);
                UI.fillRect(x, y, size, size);
                var2=var2+1;
            }
            var1=var1+1;
        }


    }

    /** Draw a checkered board with alternating black and white squares
     *    Asks the user for the number of squares on each side
     *
     * COMPLETION
     */
    public void drawCheckersBoard(){
        UI.clearGraphics();
        int num = UI.askInt("How many rows:");
        /*# YOUR CODE HERE */

    }

    /** Draw a board made of concentric circles, 2 pixel apart
     *  Asks the user for the number of squares on each side
     */
    public void drawConcentricBoard(){
        UI.clearGraphics();
        int num = UI.askInt("How many rows:");
        /*# YOUR CODE HERE */

    }

    /** ---------- The code below is already written for you ---------- **/

    public PatternsDrawer(){
        UI.initialise();
        UI.addButton("Clear",UI::clearPanes);
        UI.addButton("Core: Grid", this::drawGridBoard);
        UI.addButton("Core: Illusion", this::drawIllusion);
        UI.addButton("Completion: Checkers", this::drawCheckersBoard);
        UI.addButton("Challenge: Concentric", this::drawConcentricBoard);
        UI.addButton("Quit",UI::quit);
    }   


}
