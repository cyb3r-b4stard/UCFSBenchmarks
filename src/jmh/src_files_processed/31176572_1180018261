
/* #### ### ####### ########## #
 * ####:######## #####
 * ########:
 * ##:#########
 */

import ecs100.*;
import java.awt.Color;

/**
 * ##### # #### #### ### #### ## ##### ########, ### #### ###### #### ### #### ## #####
 */

public class DateValidator {

    /**
     * Asks user for a date, then determines whether the date
     *    specified by the three integers is a valid date.
     * For the Core, you may assume that
     * - All months have 31 days, numbered 1 to 31
     * - The months run from 1 to 12
     * - Years start from 1 
     */
    public void validateDateCore(){
        int day = UI.askInt("Day:");
        int month = UI.askInt("Month:");
        int year = UI.askInt("Year:");
        
        
       
        if(day<1||day>31||month<1||month>12||year<1){
           
            UI.println("the date is not valid");
        }
        else{
            UI.println("the date is"+day+month+year);

    }
    
    
}

    /**
     * Asks user for a date, then determines whether the date
     *    specified by the three integers is a valid date.
     * For the Completion, you should also check that
     * - Months have the correct number of days
     * - On leap years February should have 29 days.
     *    A year is a leap year if:
     *       - The year can be evenly divided by 4 but not 100
     *       - The year can be evenly divided by 400 
     */
    public void validateDateCompletion(){
        int day = UI.askInt("Day:");
        int month = UI.askInt("Month:");
        int year = UI.askInt("Year:");
        
        
       
        
        if(day<1||day>31||month<1||month>12||year<1){
           
            UI.println("the date is not valid");
        }
        else{
            UI.println("the date is"+day+"/"+month+"/"+year);

    }
    if(year%4!=0||year%400!=0&&year%100==0)
    {
        UI.println("The year is not a leap year");
    }
   
    else if(year%4==0||year%400==0&&year%100!=0){
        UI.println("The year is a leap year");
    }
  
     if(year%4==0||year%400==0&&year%100!=0){
         if(day>=1&&day<=29&&month==2){
             UI.println("the year is a leap year and the date is"+day+month+year);
            }
            else 
            {
        UI.println("the year is a leap year and the date is invalid");
    }
}
     /*if(day>=1&&day<=31&&month==1||month==3||month==5||month==7||month==8||month==10||month==12){
         UI.println("the date is valid and the date is:"+day+month+year);
    }
    else if(day<1&&day>31&&month==1||month==3||month==5||month==7||month==8||month==10||month==12){
        UI.println("the date is invalid");
    }
    if(day>=1&&day<=30&&month==2||month==4||month==6||month==9||month==11){
        UI.println("the date is valid and the date is:"+day+month+year);
    }
    else if(day<1&&day>30&&month==2||month==4||month==6||month==9||month==11){
        UI.println("the date is invalid");
}*/

        
    if(year%4!=0||year%400!=0&&year%100==0){
        if(day>=1&&day<=28&&month==2){
            UI.println("the year is not a leap year and the date is:"+day+"/"+month+"/"+year);
        }
        else
        {
            UI.println("the year is not a leap year and the date is invalid");
        }
    }
        /*if(day>=1&&day<=31&&month==1||month==3||month==5||month==7||month==8||month==10||month==12){
         UI.println("the date is valid and the date is:"+day+month+year);
    }
    else if(day<1&&day>31&&month==1||month==3||month==5||month==7||month==8||month==10||month==12){
        UI.println("the date is invalid");
    }
    if(day>=1&&day<=30&&month==2||month==4||month==6||month==9||month==11){
        UI.println("the date is valid and the date is:"+day+month+year);
    }
    else if(day<1&&day>30&&month==2||month==4||month==6||month==9||month==11){
        UI.println("the date is invalid");
    }*/

       if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){
           if(year%4==0||year%400==0||year%4!=0||year%400!=0&&year%100!=0||year%100==0){
               if(day<1&&day>31){
               UI.println("the date is invalid");
        }
        else if(day>=1&&day<=31){
            UI.println("the date is:"+day+"/"+month+"/"+year);
        }
        
        }
}
        if(month==4||month==6||month==9||month==11){
            if(year%4==0||year%400==0||year%4!=0||year%400!=0&&year%100!=0||year%100==0){
                if(day<1&&day>30){
            UI.println("the date is invalid");
        }
        else if(day>=1&&day<=30){
            UI.println("the date is:"+day+"/"+month+"/"+year);
        }
    }
}
       /*if(month==1||month==3|month==5||month==7||month==8||month==10||month==12){
           if(year%4!=0||year%400!=0){
               if(day<1&&day>31){
                   UI.println("the date is invalid");
                }
                else if(day>=1&&day<=31){
                    UI.printn("the date is:"+day+month+year);
                }
            }
        }
  if(month==4||month==6||month==9||month==11){
            if(year%4!=0||year%400!=0){
                if(day<1&&day>30){
            UI.println("the date is invalid");
        }
        else if(day>=1&&day<=30){
            UI.println("the date is:"+day+month+year);
        }
    }
}*/
    /*if(year==leapyear||year!=leapyear||month==1||month==3||month==5||month==7||month==8||month==10||month==12){
        UI.println("the number of days are 31"+month);
    }
    else{
        UI.println("the number of days are 30"+month);
    int leapyear;

    if(year/4==0||year/400==0)
    {
        UI.println("The year is leap year"+year);
    }
   
    else{
        UI.println("The year is not leap year"+year);
    }
    if(year==leapyear||month==2)
    {
        UI.println("number of days are 29"+month+year);
    }
    else if(year!=leapyear||month==2){
        UI.println("number of days are 28"+month);
    }
   /* if(year==leapyear||year!=leapyear||month==1||month==3||month==5||month==7||month==8||month==10||month==12){
        UI.println("the number of days are 31"+month);
    }
    else{
        UI.println("the number of days are 30"+month);*/
        
   
    
}


    

    /**
     * For the challenge, your program should be extended to deal with the transition from the Julian to Gregorian calendar. 
     * The program should look at the date, determine whether this should be a Julian or Gregorian date, and test it appropriately. 
     * You will need to find the rules of the Julian calendar yourselves. 
     * 
     */
    /**
     * Although Greek astronomers had known, at least since Hipparchus, a century before the Julian reform, that the tropical year was a few minutes shorter than 365.25 days, the calendar did not compensate for this difference. 
     * As a result, the year gained about three days every four centuries compared to observed equinox times and the seasons.
     * This discrepancy was corrected by the Gregorian reform of 1582. 
     * The Gregorian calendar has the same months and month lengths as the Julian calendar, but, in the Gregorian calendar, years evenly divisible by 100 are not leap years, except that years evenly divisible by 400 remain leap years.
     * Consequently, the Julian calendar is currently (since the beginning of March 1900 and until the end of February 2100) 13 days behind the Gregorian calendar; for instance, 1 January in the Julian calendar is 14 January in the Gregorian.
     */
    public void validateDateChallenge(){
     int day = UI.askInt("Enter the day:"); 
     int month = UI.askInt("Enter the month:");
     int year = UI.askInt("Enter the year:");
    /**leap year for julian calendar */
    if(year%4==0){
         UI.println("the year is a leap year");
        }
         else{
             UI.println("the year is not a leap year");
            }
            /**february in julian calendar in leap year*/
             if(year%4==0){
         if(day>=1&&day<=29&&month==2){
             UI.println("the year is a leap year and the date is"+day+month+year);
            }
            else 
            {
        UI.println("the year is a leap year and the date is invalid");
    }
}
/**february in julian calendar in non leap year*/
    if(year%4!=0){
         if(day>=1&&day<=28&&month==2){
             UI.println("the year is a leap year and the date is"+day+"/"+month+"/"+year);
            }
            else 
            {
        UI.println("the year is a leap year and the date is invalid");
    }
}
/**jan,march,may,july,august,october,december months in julian calendar in leap and non leap year*/
    if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){
           if(year%4==0||year%4!=0){
               if(day<1&&day>31){
               UI.println("the date is invalid");
        }
        else if(day>=1&&day<=31){
            UI.println("the date is:"+day+"/"+month+"/"+year);
        }
        
        }
}
 /**april,june,sept,nov in julian calendar in leap and non leap years*/       
      if(month==4||month==6||month==9||month==11){
            if(year%4==0||year%4!=0){
                if(day<1&&day>30){
            UI.println("the date is invalid");
        }
        else if(day>=1&&day<=30){
            UI.println("the date is:"+day+"/"+month+"/"+year);
        }
    }
}
/*if(year%4==0||year%4!=0){
    if(month==1||month==2||month==3||month==4||month==5||month==6||month==7||month==8||month==9||month==10||month==11||month==12){
        UI.println("the date is in julian calendar");
    }*/

    /**leap year for gegorian calendar**/
    if(year%4==0||year%400==0||year%100!=0){
         UI.println("the year is a leap year");
        }
         else{
             UI.println("the year is not a leap year");
            }
        
            /**february in gregorian calendar in leap year*/ 
             if(year%4==0||year%400==0||yeear%100!=0){
         if(day>=1&&day<=29&&month==2){
             UI.println("the year is a leap year and the date is"+day+month+year);
            }
            else 
            {
        UI.println("the year is a leap year and the date is invalid");
    }
}

/**february in gregorian calendar in non leap year*/
    if(year%4!=0||year%400!=0||year%100==0){
         if(day>=1&&day<=28&&month==2){
             UI.println("the year is a leap year and the date is"+day+"/"+month+"/"+year);
            }
            else 
            {
        UI.println("the year is a leap year and the date is invalid");
    }
}
/**jan,march,may,july,august,october,dec in gregorian calendar in leap and non leap year*/
    if(month==1||month==3||month==5||month==7||month==8||month==10||month==12){
           if(year%4==0||year%4!=0||year%400==0||year%400!=0||year%100==0||year%100!=0){
               if(day<1&&day>31){
               UI.println("the date is invalid");
        }
        else if(day>=1&&day<=31){
            UI.println("the date is:"+day+"/"+month+"/"+year);
        }
        
        }
}
    /**april,june,sept,nov in gregorian calendar in leap and non leap years*/    
      if(month==4||month==6||month==9||month==11){
            if(year%4==0||year%4!=0||year%400==0||year%400!=0||year%100==0||year%100!=0){
                if(day<1&&day>30){
            UI.println("the date is invalid");
        }
        else if(day>=1&&day<=30){
            UI.println("the date is:"+day+"/"+month+"/"+year);
        }
    }
}  
    if(year%4==0||year%400==0&&year%100!=0&&month==1||month==2||month==3||month==4||month==5||month==6||month==7||month==8||month==9||month==10||month==11||month==12){
    {
        UI.println("the date is in gregorian calendar(in leap year)");
    } 
    else if(year%4==0&&month==1||month==2||month==3||month==4||month==5||month==6||month==7||month==8||month==9||month==10||month==11||month==12){
      UI.println("the date is in julian calendar(in leap year)"); 
}


if(year%4!=0||year%400!=0||year%100==0&&month==1||month==2||month==3||month==4||month==5||month==6||month==7||month==8||month==9||month==10||month==11||month==12){
    UI.pritnln("the date is in gregorian calendar (in non leap year)");
}
    else if(year%4!=0&&month==1||month==2||month==3||month==4||month==5||month==6||month==7||month==8||month==9||month==10||month==11||month==12){
        UI.println("the date is in julian calendar (in non leap year)");
    }
}



        

    /** ---------- The code below is already written for you ---------- **/
    /** Constructor: set up user interface */
    public DateValidator(){
        UI.initialise();
        UI.addButton("Clear", UI::clearText );
        UI.addButton("Validate Date Core", this::validateDateCore );
        UI.addButton("Validate Date Completion", this::validateDateCompletion );
        UI.addButton("Quit", UI::quit );
        UI.setDivider(1);       
    }



