import java.awt.geom.Ellipse2D;

/**
 * ### #####, ### ########### ###### #### ### #### ###### ### ##### ########
 * ########.
 * 
 * @###### ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */

public class Kreis {
    private int radius;     

    private int xPosition;
    private int yPosition;

    private String farbe;

    /**
     * Erzeuge einen neuen Kreis an einer Standardposition mit einer
     * Standardfarbe.
     */
    public Kreis() {    
        radius = 30;    
        xPosition = 50;
        yPosition = 50;
        farbe = "rot";
    }
    
    /**
     * Verschiebe den Kreis um Entfernung viele Pixel nach rechts
     * 
     * @ param Entfernung
     *          Entfernung der Verschiebung
     */
    public void nachRechtsBewegen(int Entfernung){
       xPosition = xPosition + Entfernung;
        zeichnen();
    }
    public void nachLinksBewegen (int Entfernung) {
        xPosition = xPosition - Entfernung;
        zeichnen();
    }
    public void nachUntenBewegen (int Entfernung) {
        yPosition = yPosition + Entfernung;
        zeichnen();
    }
    public void nachObenBewegen (int Entfernung) {
        yPosition = yPosition - Entfernung;
        zeichnen();
    }
    
    /**
     * Mache den Kreis auf der Leinwand sichtbar
     */
    public void sichtbarMachen(){
        zeichnen();
    }
    public void vertikalBewegen (int Entfernung) {
          nachUntenBewegen (int Entfernung) ;
          nachObenBewegen (int Entfernung) ;
    }
    
    /**
     * Zeichne diesen Kreis mit seinen aktuellen Werten auf den Bildschirm.
     */
    private void zeichnen() {
        Leinwand leinwand = Leinwand.gibLeinwand();
        leinwand.zeichne(this, farbe, new Ellipse2D.Double(xPosition,
                yPosition, radius*2, radius*2));
        leinwand.warte(10);
    }


}