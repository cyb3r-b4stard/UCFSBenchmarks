/**
 * ######### ### ## ## ###### #.
 * 
 * @###### ##### ####### ##### 
 * @####### ##/##/####
 */
public class Racional
{
    private int numerador;
    private int denominador;

    /**
     * Constructor sin parametros
     */
    Racional()
    {
        numerador = 0;
        denominador = 1;
    }
    
    /**
     * Constructor con parametros
     */
    Racional(int num, int den)
    {
        this.numerador = num;
        if(num==0){
            this.denominador = 1;
        }
        else{
            this.denominador = den;
        }
    }

    /**
     *  Metodo get para que retorne el valor de el numerador
     */
    public int getNumerador()
    {
        return numerador;
    }
    
    /**
     *  Metodo get para que retorne el valor de el denominador
     */
    public int getDenominador()
    {
        return denominador;
    }
    
    /**
     *  Metodo set para cambiar la variable numerador
     */
    public void setNumerador(int nuevoNum)
    {
        numerador = nuevoNum;
    }
    
    /**
     *  Metodo set para cambiar la variable denominador
     */
    public void setDenominador(int nuevoDen)
    {
        if(nuevoDen == 0){
            denominador = 1;
        }
        else{
            denominador = nuevoDen;
        }
    }
    
    /**
     *  Metodo que muestra la fraccion por pantalla
     */
    public void muestraFraccion()
    {
        System.out.println(numerador + "/" + denominador);
    }
    
    /**
     *  Metodo que suma dos fracciones e imprime el resultado en forma de fraccion
     *  
     *  Racional resultado = new Racional();
     *  resultado.numerador= primea parte de las opeaciones
     *  resultado.denominador = segunda parte de las opercaiones
     *  simplificamos con el ejercicio 9
     *  return resultado por que es un static Racional xdxdd
     */
    public static void sumaFracciones(Racional obj1, Racional obj2)
    {
        System.out.println(((obj1.numerador*obj2.denominador)+(obj1.denominador*obj2.numerador)) + "/" + obj1.denominador*obj2.denominador);
    }
    
    /**
     *  Metodo que resta dos fracciones e imprime el resultado en forma de fraccion
     */
    public static void restaFracciones(Racional obj1, Racional obj2)
    {
        System.out.println(((obj1.numerador*obj2.denominador)-(obj1.denominador*obj2.numerador)) + "/" + obj1.denominador*obj2.denominador);
    }
    
    /**
     *  Metodo que multiplica dos fracciones e imprime el resultado en forma de fraccion
     */
    public static void multiplicaFracciones(Racional obj1, Racional obj2)
    {
        System.out.println((obj1.numerador*obj2.numerador) + "/" + (obj1.denominador*obj2.denominador));
    }
    
    /**
     *  Metodo que divide dos fracciones e imprime el resultado en forma de fraccion
     */
    public static void divideFracciones(Racional obj1, Racional obj2)
    {
        System.out.println((obj1.numerador*obj2.denominador) + "/" + (obj1.denominador*obj2.numerador));
    }
    
    /**
     *  Metodo que compara dos fracciones y retorna true si son iguales y false si no
     */
    public static boolean sonIguales(Racional obj1, Racional obj2)
    {
        if(obj1.numerador*obj2.denominador == obj1.denominador*obj2.numerador){
            return true;
        }
        else{
            return false;
        }
    }
    
    /**
     *  Metodo que compara dos fracciones para ver si la primera es mayor que la segunda
     *  
     *  Si esto es asi retorna true.
     */
    public static boolean mayor_que(Racional obj1, Racional obj2)
    {
        if((float)obj1.numerador/obj1.denominador >(float) obj2.numerador/obj2.denominador){
            return true;
        }
        else{
            return false;
        }
    }
    
    /**
     * An example of a method - replace this comment with your own
     *
     * @param  y   a sample parameter for a method
     * @return     the sum of x and y
     */
    public int MCD(int num1, num2)
    {
        int resto = num1 % num2;
        while (resto != 0) {
            num1 = num2;
            num2 = resto;
            resto = num1 % num2;
        }
        return num2;
    }
    
    /**
     * Metodo para simplificar fracciones.
     * 
     * Primero se haya el maximo comun divisor y una vez sepamos cual es
     * dividimos el numerador y el denominador entre el mismo cada uno por separado
     * y es resultado de estas diviisiones son los nuevos numeros de la fraccion
     */
    public static Racional simplificarFracciones(Racional obj1)
    {
        int resto = obj1.numerador % obj1.denominador;
        int nuevoNumer = obj1.numerador;
        int nuevoDenom = obj1.denominador;
        while (resto != 0) {
            nuevoNumer = nuevoDenom;
            nuevoDenom = resto;
            resto = nuevoNumer % nuevoDenom;
        }
        
        obj1.numerador=obj1.numerador/nuevoDenom;
        obj1.denominador=obj1.denominador/nuevoDenom;
        
        System.out.println("La fraccion simplificada es: " + obj1.numerador + "/" + obj1.denominador);
        
        return obj1;
    }
}