import java.util.ArrayList;
import java.util.Scanner;
import java.util.List;
/**
 * ##### ######### ## ## ####### ## ### ##### # ############## ##### ## ########, #### ## ### ###### ######### # ### ######. ######## ##
 * ######### ########## "###############" ### ######## ### ##### ## ##### ### ####### "########" #, # ##### # ## ###, ######### ## ##### ## ###### #########
 * # ### ######.
 * 
 * @###### ####### ########## 
 * @####### ##### ####
 */
public class GestorDeDatosClientes extends Taller
{
    /**
     * Al crear un objeto de esta clase se genera un ArrayList
     * 
     * @param NADA No necesita parámetros.
     */
    private DatosClientes datos;
    public GestorDeDatosClientes(){
        DatosClientes datos = DatosClientes.getInstancia();
    }
    private void AnnadeClientes(Cliente cliente){
        datos.add(cliente);
    }
    private void setClientes(int posicion, Cliente cliente){
        datos.set(posicion, cliente);
    }
    /**
    private void setCoche(int posicion, int posicion2, Vehículo vehículo){
        Cliente eleccion = (Cliente)arraydeclientes.get(posicion);
        eleccion.setarraydecoches(posicion2, vehículo);
    }
    
    private void modificaclienteconsola(int posicion){
        Cliente cliente = new Cliente(); 
        System.out.println(cliente.getDNI() + " " + cliente.getnombre() + " " + cliente.getdireccion() + " " + cliente.getpostal());
        
        setClientes(posicion, cliente); 
        System.out.println(cliente.getDNI() + " " + cliente.getnombre() + " " + cliente.getdireccion() + " " + cliente.getpostal());     
    }
    private void AnnadeVehiculo(int codigocliente){
        Cliente client = arraydeclientes.get(codigocliente);
        client.addarraydecoches();
    }
    /**
     * Se encarga de CREAR un nuevo cliente, así como de vincular un NUEVO COCHE.
     * 
     * @param NADA No necesita parámetros.
     */
    public void nuevo(){
        Cliente cliente = new Cliente();
        AnnadeClientes(cliente);
        cliente.addarraydecoches(); 
    }
    /**
     * Se encarga de modificar el un determinado cliente.
     * 
     * @param (String)clientebuscado Es el nombre del cliente que tiene asignado el coche a modificar.
     * 
     */
    public void ModificaCliente(String clientebuscado){
        int contador = 0;
        for(Cliente cliente : datos.getarraydeclientes()){
            if(cliente.getnombre() != null && cliente.getnombre().contains(clientebuscado)){
            }else{
                contador ++;
            }
        }      
    }
    /**
     * Se encarga de modificar el coche (identificado por su matrícula) asociado a un determinado cliente.
     * 
     * @param (String)clientebuscado Es el nombre del cliente que tiene asignado el coche a modificar.
     * @param (String)matriculabuscada Es la matrícula del coche a modificar.
     */
    public void ModificaCocheCliente(String clientebuscado, String matriculabuscada){
        int contador1 = 0;
        int contador2 = 0;
        for(Cliente cliente : datos.getarraydeclientes()){
            if(cliente.getnombre() != null && cliente.getnombre().contains(clientebuscado)){
                for (Vehículo vehículo: cliente.getarraydecoches()){
                    if(vehículo.getMatrícula() != null && vehículo.getMatrícula().contains(matriculabuscada)){
                        cliente.cocheconsola();
                    }else{
                        contador2 ++;
                    }
                }
            }else{
                contador1 ++;
            }
        }
    }
    /**
     * Se encarga de AÑADIR un nuevo coche a un determinado cliente.
     * 
     * @param (String)clientebuscado Es el nombre del cliente al cual quiere añadirse un nuevo coche.
     */
    public void AnnadeCocheDeCliente(String clientebuscado){
        int contador = 0;
        for(Cliente cliente : datos.getarraydeclientes()){
            if(cliente.getnombre() != null && cliente.getnombre().contains(clientebuscado)){
                cliente.addarraydecoches();
            }else{
                contador ++;
            }
        }
    }
    public void ImprimeFicha(Vehículo coche){
        System.out.println("\nFICHA DE VEHÍCULO:\n");
        System.out.println("TIPO DE VEHICULO: "+coche.getTipoDeVehículo());
        System.out.println("MATRICULA: "+coche.getMatrícula());
        System.out.println("COMBUSTIBLE: "+ coche.getcombustible());
        System.out.println("NUMERO DE RUEDAS: "+coche.getruedas());
        if (coche.getRevisiónPartículas() == true){
            System.err.println("EL VEHÍCULO REQUIERE REVISIÓN DE PARTÍCULAS");
        }if (coche.getRevisiónNeumáticos() == true){
            System.out.println("EL VEHÍCULO REQUIERE REVISIÓN DE NEUMÁTICOS");
        }if (coche.getRevisiónSirena() == true){
            System.out.println("EL VEHÍCULO REQUIERE REVISIÓN DE SIRENA");
        }
    }
    public void BuscaFicha(String clientebuscado, String matriculabuscada){
        int contador1 = 0;
        int contador2 = 0;
        for(Cliente cliente : datos.getarraydeclientes()){
            if(cliente.getnombre() != null && cliente.getnombre().contains(clientebuscado)){
                for(Vehículo vehículo : cliente.getarraydecoches()){
                    if(vehículo.getMatrícula() != null && vehículo.getMatrícula().contains(matriculabuscada)){
                        ImprimeFicha(vehículo);
                    }else{
                        contador2 ++;
                    }
                }
            }else{
                contador1 ++;
            }
        }
    }
    public void BuscaFicha(String clientebuscado){
        int contador1 = 0;
        int contador2 = 0;
        for(Cliente cliente : datos.getarraydeclientes()){
            if(cliente.getnombre() != null && cliente.getnombre().contains(clientebuscado)){
                Cliente eleccion = datos.getarraydeclientes(.get(contador1);
                for(Vehículo vehículo : eleccion.getarraydecoches()){
                    if(vehículo.getMatrícula() != null){
                        ImprimeFicha(vehículo);
                    }else{
                        contador2 ++;
                    }
                }
            }else{
                contador1 ++;
            }
        }
    }
}