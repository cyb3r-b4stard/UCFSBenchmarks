
/**
 * ##### # ########### ## ##### ##### ####. ### #### ## ##### ### ###### #### ### ##############. # ##### ### #### #### ### ##### #####. #### ### 
 * #### ## ## ## ### ###### #### ## 
 * 
 * @###### ######
 * @####### (# ####### ###### ## # ####)
 */
public class SoundA
{
   
    private int [] samples;
   
      
    
  public SoundA (int [] a)
   { 
       samples = a;
    }
   /**Changes those values in this sound that have an amplitude greater than limit.
    * Values greater than limit are changed to limit.
    * Values less than -limit are changed to -limit.
    * @param limit the amplitude limit
    * Precondition: limit >= 0
    * @return the number of values in this sound that this method changed
    */
   public  int limitAmplitude(int limit)
   {   int numChanged = 0;
       
       for (int i=0; i<samples.length; i++)
       if (samples[i] > limit){
           samples[i] = limit[i];
           numChanged++;}
       if (limitAmplitude[i] < limit[i]){
           -limitAmplitude[i] = -limit[i];
           numChanged++;}
       
       return numChanged;
       }
    public void PrintSample()
       {
       for (int each: this.samples)
     {System.out.print( each + "\t");
        }
    } 
  public static void main (String args[])
  { int [] a = {40,2532,17,-2300,-17,-4000,2000,1048,-420,33,15,-32,2030,3223};
    
    System.out.println(" The initial values are the array are: ");
        SoundA values = new SoundA(a);  
      values.PrintSample();  
      int numChanges = values.limitAmplitude(2000);  
     System.out.println(" \n" + "The values after limitAmplitude executes are: ");
      values.PrintSample();
     System.out.println("\n" + numChanges + " values were changed.");
    }
    
}
