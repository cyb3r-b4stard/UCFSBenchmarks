public class QuickSort
{
    public static int[] ordenar(int[] vetor)
    {
        ordenar(vetor, 0, vetor.length - 1);
        return vetor;
    }

    private static void ordenar(int[] vetor, int inicio, int fim)
    {
        if (inicio < fim)
        {
            int posicaoPivo = separar(vetor, inicio, fim);
            ordenar(vetor, inicio, posicaoPivo-1);
            ordenar(vetor, posicaoPivo+1, fim);
        }
    }

    private static int separar(int[] vetor, int inicio, int fim)
    {
        int pivo = 0; 
        int i = inicio; 
        int q = fim-1;
        if((vetor[inicio] < vetor[vetor.length/2])&&(vetor[vetor.length/2] < vetor[fim])){
            pivo = vetor[vetor.length/2];
            vetor[vetor.length/2] = vetor[fim];
            vetor[fim] = pivo;
        }else if ((vetor[vetor.length/2] < vetor[inicio])&&(vetor[inicio]< vetor[fim])){
            pivo = vetor[inicio];
            vetor[inicio] = vetor[fim];
            vetor[fim] = pivo;
        }else{
            pivo = vetor[fim];
        }
        
        while ((i <= q && i<vetor.length && q< vetor.length){
            if (vetor[i] <= pivo){
                i++;
            }
            else if (pivo < vetor[q]){
                q++;
            }
            else {
                int troca = vetor[i];
                vetor[i] = vetor[q];
                vetor[q] = troca;
                i++;
                q++;
            }

        }

        int aux;
        aux = vetor[i];
        vetor[i] = pivo;
        vetor[fim] = aux;

        return q;
    }
}	