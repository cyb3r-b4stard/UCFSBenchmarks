
/* #### ### ########## #, #### ### 
 * ####:
 * ########:
 * ##:
 */

import ecs100.*;

/** # ####### #### ##### ####-#####-######## #### ### ####.
 */
public class RPS{

    public RPS(){
        UI.initialise();
        UI.addButton("Clear", UI::clearPanes);
        
        UI.addButton("Six Rounds", this::playRPSGame);
        UI.addButton("Completion", this::playRPSCompletion);
        UI.addButton("Quit", UI::quit);
    }   

    /** Play 6 rounds of RPS. This method contains a loop that
     *  will call the playRound method six times.
     */
    public void playRPSGame(){
        UI.println("Hello, let's play Rock Paper Scissors");
        UI.println("Each round, you must choose rock, paper, or scissors;");
        UI.println("The computer will do the same then report who won.");
        int count = 0;
        int Score = 0;
        
        while (count < 6) {
            UI.println("------------------------");
            this.playRound(0, 0);
            count = count + 1;
        }
        UI.println("------------------------");
        UI.println("All done");
    }
    
    
    
        
    /** Play one round of RPS and print out the choices and the result */
    public void playRound(int Score, int ChangeInScore){
        Score = Score + ChangeInScore;
        UI.println(Score);
        
    /* Outline of algorithm
        make the computer's choice and store in variable
        ask for the player's choice and store in variable
        display the choices
        (use  UI.drawImage(...) to draw the images.
        eg, UI.drawImage("scissors-left.jpg",100,100)
        to draw the left hand scissors image at position 100, 100)
        compare the choices to work out who won and report it
        (use  UI.drawString("You won", 50, 50)  to put "You won" at position 50,50)
    */
      String chosen = UI.askString("rock, paper, scissors?!"); 
      
       if( chosen.equals( "rock" ))
      {
           UI.setColor(java.awt.Color.white);
           UI.fillRect(0,0,1000,1000);
           UI.setColor(java.awt.Color.black);
           UI.drawImage("rock-left.jpg", 100, 100);
           UI.drawString("you chose rock", 100, 90);
          
      }
      
      if( chosen.equals ( "scissors"))
      {  UI.setColor(java.awt.Color.white);
         UI.fillRect(0,0,1000,1000);
         UI.setColor(java.awt.Color.black);
         UI.drawImage("scissors-left.jpg", 100, 100);
         UI.drawString("you chose scissors", 100, 90);
         
      }
      
      if(chosen.equals( "paper"))
      {
          UI.setColor(java.awt.Color.white);
          UI.fillRect(0,0,1000,1000);
          UI.setColor(java.awt.Color.black);
          UI.drawImage("paper-left.jpg", 100, 100);
          UI.drawString("you chose paper", 100, 90);
        }
      double n = Math.random();
      if( n >0.667){
          UI.drawImage("scissors-right.jpg", 300, 100);
          UI.drawString("computer chose scissors", 300, 90);
        }
      if(n > 0.334 && n < 0.667) {
          UI.drawImage("rock-right.jpg", 300, 100);
          UI.drawString("computer chose rock", 300,90);
        }
      if(n <0.334){
          UI.drawImage("paper-right.jpg", 300, 100);
          UI.drawString("computer chose paper", 300, 90);
        }
        
      if( chosen.equals( "paper") && n>0.667){
          UI.drawString("YOU LOSE!", 250, 250); 
          this.Score(-1);
      }    
      if( chosen.equals( "paper") && n > 0.334 && n < 0.667){
          UI.drawString("YOU WIN!", 250, 250) ; 
          this.Score(1);
      }   
      if( chosen.equals( "paper") && n <0.334){
          UI.drawString("YOU DRAW!", 250, 250) ; 
      }   
      if( chosen.equals( "rock") && n>0.667){
          UI.drawString("YOU WIN!", 250, 250)  ;
          this.Score(1);
      }   
      if( chosen.equals( "rock") && n > 0.334 && n < 0.667){
          UI.drawString("DRAW!", 250, 250)  ;
      }   
      if( chosen.equals( "rock") && n <0.334){
          UI.drawString("YOU LOSE!", 250, 250)  ;
          this.Score(-1);
      }   
      if( chosen.equals( "scissors") && n>0.667){
          UI.drawString("DRAW!", 250, 250)  ;
      }   
      if( chosen.equals( "scissors") && n > 0.334 && n < 0.667){
          UI.drawString("YOU LOSE!", 250, 250)  ;
          this.Score(-1);
      }   
      if( chosen.equals( "scissors") && n <0.334){
          UI.drawString("YOU WON!", 250, 250)  ;
          return (int 1);
        }   
     
    }
    /** COMPLETION VERSION
    Play  RPS rounds until the player's score reaches 3 or -3.
     */
    public void playRPSCompletion(){
        /*# YOUR CODE HERE */

    }

}