
/**
 * ### ############ ##### ########## # ####### ##### ####### ### #
 * ########-##### ## #### #####. ### ##### ##### ##### ### #######. ### 
 * ##### ## ### ##### ## ##:## (########) ## ##:## (### ###### ###### 
 * ########).
 * 
 * ### ##### ####### ######## "#####" (### ### ######## ######) ##### ######
 * ### ###### ## ############ ### #######. #### ## #### ## ### ##### #####
 * #######: ### #### ########## #### ### ####### #### #### ## ####.
 * 
 * @###### ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */
public class ClockDisplay
{
    private NumberDisplay hours;
    private NumberDisplay minutes;
    private NumberDisplay seconds;
    private String timeOfDay;
    private String displayString;    
    
    private int alarmAtHours;
    private int alarmAtMinutes;
    private int alarmAtSeconds;
    private boolean alarmIsSet;

    /**
     * Constructor for ClockDisplay objects. This constructor 
     * creates a new clock set at 00:00.
     */
    public ClockDisplay()
    {
        hours = new NumberDisplay(24);
        minutes = new NumberDisplay(60);
        seconds = new NumberDisplay(60);
        updateDisplay();
    }

    /**
     * Constructor for ClockDisplay objects. This constructor
     * creates a new clock set at the time specified by the 
     * parameters.
     */
    public ClockDisplay(int hour, int minute, int second)
    {
        hours = new NumberDisplay(24);
        minutes = new NumberDisplay(60);
        seconds = new NumberDisplay(60);
        setTime(hour, minute,second);
    }

    /**
     * This method should get called once every minute - it makes
     * the clock display go one minute forward.
     */
    public void timeTick()
    {
        seconds.increment();
        if (seconds.getValue() == 0) {
            minutes.increment();
            if(minutes.getValue() == 0) {  
                hours.increment();
            }
        }
        boolean alarmShouldGoOff = checkAlarm();
        
        if (alarmShouldGoOff == true) {
            System.out.println("Wake up!!");
        }
        
        
        updateDisplay();
    }

    /**
     * Set the time of the display to the specified hour and
     * minute.
     */
    public void setTime(int hour, int minute, int second)
    {
        hours.setValue(hour);
        minutes.setValue(minute);
        seconds.setValue(second);
        if (hours.getValue() < 12) {
            timeOfDay = "AM";
        } else {
            timeOfDay = "PM";
        }
        updateDisplay();
    }

    /**
     * Return the current time of this display in the format HH:MM.
     */
    public String getTime()
    {
        return displayString;
    }

    /**
     * Update the internal string that represents the display.
     */
    private void updateDisplay()
    {
        String usableHours;
        if (hours.getValue < 12) {
            usableHours = hours.getDisplayValue();
            timeOfDay = "AM";
        } else {
            usableHours = hours.getDisplayValue()-12;
            timeOfDay = "PM";
        }
        
        displayString = hours.getDisplayValue() + ":" + 
                      minutes.getDisplayValue() + ":" +
                      seconds.getDisplayValue();
    }
    
    /**
     * Sets an alarm
     */
    public void setAlarm(int hour, int minutes, int seconds)
    {
        alarmIsSet = true;
        
        alarmAtHours = hour;
        alarmAtMinutes = minutes;
        alarmAtSeconds = seconds;
    }
    
    /**
     * Cancels an alarm
     */
    public void cancelAlarm()
    {
        alarmIsSet = false;
        alarmAtHours = 0;
        alarmAtMinutes = 0;
        alarmAtSeconds = 0;
    }
    
    public boolean checkAlarm()
    {
        if (alarmIsSet == true &&
            alarmAtHours = hours.getValue() &&
            alarmAtMinutes = minutes.getValue() &&
            alarmAtSeconds = seconds.getValue) {
            
            alarmIsSet = false;
            alarmAtHours = 0;
            alarmAtMinutes = 0;
            alarmAtSeconds = 0;
            return true;
        } else {
            return false;
        }
    }
}