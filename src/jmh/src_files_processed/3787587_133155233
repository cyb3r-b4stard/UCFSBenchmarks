
/**
 * ##### # ########### ## ##### ########### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class Algorithm05
{
    public void drawChars(char ch, int number){
        for(int counter=0; counter<number; counter++)
        {
            if(ch == '\n' && number == 1)
            {
                System.out.print("\n");
            }
            else
                System.out.print(ch);         
        }
    }

    public void drawRectangle(char ch, int width, int height,int pos){

        drawChars(' ',pos);
        drawChars(ch,width);
        drawChars('\n',1);

        for( int i=0; i<height-2;i++)
        { 
            drawChars(' ',pos);
            drawChars(ch,1);
            drawChars(' ',width-2);
            drawChars(ch,1);
            drawChars('\n',1);
        }
        drawChars(' ',pos);
        drawChars(ch,width);
        drawChars('\n',1);

    }

    public void drawFilledRectangle(char ch,char fillchar,int width, int height,int pos){
        drawChars(' ',pos);
        drawChars(ch,width);
        drawChars('\n',1);

        for( int i=0; i<height-2;i++)
        { 
            drawChars(' ',pos);
            drawChars(ch,1);
            drawChars(fillchar,width-2);
            drawChars(ch,1);
            drawChars('\n',1);
        }
        drawChars(' ',pos);
        drawChars(ch,width);
        drawChars('\n',1);
    }

    public void drawTree(int pos, char ch, int height, int charFirstLine){
        int i=pos+height-1;

        while(i>pos){
            drawChars(' ',i);
            drawChars(ch,charFirstLine);
            drawChars('\n',1);

            i=i-1;
            charFirstLine=charFirstLine+2;
        }
    }

    public void drawChristmasTree(char charCrown, char charTrunk){

        drawTree(9,charCrown,4,1);
        drawTree(5,charCrown,7,3);
        drawTree(2,charCrown,7,9);
        drawFilledRectangle(charTrunk,charTrunk,4,6,10);

    }

    public void drawZigZag( int height, char ch, boolean endless){
        int i=0;
        int y=0;
        boolean endless==true

            for(i=0; i<height;i++){
                for(y=0;y<=i;y++){
                    drawChars(' ',1);
                }
                drawChars(ch,1);
                drawChars('\n',1);

            }
            for(i=height-2;i>=0;i--){
                for(y=i;y>=0;y--){
                    drawChars(' ',1);
                }
                drawChars(ch,1);
                drawChars('\n',1);
            }

            try{               
                Thread.sleep(50);
            }catch(Exception exc){} 
        }
    }

    public void Test(){

        drawRectangle('-',10,5,10);  
        drawChars('\n',2);       
        drawFilledRectangle('&','"',10,10,20);   
        drawChars('\n',2);      
        drawTree(0,']',10,1);   
        drawChars('\n',2);      
        drawTree(3,'/',10,1);  
        drawChars('\n',2);    
        drawTree(1,'~',5,3); 
        drawChars('\n',2);   
        drawTree(5,'~',5,3);     
        drawChars('\n',2);     
        drawChristmasTree('>','Âµ');    
        drawZigZag(5,'*',false); 

    }
}
