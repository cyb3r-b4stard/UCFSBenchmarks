
import info.gridworld.actor.Rock;
import info.gridworld.actor.Bug;
import info.gridworld.actor.Flower;
import info.gridworld.actor.Actor;
import info.gridworld.actor.Critter;
import info.gridworld.grid.Location;
import java.util.ArrayList;
import info.gridworld.actor.ActorWorld;
import info.gridworld.grid.BoundedGrid;
import java.awt.Color;
import info.gridworld.grid.Grid;
import java.util.ArrayList;
public class Player extends Bug
{
    public int mybank;
    public String myname;
    public int famMem;
    public int mypoints;
    public boolean educated;
    public int salary;
    public boolean education;
    public int degree;
    public int stepped;
    public Player(){
        mybank=0;
        myname="";
        famMem=0;
        mypoints=0;
        salary=0;
        education=false;
        stepped=0;
    }

    public void picktile(){
        int rand=(int) (Math.random()*100);
        if (rand<10){
            mypoints=10000;
            mybank+=mypoints;
        }
        if (rand==10){
            mypoints= 100000;
            mybank+=mypoints;
            String str2[]={"Win Nobel Peace Prize", "Wins the Lottery"};
            int rand1= (int) (Math.random()*str2.length);
            System.out.println (myname+ " " +str2[rand1]);
        }
        if (rand>10&& rand <20){
            mypoints=20000;
            mybank+=mypoints;
            String f[]={ "Donated blood to the American Red Cross", "Happy Christmas","Going to a Party"};
            int rand2= (int) (Math.random()*f.length);
            System.out.println (myname+ " " +f[rand2]);
        }
        if (rand >=20&& rand <40){
            mypoints=300;
            mybank+=mypoints;
            String str3[]= {"Birthday", "Bonus","Found missing cat"};
            int rands= (int) (Math.random()*str3.length);
            System.out.println (myname+ " " + str3[rands]);
        }
        if (rand >=40&& rand <50){
            mypoints=800;
            mybank+=mypoints;
            String s[]= {"Become Little Miss Springfield", "Successfully raised strawberries"};
            int rands1= (int) (Math.random()*s.length);
            System.out.println (myname+ " " + s[rands1]);
        }
        if (rand >=50&& rand <60){
            mypoints=0;
            mybank+=mypoints;
            String h[]= {"Went to school... Boring", "Sleeping and take the day off"};
            int rands2= (int) (Math.random()*h.length);
            System.out.println (myname+ " " + h[rands2]);
        }
        if (rand >=50&& rand <60){
            mypoints=50000;
            mybank+=mypoints;
            String r[]= {"Have an Earthbound comet named for you", "Found GOLD!"};
            int rands3= (int) (Math.random()*r.length);
            System.out.println (myname+ " " + r[rands3]);
        }
        if (rand >=60&& rand <80){
            mypoints=50000;
            mybank+=mypoints;
            String l[]= {"Lifetime Achievement Award", "Win a lawsuit", "Go on Wheel of Fortune"};
            int rands4= (int) (Math.random()*l.length);
            System.out.println (myname+ " " + l[rands4]);
        }
        if (rand >=80&& rand <100){
            mypoints=50000;
            mybank+=mypoints;
            String o[]={ "Third place in Marathon","Swim the English Channel"};
            int rands5= (int) (Math.random()*o.length);
            System.out.println (myname+ " " + o[rands5]);
        }
    }

    public void pickcareer(Player p){
        salary=0;
        if (education==true){
            System.out.println ("Bachelors (enter 1)");
            System.out.println ("Costs 40,000 to get bachelors degree");
            System.out.println ("Masters (enter 2)");
            System.out.println ("Costs 60,000 to get masters degree");
            System.out.println ("Doctorate (enter 3)");
            System.out.println ("Costs 100,000 to get doctorate degree");
            UserInput input= new UserInput();
            degree= input.getInteger("Please 1, 2, or 3 ");
            if (degree==1){
                System.out.println ("Choice of careers for bachelors");
                System.out.println ("Sales Associate (enter 1)");
                System.out.println ("Software Engineer (enter 2)");
                System.out.println ("Financial Analyst (enter 3)");
                System.out.println ("Postal Service Clerk (enter 4)");
                System.out.println ("Farmer (enter 5)");
                System.out.println ("Loan Shark (enter 6)");
                System.out.println ("Musician (enter 7)");
                UserInput input1= new UserInput();
                int s= input1.getInteger("Please select a job");
                int sal=(int)(Math.random()*13)+45;
                salary=sal*1000;
                System.out.println ("You earn $"+salary);
            }
            if (degree==2){
                System.out.println ("Choice of careers for masters");
                System.out.println ("Teacher (enter 1)");
                System.out.println ("Manager (enter 2)");
                System.out.println ("Physican assistant(enter 3)");
                System.out.println ("Writer(enter 4)");
                System.out.println ("Pyschologist (enter 5)");
                System.out.println ("Environmental scientist (enter 6)");
                UserInput input1= new UserInput();
                int s= input1.getInteger("Please select a job");
                int sal=(int)(Math.random()*18)+60;
                salary=sal*1000;
                System.out.println ("You earn $"+salary);
            }
            if (degree==3){
                System.out.println ("Choice of careers for doctorate");
                System.out.println ("College professor (enter 1)");
                System.out.println ("Physcian (enter 2)");
                System.out.println ("Astronomer (enter 3)");
                System.out.println ("Writer(enter 4)");
                System.out.println ("Politian (enter 5)");
                System.out.println ("Counselor (enter 6)");
                System.out.println ("Doctor (enter 7)");
                UserInput input1= new UserInput();
                int s= input1.getInteger("Please select a job");
                int sal=(int)(Math.random()*22)+100;
                salary=sal*1000;
                System.out.println ("You earn $"+salary);
            }
        }
        else{
            System.out.println("Choice of jobs for the high school graduate");
            System.out.println("McDonalds French Fry maker (enter 1)");
            System.out.println("Dog Walker (enter 2)");
            System.out.println("Casino Card Dealer (enter 3)");
            System.out.println("Pillow Fluffer at the Dream Factory (enter 4)");
            System.out.println("Ice Cream Man (enter 5)");
            System.out.println("Bank Robber (enter 6)");
            UserInput input1= new UserInput();
            int s= input1.getInteger("Please select a job");
            int sal=(int)(Math.random()*11)+15;
            salary=sal*1000;
            System.out.println ("You earn $"+salary);
        }
    }

    public void act(int steps){
        while (stepped<steps){
            /*if(this.getLocation()== new Location(0,0)){
            System.out.println("Choice of Career path: High school graduate or continue to college");
            System.out.println (" For College (enter 1) and for High School graduate (enter 2)");
            UserInput input4= new UserInput();
            int career1= input4.getInteger("Please enter 1 or 2 ");
            if(career1==2){
            this.setDirection(135);
            }
            else{
            this.setDirection(90);
            }
            }
            if(this.getLocation()==new Location(0,16)){
            this.setDirection(90);
            }
             */

            /*else if(this.getLocation()==new Location(8,29)){
            System.out.println("something new");
            System.out.println ("choose path 1 or path 2");
            UserInput input5= new UserInput();
            int path1= input5.getInteger("Please enter 1 or 2 ");
            if(path1==1){
            this.setDirection(225);
            }
            else{
            this.setDirection(180);
            }

            }
            else if(this.getLocation()==new Location(9,28)){
            this.setDirection(270);
            }
            else if(this.getLocation()==new Location(9,24)){
            this.setDirection(225);
            }
            else if(this.getLocation()==new Location(15,18)){
            this.setDirection(270);
            }
            else if(this.getLocation()==new Location(15,14)){
            this.setDirection(225);
            }
            else if(this.getLocation()==new Location(19,10)){
            this.setDirection(270);
            }
             */
            if(this.getLocation()==new Location(0,29)){
                this.setDirection(180);
            }
            else if(this.getLocation()==new Location(19,0)){
                this.setDirection(0);
            }
            else if(this.getLocation()==new Location(19,29)){
                this.setDirection(270);
            }
            /*
            else if(this.getLocation()==new Location(3,3)){
            this.setDirection(90);
            }
            else if(this.getLocation()==new Location(3,13)){
            this.setDirection(45);
            }
             */
            move();

            stepped++;
        }

    }
    Actor oldT=new Actor();
     Actor previous= new Actor();
     Location prevloc= null;
    public void move(){
        Location aloc= new Location (0,0);
        Location w= getLocation();
        Location next=getLocation().getAdjacentLocation(getDirection());
        if (getRow()==0&& getLocation()!= aloc){
           previous= getGrid().get(Location(getRow(), getCol()-1));
           prevloc=Location(getRow(), getCol()-1);
        }
        if (getRow()==19&& getCol()!= 29){ 
           previous= getGrid().get(Location(getRow(), getCol()+1));
            prevloc=Location(getRow(), getCol()+1);
        }
        if (getRow()!=0 && getCol()==0){
           previous= getGrid().get(Location (getRow()+1), getCol());
            prevloc=Location (getRow()+1), getCol();
        }
        if (getRow()!=0 && getCol()==29){
           previous= getGrid().get(Location (getRow()-1), getCol());
            prevloc=Location (getRow()-1), getCol();
        }
        if (getGrid().get(next) instanceof Tiles){
            Tiles newtile= (Tiles) getGrid().get(next);
            Actor newT=getGrid().remove(next); 
            moveTo(next);
            previous.putSelfInGrid(getGrid(),prevloc);
            
        }
       
    }
}
