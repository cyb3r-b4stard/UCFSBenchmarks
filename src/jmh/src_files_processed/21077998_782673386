
/**
 * ##### # ########### ## ##### ####### ####.
 * 
 * @###### ####### : #########
 * @####### ##.##.####
 */
import java.time.LocalDate;
import java.util.ArrayList;
import java.time.format.*;
import java.util.*;
public class Patient
{
    private String patientName;
    private LocalDate dateOfBirth;
    private String medNumber;
    private ArrayList<Visit> myVisits;
    
    private int birthYear;
    
    /**
     * Constructor for objects of class Patient
     */
    public Patient(String medicalNumber)
    {
        medNumber=medicalNumber;
        myVisits = new ArrayList<Visit>( );
    }
    
    
    /**
     *Assign Patient Name
     * @param name
     */
    
    public void setName(String name)
    {
        patientName=name;
    }

    /**
     *get Patient Name
     *@return patientName 
     */
    
    public String getName( )
    {
        return patientName;
    }
     
    
    /**
     * Date format is "YYYY-MM-DD"
     * @param birthday
     */
    
    public void setBirthDay(LocalDate birthday)throws Exception
    {
        DateTimeFormatter formatter =DateTimeFormatter.ofPattern("MM-DD-YY");
        try
        {
            dateOfBirth=birthday;
        }
        catch(Exception e)
        {
           /System.out.println("Not a valid format try YYYY-MM-DD");
        }
    }
    
   public void setBirthYear(int myBirthday)
    {
       birthYear=myBirthday;
    } 
   
    /**
     * Patients birthday returns
     * 
     */
    public LocalDate getDateOfBirth()
    {
        return dateOfBirth;
    }
    
    /**
     * Patient is visiting 
     * 
     * @param  aVisit   
     */
    public void addVisit (Visit aVisit ) throws Exception
    {
        try
        {
            if (aVisit != null)
            {
                myVisits.add(aVisit);
            }
        }
        catch (Exception e)
        {
             System.out.println("Select a visit");
        }
    }
    
    /**
     * Number of visits of patient
     * 
     * @param myVisits
     */
    public ArrayList<Visit> getAllVisits()
    {
        
        return myVisits;
    }
    
    public Visit getVisit (int index )throws Exception
    {
        try
        {
            return myVisits.get(index);
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
            return null;
        }
    }
            
    /**
     *Getting the Patients medicare Number
     *
     */
    public  String getMedNumber( )
    {
        return medNumber;
    }
    
    /**
     * Remove a Selected visit by user
     */
     
    public void removeVist( Visit aVisit)throws Exception
    {
        try
        {
            myVisits.remove(aVisit);
        }
        catch(Exception e)
        {
            System.out.println(e.getMessage());
        }
    }
    
    /**
     * Find Number of Visits
     * @param totalVisits
     * @return totalVisits
     */
    public int getNumberOfVisits( )
    {
        int totalVisits;
        return totalVisits=myVisits.size ( );
    }
    
    /**
     * Printing patient class detai
     */
    public String toString( )
    {
       return "Name of Patient :"+patientName+" Medicare Number :"+medNumber+"DOB :"+dateOfBirth;
       
    }
    
}