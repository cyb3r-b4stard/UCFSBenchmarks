
/**
 * ##### ###### ######### ##### ############## ### #### ####### (##, ## ### ##)
 * 
 * @###### #. #######
 * @####### ####### #.#
 */
public class Rangierbahnhof
{
    
    Stack S1;
    Stack S2;
    Stack S3;
    
    S1 = new Stack();
    S2 = new Stack();
    S3 = new Stack();


    /**
     * Konstruktor f체r einen Rangierbahnhof
     */
    public Rangierbahnhof()
    {


        initializeS1();
        initializeS2();
        initializeS3();
    }

    /**
     * Das Gleis S1 wird in den Anfangszustand von Aufgabe 1 versetzt:
     * 
     * -------------------------------------------
     * 
     */
    public void initializeS1()
    {
    }

    /**
     * Das Gleis S2 wird in den Anfangszustand von Aufgabe 1 versetzt:
     * 
     * ----BABBBABBAB-----------------------------
     * 
     */
    public void initializeS2()
    {
    }

    /**
     * Das Gleis S3 wird in den Anfangszustand von Aufgabe 1 versetzt:
     * 
     * ----ABBABABAA------------------------------
     * 
     */
    public void initializeS3()
    {
    }

    /**
     * Der vorderste Waggon auf S1 wird auf S2 verschoben.
     */

    public void s1ToS2()
    {
    }

    /**
     * Gibt den Inhalt von S1 als String aus. Nach der Ausgabe liegt S1 unver채ndert vor.
     */

    public void s1ToString(){
         Stack lDummy = new Stack();
         String lOutput = new String();
         while(!s1.isEmpty()){
             lOutput = lOutput + (String)s1.top()+" ";
             lDummy.push(s1.top());
             s1.pop();
         }
         while(!lDummy.isEmpty()){
             s1.push(lDummy.top());
             lDummy.pop();
         }
 
         System.out.println(lOutput);
    }

    /**
     * Gibt den Inhalt von S2 als String aus. Nach der Ausgabe liegt S2 unver채ndert vor.
     */

    public void s2ToString(){
         Stack lDummy = new Stack();
         String lOutput = new String();
         while(!s2.isEmpty()){
             lOutput = lOutput + (String)s2.top()+" ";
             lDummy.push(s2.top());
             s2.pop();
         }
         while(!lDummy.isEmpty()){
            s2.push(lDummy.top());
             lDummy.pop();
         }
         System.out.println(lOutput);
    }

    /**
     * Gibt den Inhalt von S3 als String aus. Nach der Ausgabe liegt S3 unver채ndert vor.
     */

    public void s3ToString(){
         Stack lDummy = new Stack();
         String lOutput = new String();
         while(!s3.isEmpty()){
             lOutput = lOutput + (String)s3.top()+" ";
             lDummy.push(s3.top());
             s3.pop();
         }
         while(!lDummy.isEmpty()){
             s3.push(lDummy.top());
             lDummy.pop();
         }
         System.out.println(lOutput);
    }

}