
/**
 * ##### # ########### ## ##### ############# ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class FootballMatch
{
   private int minutesPlayed;
   private FootballTeam homeTeam;
   private int homeGoals;
   private FootballTeam awayTeam;
   private int awayGoals;
   
   
   /**
    * Constructor for objects of class FootballMatch
    */
   public FootballMatch(FootballTeam aHomeTeam, FootballTeam anAwayTeam)
   {
      this.minutesPlayed = 0; 
      this.homeTeam = aHomeTeam;
      this.homeGoals = 0;
      this.awayTeam = anAwayTeam;
      this.awayGoals = 0;
   }
   
   
   /**
    * Set the number of minutes placed of the receiver.
    */
   public void setMinutesPlayed(int minutes)
   {
      this.minutesPlayed = minutes;
   }
   
   /**
    * Set the home team of the receiver.
    */
   public void setHomeTeam(FootballTeam aFootballTeam)
   {
      this.homeTeam = aFootballTeam;
   }
   
    /**
    * Set the number of home goals scored of the receiver.
    */
   public void setHomeGoals(int goalsScored)
   {
      this.homeGoals = goalsScored;
   }
   
   /**
    * Get the away team of the receiver .
    */
   public void setAwayTeam(FootballTeam aFootballTeam)
   {
      this.awayTeam = aFootballTeam;
   }
   
    /**
    * Set the number of away goals scored of the receiver.
    */
   public void setAwayGoals(int goalsScored)
   {
      this.awayGoals = goalsScored;
   }
   
   /**
    * Get the number of minutes placed of the receiver.
    */
   public int getMinutesPlayed()
   {
      return this.minutesPlayed;
   }
   
   /**
    * Get the home team of the receiver .
    */
   public FootballTeam getHomeTeam()
   {
      return this.homeTeam;
   }
   
   /**
    * Get the number of home goals scored of the receiver.
    */
   public int getHomeGoals()
   {
      return this.homeGoals;
   }
   
   /**
    * Get the away team of the receiver .
    */
   public FootballTeam getAwayTeam()
   {
      return this.awayTeam;
   }
   
    /**
    * Get the number of away goals scored of the receiver.
    */
   public int getAwayGoals()
   {
      return this.awayGoals;
   }
      
   
   /**
    * Returns a boolean that denotes whether or not the Football Match is 
    * in progress or not. This is true when the minutes played of the 
    * receiver is between 1 and 89.
    */
   private boolean matchIsInProgress()
   {
      int currentMinute = this.getMinutesPlayed();
      
      if (currentMinute >= 1 && currentMinute <90)
      {
         return true;
      }

      return false;
   }   
   
   
   /**
    * Represents the start of the game. Checks that the match has not started by seeing if the 
    * minutes played of the receiver are less than 1. If so then the number of minutes played 
    * of the receiver is updated to 1.
    */
   public void kickOff()
   {
      if (this.getMinutesPlayed() < 1)
      {
         this.setMinutesPlayed(1);
      }
   }
    
   /**
    * Checks that the match is in progress and if so increments the number of away
    * goals scored by one.
    */
   public void awayGoal()
   {
      if (this.matchIsInProgress() == true)
      {
         this.setAwayGoals(this.getAwayGoals() + 1);
      }
   }  
   
   /**
    * Checks that the match is in progress and if so increments the number of home
    * goals scored by one.
    */
   public void homeGoal()
   {
      if (this.matchIsInProgress() == true)
      {
         this.setHomeGoals(this.getHomeGoals() + 1);
      }
   }
      
   /**
    * Represents the end of the game. Checks that the match is currently in progress
    * and if so set the minutes played to 90.
    */
   public void finalWhistle()
   {
      if (this.matchIsInProgress() == true)
      {
         this.setMinutesPlayed(90);
      }
   }

   /**
    * Provide a string representation of this football match.
    */
   public String toString()
   {
      return = "This Football Match, played at " this.getHomeTeam().getStadium() 
                      + ", is between "+ this.getHomeTeam().getName() + " and" + this.getAwayTeam().getName() 
                      + ". After " + this.getMinutes() + " minutes the score is" + this.getHomeGoals() 
                      + "-" + this.getAwayGoals() + ".";
     }
   }
}