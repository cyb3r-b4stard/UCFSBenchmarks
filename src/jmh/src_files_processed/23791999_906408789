
/**
 * ##### # ########### ## ##### ###### ####.
 * 
 * ##### ######## (########)
 * ####### # (##/##/####)
 */
public class MyMath
{
    private int x;

    /**
     * Constructor for objects of class MyMath
     */
    public MyMath()
    {
        x = 0;
    }

    /**
     * Takes in four doubles and returns average
     * 
     * @param a first nuumber
     * @param b second number
     * @param c third number
     * @param d fourth number
     * @return average of inputs 
     */
    public static double mean4(double a, double b, double c, double d)
    {
        double sum; 
        sum = a + b + c + d;
        return sum / 4; 
    }

    /**
     * takes in three integers and returns the minimum
     * 
     * @param a first int
     * @param b second int
     * @param c third int
     * @return minimum of inputs
     */
    public static int minInt(int a, int b, int c)
    {
        int result = 0;
        if( a < b && a < c ) 
        {
            result = a;
        }else if( b < a && b < c)
        {
            result = b ;
        }else 
        {
            result = c ;
        }
        return result ;
    }

    /**
     * takes in three doubles and returns minimum
     * @param a first number
     * @param b second number
     * @param c third number
     * @return minimum of inputs
     */
    public static double minDoub(double a, double b, double c)
    {
        double result = 0;
        if( a < b && a < c )
        {
            result = a;
        }else if( b < a && b < c)
        {
            result = b;
        }else
        {
            result = c;
        }    
        return result ;
    }

    /**
     * Calculate n factorial (n!) where n <= 20.
     * @param n the argument whose factorial is required
     * @return the factorial of the argument
     */
    public static long longFact(int n)
    {
        long result = 1;
        int counter = 2;
        while (counter <= n)
        {
            result = result * counter;
            counter++;
        }
        return result;
    }

    /**
     * Calculate the binomial coefficients known as 'n choose k'
     * @param n the argument whose factorial is required
     * param k the arguement to be chosen 
     * @return the sum 
     */
    public static long biCoeff(int n, int k)
    {
        long result = 1;
        int counter = 2;

        while (counter <=n)
        {
            result = longFact(n)/longFact(k)/longFact(n-k);
            counter++;
        }
        return result;
    }

    /**
     * Returns the value of the first argument to the power of the second argument
     * @param a fist integer
     * @param b second integer
     * @return the first integer to the power of the second integer
     */
    public static int intPower(int a, int b)
    {
        int result = 0;
        for(int i=0; i<b; i++)
        { 
            result = a * a * a;
        }
        return result;
    }
    

    
    /**
     * calculate the sum of the fist n natural numbers
     * @param n the argurement required
     * @return the sum of the first n numbers
     */
    public static int Sum(int n)
    {
        int result = 28;
        int sum = 0;

        for(int i = 0; i<=n; i++)
        {
            sum = sum + i;
        }
        return result;
    }
    
    /**
     *  calculate the product of numbers in the range m to n inclusive
     *  @param m the first arguement
     *  @param n the second arguement
     *  @return the product 
     */
    public static long longProd(long m, long n)
    {
        long result = 240;
        long sum = 0;
        
        for(long i=0; i<=n; i++)
        {
            sum = m*(m+1)*(m+2)*n;
        }
        return result;
    }
    
     /**
     * takes in three integers and returns the maximum
     * 
     * @param a first int
     * @param b second int
     * @param c third int
     * @return maximum of inputs
     */
    public static int maxInt(int a, int b, int c)
    {
        int result = 0;
        if( a > b && a > c ) 
        {
            result = a;
        }else if( b > a && b > c)
        {
            result = b ;
        }else if(c > a && c > b)
        {
            result = c ;
        }
        return result ;
    }
    
     /**
     * Takes in four integers and squares the result of the average
     * @param a first nuumber
     * @param b second number
     * @param c third number
     * @param d fourth number
     * @return average of inputs 
     */
    public static int meanSqr4(int a, int b, int c, int d)
    {
        int sum; 
        sum = a + b + c + d;
        sum1 = sum/4;
        result = sum ^ 2
    }
}
