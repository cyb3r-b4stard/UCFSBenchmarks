/**
 * ####-#-###### #### #######  
 * 
 * @###### ##### #. ###### 
 * @
 */

import TurtleGraphics.*;
import java.awt.event.*;  
import java.awt.Color;

public class Doodler implements KeyListener
{
   SketchPadWindow win;
   StandardPen pen; 

    /**
     * Constructor for objects of class Doodler
     */
    public Doodler() {
        win = new SketchPadWindow(400, 400);
        win.addKeyListener(this);           
        pen = new StandardPen(win);
        pen.down();
    }

    /**
     * Gets key input from user
     */
   public void keyPressed(KeyEvent evt) {

       int code = evt.getKeyCode();  

       if (code == KeyEvent.VK_UP) 
          pen.move(2);
       else if (code == KeyEvent.VK_LEFT) 
          pen.turn(90);
       else if (code == KeyEvent.VK_RIGHT) 
          pen.turn(-90);          
       else if (code == KeyEvent.VK_DOWN) 
          pen.move(-2);
       else if (code == 'R')        
          pen.setColor(Color.red);
       else if (code == 'B')
          pen.setColor(Color.blue);
       else if (code == 'W')
          pen.setColor(Color.white);
       else if (code == 'D') 
          pen.turn(45);   
       else if (code == '1')
          pen.setWidth(20);
       else if (code == 'H')
          pen.turn(-45);
          pen.move(10);
          pen.turn(-90);
          pen.move(10);
          pen.turn(-90);
          pen.turn(-45);
          pen.move(20);
          pen.turn(180);
          pen.move(5);
          pen.turn(90);
          pen.move(10);
          pen.turn(90);
          pen.move(4);
          pen.turn(90);
          pen.move(4);
          pen.turn(90);
          pen.move(2);
          pen.turn(90);
          pen.move(4);
          pen.turn(90);
          pen.move(80;
          pen.turn(90);
          pen.move(10);
          pen.turn(90);
          pen.move(2);
          pen.turn(90);
          pen.setColor(Color.white);
          pen.move(2);
          setColor(Color.black);
          pen.move(2);
          pen.turn(-90);
          pen.move(2);
          pen.turn(-90);
          pen.move(2);
          pen.turn(-90);
          pen.move(2);
          
          
       
       
          
 
   } 
   
   
   public void keyTyped(KeyEvent evt) {}   
   public void keyReleased(KeyEvent evt) {}   
}
   