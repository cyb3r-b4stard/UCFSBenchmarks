import java.util.Random;
import java.util.ArrayList;
/**
 * ##### # ########### ## ######### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
public class MarkovOne {

    private String myText;
    private Random myRandom;
    
    public MarkovOne() implements IMarkovModel {
        myRandom = new Random();
    }
    
    public ArrayList<String> getFollows(String key){
        ArrayList<String> follows = new ArrayList<>();
        int pos = 0;
        while(pos < myText.length()){
            int start = myText.indexOf(key,pos);
            if( start == -1){
                break;
            }        
            if(start + key.length() > myText.length()-1){
                break;
            }            
            String next = myText.substring(start+key.length(), start+key.length()+1);
            follows.add(next);
            pos = start + key.length();
        }
        return follows;
    }
    
    /*public ArrayList<String> getFollows(String key){
        ArrayList<String> follows = new ArrayList<>();
        int index = 0;
        while(index < myText.length()-1){
            int beginIndex = myText.indexOf(key,index);
            boolean withinStringLength = beginIndex + key.length() < myText.length();
            if( beginIndex != -1 && withinStringLength){                
                int from = beginIndex + key.length();
                int to = beginIndex + key.length() + 1;
                String followingString = myText.substring(from,to);
                follows.add(followingString);
                index = beginIndex+1;
            }        
            else{
                index++;
            }
        }
        return follows;
    }*/
    
    public void setRandom(int seed){
        myRandom = new Random(seed);
    }
    
    public void setTraining(String s){
        myText = s.trim();
    }
    
    /*public String getRandomText(int numChars){
        if (myText == null){
            return "";
        }
        StringBuilder sb = new StringBuilder();
        for(int k=0; k < numChars; k++){
            int index = myRandom.nextInt(myText.length());
            sb.append(myText.charAt(index));
        }        
        return sb.toString();
    }*/
    
    public String getRandomText(int numChars){
        if (myText == null){
            return "";
        }
        StringBuilder sb = new StringBuilder();
        int index = myRandom.nextInt(myText.length()-1);
        String key = myText.substring(index, index+1);
        sb.append(key);
        for(int k=0; k < numChars-1; k++){
            ArrayList<String> following = getFollows(key);
            if(following.size() == 0){
                break;
            }            
            index = myRandom.nextInt(following.size());
            String next = following.get(index);
            sb.append(next);
            key = next;
        }        
        return sb.toString();
    }
    
}