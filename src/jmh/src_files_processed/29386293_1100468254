/**
 * #### ##### ########## # ###### #######. ### ### #### ### ####### #####
 * ### #### ######. ### ####, #####'# ####: ##### ## ########## #######, ##
 * ### ## #######. ### ### ### ## ## #####-###-##### ####### ### #### ##
 * ###### (#### ##### ##'# #### #####, ## ######).
 *
 * #### ##### ### ####### ## ## ##### ####### ### ######## #### #### #####.
 * 
 * @######  ####### ####### ### ##### #. ######
 * @####### ####.##.##
 */
public class Picture
{
    private Square wall;
    private Square window;
    private Triangle roof;
    private Circle sun;
     private Person man;
     private Square dog;
     private Square cat;

    /**
     * Constructor for objects of class Picture
     */
    public Picture()
    {
    }

    /**
     * Draw this picture.
     */
    public void draw()
    {
        wall = new Square();
        wall.moveHorizontal(-280);
        wall.moveVertical(20);
        wall.changeSize(120);
        wall.makeVisible();
        
        
        window = new Square();
        window.changeColor("black");
        window.moveHorizontal(-260);
        window.moveVertical(40);
        window.changeSize(40);
        window.makeVisible();

        roof = new Triangle();  
        roof.changeSize(60, 180);
        roof.moveHorizontal(-120);
        roof.moveVertical(-60);
        roof.makeVisible();

        sun = new Circle();
        sun.changeColor("yellow");
        sun.moveHorizontal(150);
        sun.moveVertical(-100);
        sun.changeSize(80);
        sun.makeVisible();
        sun.slowMoveVertical (62);
  
        
        
        man = new Person();
        man.changeColor("red");
        man.moveHorizontal(-100);
        man.moveVertical(-40);
        man.changeSize(80,60);
        man.makeVisible();
        man.slowMoveHorizontal (150);
        
        dog = new Square();
        dog.moveHorizontal(50);
        dog.moveVertical(20);
        dog.changeSize(120);
        dog.makeVisible();
        dog.changeColor("yellow");
        
        cat = new Square();
        cat.moveHorizontal(80);
        cat.moveVertical(20);
        cat.changeSize(40);
        cat.makeVisible();
        cat.changeColor("black");
        
        rof = new Triangle();  
        rof.changeSize(60, 180);
        rof.moveHorizontal(80);
        rof.moveVertical(20);
        rof.makeVisible();
        rof.changeColor("black")
        
        
      
     
       

     
    
     
    
        
    }

    /**
     * Change this picture to black/white display
     */
    public void setBlackAndWhite()
    {
        if (wall != null)   
        {
            wall.changeColor("black");

            window.changeColor("white");
            roof.changeColor("black");
            sun.changeColor("black");
        }
    }

    /**
     * Change this picture to use color display
     */
    public void setColor()
    {
        if (wall != null)   
        {
            wall.changeColor("red");
            window.changeColor("black");
            roof.changeColor("green");
            sun.changeColor("yellow");
        }
    }
}