
/**
 * ##### # ########### ## ##### ######### ####.
 * 
 * @###### (#### ####) 
 * @####### (# ####### ###### ## # ####)
 */
import java.util.*;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.io.*;
import java.math.*;
public class exercise2
{
    public static void bubblesort(){
        Scanner input = new Scanner (System.in);
        int times= input.nextInt();
        int myarray[]= new int [times];
        int total=0;
        for (int i = 0 ; i <times; i ++){
            myarray[i]=input.nextInt();
        }
        for (int i = 0 ; i <times-1; i ++){
            if ((myarray[i])>(myarray[i+1])){
                int temp=myarray[i];
                myarray[i]=myarray[i+1];
                myarray[i+1]=temp;
                total++;
            }
        }
        System.out.print(total);
    }

    public static void calculator(){
        Scanner input = new Scanner (System.in);
        BigInteger a = new BigInteger (input.nextLine());
        
    }

    public static void snake(){
        Scanner input = new Scanner (System.in);
        int n=input.nextInt();
        int [][]myarray= new int[n][n];
        int x=0,y= 0;
        for (int i = 0 ; i  <n; i ++){
            for (int j = 0 ; j <i+1; j++){
                myarray[i]=j;
               
                System.out.print(myarray[i]);
            }
           
        }
    }	

    public static void wildEncode(){
        Scanner input = new Scanner (System.in);
        int num=input.nextInt();
        int myarray[]= new int [num];
        int answer[]= new int [num];
        int total=0;
        for (int i = 0 ; i <num; i ++){
            myarray[i]= input.nextInt();
        }
        for (int i = 0 ; i <num; i ++){
            for (int j =i; j>0; j--){
                if (myarray[i]>myarray[j]){
                    total=total+1;
                }
                answer[i]=total;
            }
            System.out.print(answer );
        }   
    }

    public static void main (String[]args){
        Scanner input = new Scanner (System.in);
        int times= input.nextInt();
        String []myarray= new String[times];
        ArrayList<Integer> al = new ArrayList <Integer>();
        int ans=1;
        input.nextLine();
        for (int i = 0 ; i <times; i ++){

            myarray[i]=input.nextLine();

            for(String s: myarray[i].split("")){
                al.add(Integer.parseInt(s));

            }
            int x= al.size();
            for (int y= 0; y <x;  y ++){
                ans=ans*al.get(y);
            }
            System.out.println (ans);
            al.clear();
            ans=1;
        }

    }

    public static void num6174 (){
        Scanner input = new Scanner (System.in);
        int k=input.nextInt();
        int sum=0,times=0,j=0;
        boolean result=false;
        while (result=false){
            int big[]=new int[4];
            int small[]= new int[4];
            int []digits=Integer.toString(k).chars().map(c-> c-='0').toArray();
            Arrays.sort(digits);
            small=digits;    

            for (int i = 4-1; i >=0; i --){
                big[j]=digits[i];
                j++;
            }
            StringBuilder bi= new StringBuilder();
            for (int num: big){
                bi.append(num);
            }
            int b=Integer.parseInt(bi.toString());
            StringBuilder smal= new StringBuilder();
            for (int num: small){
                smal.append(num);
            }
            int s=Integer.parseInt(smal.toString());
            sum=b-s;
            times++;	
            if (sum==k){
                result=true;
                break;
            }
        }
        System.out.print (times);
    }

    public static void mode(){
        Scanner input= new Scanner(System.in);
        int n=input.nextInt();
        int a[]= new int[n];
        for (int i = 0 ; i <n; i++){
            a[i]=input.nextInt();
        }
        Arrays.sort(a);
        for (int i:a){
            System.out.println(i);
        }
    }

    public static void sqrt(){
        Scanner input = new Scanner (System.in);
        int n=input.nextInt();
        double myarray[]= new double[n];
        for (int i = 0 ; i <n; i ++){
            myarray[i]=input.nextInt();
            myarray[i]=Math.sqrt(myarray[i]);
            System.out.println(myarray[i]);
        }

    }

    public static void moneyconversion(){
        Scanner input = new Scanner (System.in);
        int dollars= input.nextInt();
        double cr=input.nextDouble();
        double fee= input.nextDouble();
        double amount =dollars-(dollars*fee);
        amount=amount*cr;
        System.out.println(amount);
    }

    public static void bulb(){
        Scanner input= new Scanner (System.in);
        int n=input.nextInt();
        int k=input.nextInt();

    }

    public static void prime(){
        Scanner input = new Scanner (System.in);
        int total= 0;
        int a=input.nextInt();
        for (int j = 2; j <a; j ++){
            for (int i = 2; i <=Math.pow(a,0.5); i ++){
                if (a%j==0){
                    if (j%i!=0){
                        total=total+j;
                    }
                }
            }
        }
        System.out.println (total);
    }

    public static void sorting(){
        Scanner input = new Scanner (System.in);

        int a=input.nextInt();
        BigInteger myarray[]= new BigInteger [a];
        for (int i = 0 ; i < a; i ++){
            myarray[i]= new BigInteger (input.nextLine());
        }
        int b = input.nextInt();
        BigInteger myarraya[]= new BigInteger [b];
        for (int i = 0 ; i <b; i ++){
            myarraya[i]= new BigInteger(input.nextLine());
        }
        Arrays.sort(myarray);
        Arrays.sort(myarraya);
        System.out.println (myarray);
        System.out.println (myarraya);
    }

    public static void closestpoints(){
        Scanner input = new Scanner (System.in);
        int rep= input.nextInt();
        double biggest=0;;
        double a=0,b=0,c=0;
        for (int i = 0 ; i < 5 ; i ++){
            a=(input.nextDouble());
            b=(input.nextDouble());
            c=Math.abs(b-a);
            if (biggest>0){
                biggest=c;

            }
        }
        System.out.println(c);
    }       

    public static void abosultevalue(){
        Scanner input = new Scanner (System.in);
        int rep=input.nextInt();
        double myarray[]= new double [rep];
        for (int i = 0 ; i <rep; i ++){
            myarray[i]=input.nextDouble();
        }
        for (int i = 0 ; i <rep; i ++){
            System.out.print (myarray);
        }       
    }

    public static void isittree(){
        Scanner input = new Scanner (System.in);
        int n = input.nextInt();
        int m=input.nextInt();
        boolean result=true;
        for (int i = 0 ; i < m ; i ++){
            int u=input.nextInt();
            int v=input.nextInt();
            if (v-u==1){
                result=true;
            }
            else {
                result=false;
                System.out.println ("no");
            }
        }
        System.out.println("yes");
    }

    public static void fractions(){
        Scanner input= new Scanner (System.in);
        int xone=input.nextInt();
        int xtwo=input.nextInt();
        int yone=input.nextInt();
        int ytwo=input.nextInt();
        double x=xone/xtwo;
        double y=yone/ytwo;
        if (x>y){
            System.out.println("x>y");
        }
        System.out.println("x<y");
    }

    public static void calculationsForIntegers(){
        Scanner input = new Scanner (System.in);
        int times = input.nextInt();
        for (int i = 0 ; i <times+times; i ++){
        }
    }

}