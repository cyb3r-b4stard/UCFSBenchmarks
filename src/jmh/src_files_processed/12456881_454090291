import java.util.ArrayList;

/**
 * ### ############# ##### ######## ####### ### ############ ## ########## ## #######.  ### #########
 * ############# ###### ### #####, ### ### #### ## ###### ## ## ###### ###.  ### #### #### ## #####
 * # ####### ##### ###### ###### #### ### ########.
 * 
 * @###### ######## ####### ##########
 * @####### ########, ####
 * 
 * #######: ### ##
 * #### ########
 */

public class CourseCatalog {  
   private ArrayList<Course> courseList;  
   
   /*
    * The constructor for the courseCatalog class. Builds a new coureList
    * and then fills it with some initial courses.
    */
   public CourseCatalog()
   {
      courseList = new ArrayList<Course>();   
      
      System.out.println("Welcome to the Course Catalog Program.");
      
      courseList.add(new Course("CSC",  121, 'Q', 1.0, "SM") );
      courseList.add(new Course("CSC",  122, 'X', 1.0, "SM") );    
      courseList.add(new Course("CSC",  197, 'X', 1.0, "NONE") );  
      courseList.add(new Course("CSC",  498, 'S', 1.0, "NONE") );
      courseList.add(new Course("ENG",  120, 'X', 1.0, "NONE") );
      courseList.add(new Course("ENG",  130, 'X', 1.0, "NONE") );
      courseList.add(new Course("ENG",  151, 'W', 1.0, "AH") );
      courseList.add(new Course("ENG",  201, 'X', 1.0, "NONE") );
      courseList.add(new Course("KINS", 100, 'X', 1.0, "SM") );
      courseList.add(new Course("KINS", 353, 'Q', 1.0, "NONE") );
      courseList.add(new Course("KINS", 363, 'X', 0.5, "NONE") );
      courseList.add(new Course("ARTH", 201, 'W', 1.0, "AH") );
      courseList.add(new Course("SPAN", 140, 'X', 1.0, "LA") );
      courseList.add(new Course("SPAN", 330, 'S', 1.0, "LA") );
      courseList.add(new Course("PSY",  232, 'W', 1.0, "NONE") );
      courseList.add(new Course("CHEM", 170, 'X', .25, "NONE") );
      courseList.add(new Course("ECON", 100, 'Q', 1.0, "SS") );
      courseList.add(new Course("MATH", 123, 'Q', 1.0, "SM") );
      courseList.add(new Course("MATH", 270, 'W', 1.0, "NONE") );
      courseList.add(new Course("HIST", 252, 'X', 1.0, "SS") );
      courseList.add(new Course("HONR", 192, 'X', 0.5, "NONE") );
   }
   
   
   /*
    * This method prints all of the courses in the courseList.
    */
   public void printAllCourses()
   {  
       System.out.println("Full course listing: ");
       for (int i=0; i< courseList.size(); i++)
          courseList.get(i).displayCourse();
       System.out.println();
   }
   
   
   public void printFullCredit(){
       for(int i = 0; i < courseList.size(); i++)
        if(courseList.get(i).getCredit() == 1.0)
            courseList.get(i).displayCourse();
    }
    
   public void printSpecifiedDistArea(String distributionArea){
       for(int i = 0; i < courseList.size(); i++){ 
           if(distributionArea == "SS")
                if( courseList.get(i).getDistArea() == "SS" );
                    courseList.get(i).displayCourse();
           else if(distributionArea == "SM")
                courseList.get(i).displayCourse();
           else if(distributionArea == "AH")
                courseList.get(i).displayCourse(); 
           else if(distributionArea == "LA")
                courseList.get(i).displayCourse();
           else if(distributionArea == "NONE")
                System.out.println("Error, invalid distribution area.");
        }
    }
      
    
   public void cscCourses(){
       for(int i = 0; i < courseList.size(); i++)
        if( (courseList.get(i).getDepartment() == "CSC")&&(courseList.get(i).getCourseNumber()!=197) )
            courseList.get(i).displayCourse();
    }
   
   public void creditSum(){
       int sum = 0;
       for (int i = 0; i < courseList.size(); i++)
            sum += courseList.get(i).getCredit();
       System.out.println("The sum of the credits in ArrayList is: " + sum);
    }
}

