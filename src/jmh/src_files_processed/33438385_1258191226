import java.util.GregorianCalendar;
import java.util.ArrayList;
import java.lang.Object;


import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.layout.Region;
import javafx.scene.control.Control;
import javafx.scene.control.ComboBoxBase;

import java.awt.geom.RectangularShape;

import javax.imageio.ImageIO;
import javax.swing.*;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JTextField;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.JButton;
import javafx.scene.control.ComboBox;


public class MainScreen extends JFrame{
  private JButton login;
  private BufferedImage toBufferedImage(String path, int x, int y){
        /**
         * Resizes an image using a Graphics2D object backed by a BufferedImage.
         * @param srcImg - source image to scale
         * @param w - desired width
         * @param h - desired height
         * @return - the new resized image
         */
    
        int finalw = x;
        int finalh = y;
        double factor = 1.0d;
        BufferedImage src = null;
        try {
            File file = new File(path);
            src = ImageIO.read(file);
                    
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        if(src.getWidth() > src.getHeight()){
            factor = ((double)src.getHeight()/(double)src.getWidth());
            finalh = (int)(finalw * factor);                
        }else{
            factor = ((double)src.getWidth()/(double)src.getHeight());
            finalw = (int)(finalh * factor);
        }   
    
        BufferedImage resizedImg = new BufferedImage(finalw, finalh, BufferedImage.TRANSLUCENT);
        Graphics2D g2 = resizedImg.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(src, 0, 0, finalw, finalh, null);
        g2.dispose();
        return resizedImg;
  }
  

  public void showScreen(){
        login.setText("Terminar");    
        setEnabled(true);
        setVisible(true);
  }
  
  public  MainScreen(Imoobiliaria imo){ 
        /**imo = new Imoobiliaria();**/
        
        
        
      
        setTitle("ImOObiliaria");
        setSize(1100,600); 
        setResizable(false); 
        setLocationRelativeTo(null);
        
      
      
        
        
        BufferedImage image = null;
        int x = 250;
        int y = 250;
        
        
        JPanel p = new JPanel();
        
        
      
        JLabel label1 = new JLabel("ImOObiliaria - POO Grupo 28", SwingConstants.CENTER); 
        label1.setBounds(200,30,700,50); 
        label1.setFont(new Font("Serif", Font.PLAIN, 40)); 
        p.add(label1); 

        image = toBufferedImage("imagens/01_Leonardo.jpg", x, y);
        JLabel label22 = new JLabel(new ImageIcon(image));
        label22.setBounds(100,100,x,y);
        p.add(label22);
        JLabel label2 = new JLabel("Leonardo Fangueiro - A75878", SwingConstants.CENTER); 
        label2.setBounds(100,350,x,50);
        p.add(label2);
        
        image = toBufferedImage("imagens/01_Franco.png", 300, 300);
        JLabel label33 = new JLabel(new ImageIcon(image));
        label33.setBounds(425,100,x,y); 
        p.add(label33);
        JLabel label3 = new JLabel("Paulo Franco - A75871", SwingConstants.CENTER); 
        label3.setBounds(425,350,x,50);
        p.add(label3);
        
        image = toBufferedImage("imagens/01_Goncalves.png", 300, 300);
        JLabel label44 = new JLabel(new ImageIcon(image));
        label44.setBounds(750,100,x,y);
        p.add(label44);
        JLabel label4 = new JLabel("Paulo Gonçalves - A75875", SwingConstants.CENTER); 
        label4.setBounds(750,350,x,50);
        p.add(label4);
      
        JButton fechar = new JButton("Fechar");
        fechar.setBounds(0,0,100,30); 
        p.add(fechar); 
      
        
        login = new JButton("Iniciar");
        login.setBounds(900,0,100,30); 
        p.add(login); 
       
        
        
        JButton regis = new JButton("Registar");
        regis.setBounds(1000,0,100,30); 
        p.add(regis); 
       
        JButton pesquisar = new JButton("Pesquisar"); 
        pesquisar.setBounds(900,450,130,80); 
        p.add(pesquisar);
       

        String[] tipo = {"Todos", "Moradia", "Apartamento", "Loja", "Terreno"};
        JComboBox<String> cb_Tipo = new JComboBox<String>(tipo);
        cb_Tipo.setSelectedIndex(0);
        cb_Tipo.setBounds(100,450,130,30);
        p.add(cb_Tipo);
        
        


        

        
        
        
        
        
        
      
      
        
        p.setLayout(null); 
        getContentPane().add(p);
        setVisible(true);

        cb_Tipo.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if ("Loja" == String.valueOf(cb_Tipo.getSelectedItem())){
                    JRadioButton rb_Habitavel;
                    p.add(rb_Habitavel = new JRadioButton("Habitável"));
                    p.add(rb_Habitavel = new JRadioButton("Todas"));
                    rb_Habitavel.setBounds(100,500,130,30);
                    System.out.println("Loja == " + String.valueOf(cb_Tipo.getSelectedItem()));
                }
            }
        });
        
        
        

        
      
        login.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                if(login.getText().equals("Iniciar")){
                    setEnabled(false);
                    Login_Panel loginP = new Login_Panel();
                    loginP.showLogin(imo, MainScreen.this);
                }else{
                    imo.fechaSessao();
                    login.setText("Iniciar");
                }
            }
        });
     
      
        regis.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                setEnabled(false);
                Registo_Panel registo = new Registo_Panel();
                registo.showRegisto(imo, MainScreen.this);
            }
        });
      
        pesquisar.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                setVisible(false);
                Imooveis_Panel listaImooveisP = new Imooveis_Panel();
                listaImooveisP.showListImooveis(imo, MainScreen.this);
                
                
                
                
            }
        });
        

        fechar.addActionListener(new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e) {
                try{
                 imo.gravar("GravaTeste");
                 setDefaultCloseOperation(3); 
                 dispose();
               }catch (IOException e) {
                   e.printStackTrace();
               }
        });
      
      
      
      
        
 
       
       
   
  } 
  
 
  
   
}