/**
 * #### ####### ######### ### ##### ## ### ####, ######### ### #####, ### #######, ### ####### ######
 * ### ### ####### ## ##### ######.
 *
 * ####### ### ########### #### ##### # ### #### #### ### ### ####### ## ### #### ## ##########.
 * ########## ### ##### ##### ## #### #### ##### ## #### #####.
 *
 * @###### ###### #######
 * @####### #.#
 */

public interface Game
    {
        private Player player1;
        private Player player2;
        private Board 
        public Game(Player player1Name, Player player2Name){
            player1 = player1Name;
            player2 = player2Name;
            
        }
        Player getCurrentPlayer();
        
        int getCurrentPlayerNum();
        
        Board getCurrentBoard();
        
        
        /**
         @return 1 or 2 corresponding to the winning player, if the game is over and won. Return 0 if the game is over and it is a draw. Return a negative value if the game is not over.
         **/
        
        int getResult();
        
        /**
         * @return true if the current board position has occurred before in the history of the game.
         **/
        
        boolean positionRepeated();
        
        /**
         * Get a move from the current player and update the board and current player
         */
        void nextMove() throws InvalidHouseException, InvalidMoveException;
        
        /**
         * override the toString method to provide a summary of the game state (including the board)
         **/
        String toString();
    }